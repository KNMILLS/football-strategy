{"version":3,"mappings":";mxDAAaA,GAA0C,CACrD,EAAG,sBACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,KACL,EAIO,SAASC,EAAOC,EAAkB,CACvC,OAAO,KAAK,MAAMA,EAAA,EAAQ,CAAC,EAAI,CACjC,CAOO,SAASC,EAAgBD,EAAkB,CAChD,MAAME,EAAOH,EAAOC,CAAG,EACjBG,EAAQL,GAAgBI,CAAI,EAClC,GAAI,CAACC,EAAO,MAAO,IACnB,GAAIA,EAAM,SAAS,KAAK,EAGtB,MAAO,IADOJ,EAAOC,CAAG,EAAI,GAG9B,MAAMI,EAAID,EAAM,MAAM,SAAS,EAC/B,OAAOC,GAAKA,EAAE,CAAC,EAAI,SAASA,EAAE,CAAC,EAAG,EAAE,EAAI,EAC1C,CAEO,SAASC,GAAwBL,EAA0B,CAChE,MAAME,EAAOH,EAAOC,CAAG,EACjBM,EAAY,CAACJ,CAAI,EAEjBC,EAAQL,GAAgBI,CAAI,EAClC,IAAIK,EAEJ,GAAI,CAACJ,EACHI,EAAS,WACAJ,EAAM,SAAS,KAAK,EAAG,CAEhC,MAAMK,EAAYT,EAAOC,CAAG,EAC5BM,EAAU,KAAKE,CAAS,EACxBD,EAAS,GAAMC,EAAY,EAC7B,KAAO,CACL,MAAMJ,EAAID,EAAM,MAAM,SAAS,EAC/BI,EAASH,GAAKA,EAAE,CAAC,EAAI,SAASA,EAAE,CAAC,EAAG,EAAE,EAAI,EAC5C,CAEA,MAAO,CAAE,OAAAG,EAAQ,UAAAD,CAAA,CACnB,8KClDaG,GAAwD,CACnE,EAAG,UACH,EAAG,eACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,GAAI,GACJ,GAAI,KACJ,GAAI,QACN,EAGaC,GAAiD,CAC5D,EAAG,CAAE,WAAY,SAAU,KAAM,IACjC,EAAG,CAAE,WAAY,SAAU,KAAM,IACjC,EAAG,CAAE,WAAY,WAAY,KAAM,IACnC,EAAG,CAAE,WAAY,WAAY,KAAM,IACnC,EAAG,CAAE,WAAY,WAAY,KAAM,IACnC,EAAG,CAAE,WAAY,WAAY,KAAM,GACrC,EAIO,SAASC,GAAqBC,EAAsBZ,EAAyB,CAClF,OAAI,OAAOY,GAAQ,SAAiB,CAAE,SAAUA,EAAK,SAAU,IAC3DA,IAAQ,KAAa,CAAE,SAAU,KAAK,IAAIX,EAAgBD,CAAG,EAAG,EAAE,EAAG,SAAU,IAC/EY,IAAQ,SAAiB,CAAE,SAAU,KAAK,IAAIX,EAAgBD,CAAG,EAAI,EAAG,EAAE,EAAG,SAAU,IACpF,CAAE,SAAU,GAAI,SAAU,GACnC,CAEO,SAASa,GACdb,EACAc,EACe,CACf,GAAIA,EAAK,OAAQ,CACf,IAAIZ,EAAOH,EAAOC,CAAG,EACjBc,EAAK,sBAAqBZ,EAAO,KAAK,IAAI,EAAGA,EAAO,CAAC,GACzD,MAAMC,EAAQO,GAAkBR,CAAI,GAAK,CAAE,WAAY,WAAY,KAAM,IACzE,MAAO,CAAE,SAAUC,EAAM,KAAM,SAAUA,EAAM,aAAe,SAChE,CACA,IAAID,EAAOH,EAAOC,CAAG,EAAID,EAAOC,CAAG,EAC/BG,EAAQM,GAAqBP,CAAI,EACjCa,EAAW,GACXC,EAAU,GACd,GAAI,OAAOb,GAAU,UAAYA,EAAM,SAAS,GAAG,EAAG,CAChD,UAAU,KAAKA,CAAK,IAAGY,EAAW,IAClC,WAAW,KAAKZ,CAAK,IAAGa,EAAU,IAEtCb,EAASA,EAAiB,QAAQ,IAAK,EAAE,EAAE,OAE3C,MAAMc,EAASlB,EAAOC,CAAG,EAAID,EAAOC,CAAG,EACvC,IAAIkB,EAAOT,GAAqBQ,CAAM,EAClC,OAAOC,GAAS,UAAYA,EAAK,SAAS,GAAG,IAC3C,UAAU,KAAKA,CAAI,IAAGH,EAAW,IACjC,WAAW,KAAKG,CAAI,IAAGF,EAAU,IACrCE,EAAOA,EAAK,QAAQ,IAAK,EAAE,EAAE,QAE/Bf,EAAQe,CACV,CACA,MAAMC,EAASR,GAAqBR,EAAcH,CAAG,EACrD,IAAIoB,EAAYD,EAAO,SACvB,OAAIH,IAASI,EAAY,KAAK,IAAI,EAAGD,EAAO,SAAW,EAAE,GAClD,CAAE,SAAUC,EAAW,SAAAL,CAAA,CAChC,4LCnEaM,GAA8C,CACzD,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC9E,EAEaC,GAA4E,CACvF,EAAG,CAAE,KAAM,MACX,EAAG,CAAE,MAAO,IACZ,EAAG,CAAE,MAAO,IACZ,EAAG,CAAE,MAAO,IACZ,EAAG,CAAE,MAAO,IACZ,EAAG,CAAE,MAAO,GACZ,EAAG,CAAE,MAAO,GACZ,EAAG,CAAE,MAAO,GACZ,GAAI,CAAE,MAAO,GACb,GAAI,CAAE,MAAO,GACb,GAAI,CAAE,KAAM,KACd,EAkBO,SAASvB,EAAOC,EAAkB,CAAE,OAAO,KAAK,MAAMA,EAAA,EAAQ,CAAC,EAAI,CAAG,CAEtE,SAASuB,GAAYC,EAAkBxB,EAAUC,EAAoD,CAC1G,MAAMwB,EAAkBD,EAAI,cAAgB,SAEtCE,EAAW3B,EAAOC,CAAG,EAAID,EAAOC,CAAG,EACnC2B,EAAeN,GAAoBK,CAAQ,GAAK,GACtD,IAAIE,EAASJ,EAAI,QAAUC,EAAkBE,EAAe,CAACA,GAE7D,GAAIC,EAAS,KAAOA,EAAS,GAAKA,IAAW,KAAOA,IAAW,EAI7D,MAAO,CAAE,QAHSH,EAAkB,KAAO,YAEZ,SAAW,GAAK,GACpB,gBAAiB,GAAM,6BAA8B,GAAO,UAAW,GAAM,SAAUE,EAAc,YAAa,EAAG,WAAY,OAG9J,MAAME,EAAU9B,EAAOC,CAAG,EAAID,EAAOC,CAAG,EAClC8B,EAAMR,GAAkBO,CAAO,GAAK,CAAE,MAAO,GACnD,IAAIE,EAAc,EACdC,EAAiB,GAgBrB,OAfIF,EAAI,OAAS,KACfC,EAAc,EAELD,EAAI,OAAS,KACtBC,EAAc9B,EAAgBD,CAAG,GAEjC+B,EAAcD,EAAI,OAAS,EACvBD,GAAW,GACT7B,EAAA,EAAQ,MACVgC,EAAiBhC,IAAQ,KAI3ByB,EAAiBG,GAAUG,EAAkBH,GAAUG,EAC3DH,EAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKA,CAAM,CAAC,EACtCI,EAEK,CAAE,OAAAJ,EAAQ,gBAAiB,GAAO,6BAA8B,GAAM,UAAW,GAAO,SAAUD,EAAc,YAAAI,EAAa,WAAYD,EAAI,KAAOA,EAAI,KAAO,OAEjK,CAAE,OAAAF,EAAQ,gBAAiB,GAAM,6BAA8B,GAAO,UAAW,GAAO,SAAUD,EAAc,YAAAI,EAAa,WAAYD,EAAI,KAAOA,EAAI,KAAO,MACxK,yKC1EaG,GAA6D,CACxE,EAAG,CAAE,IAAK,KAAM,OAAQ,KAAM,QAAS,KAAM,QAAS,IAAK,QAAS,IAAK,QAAS,KAClF,EAAG,CAAE,IAAK,IAAM,OAAQ,KAAM,QAAS,KAAM,QAAS,KAAM,QAAS,IAAK,QAAS,MACnF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,KAAM,QAAS,KAAM,QAAS,KAAM,QAAS,MACpF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,IAAM,QAAS,KAAM,QAAS,KAAM,QAAS,MACpF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,IAAM,QAAS,IAAM,QAAS,KAAM,QAAS,MACpF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,IAAM,QAAS,IAAM,QAAS,IAAM,QAAS,MACpF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,IAAM,QAAS,IAAM,QAAS,KAAM,QAAS,MACpF,EAAG,CAAE,IAAK,IAAM,OAAQ,IAAM,QAAS,IAAM,QAAS,KAAM,QAAS,KAAM,QAAS,MACpF,GAAI,CAAE,IAAK,IAAK,OAAQ,IAAM,QAAS,IAAM,QAAS,KAAM,QAAS,KAAM,QAAS,MACpF,GAAI,CAAE,IAAK,IAAK,OAAQ,IAAM,QAAS,KAAM,QAAS,KAAM,QAAS,IAAM,QAAS,MACpF,GAAI,CAAE,IAAK,KAAK,OAAQ,KAAM,QAAS,IAAM,QAAS,IAAM,QAAS,IAAM,QAAS,IACtF,EAEO,SAASlC,EAAOC,EAAkB,CAAE,OAAO,KAAK,MAAMA,EAAA,EAAQ,CAAC,EAAI,CAAG,CAEtE,SAASkC,GAAWlC,EAAmB,CAC5C,MAAME,EAAOH,EAAOC,CAAG,EAAID,EAAOC,CAAG,EAErC,OADYiC,GAAiB/B,CAAI,GAAK,IAC3B,MAAQ,GACrB,CAEO,SAASiC,GAAiBnC,EAAUoC,EAA+B,CACxE,MAAMC,EAAK,KAAK,MAAMD,CAAY,EAClC,IAAIE,EAAqB,KAOzB,GANID,GAAM,GAAIC,EAAM,OACXD,GAAM,GAAIC,EAAM,QAChBD,GAAM,GAAIC,EAAM,QAChBD,GAAM,GAAIC,EAAM,QAChBD,GAAM,GAAIC,EAAM,QACpBA,EAAM,KACP,CAACA,EAAK,MAAO,GACjB,MAAMpC,EAAOH,EAAOC,CAAG,EAAID,EAAOC,CAAG,EAErC,OADYiC,GAAiB/B,CAAI,GAAK,IAC3BoC,CAAG,IAAM,GACtB,oKCnBaC,EAAuB,CAClC,UAAW,GACX,WAAY,GACZ,KAAM,GACN,YAAa,GACb,WAAY,GACZ,aAAc,GACd,QAAS,GACT,OAAQ,GACR,QAAS,GACT,UAAW,GACX,KAAM,GACN,WAAY,CACd,EAOO,SAASC,GAAkBC,EAAgCxC,EAAuCD,EAAmB,CAE1H,OADe0C,GAA0BD,EAAKxC,EAAiBD,CAAG,EACpD,OAChB,CAEO,SAAS0C,GAA0BD,EAAgCxC,EAAuCD,EAAuB,CACtI,MAAM2C,EAAmB,CAAE,MAAO,EAAG,QAAS,KAAM,SAAU,GAAO,gBAAiB,EAAG,UAAW,IACpG,IAAIrC,EAEJ,GAAI,CAACmC,EAAK,MAAO,CAAE,QAAAE,CAAA,EAEnB,MAAMC,EAAIH,EAAI,OAId,GAHAE,EAAQ,IAAMC,EACdD,EAAQ,YAAc,SAAS,KAAKC,CAAC,EAEjC,cAAc,KAAKA,CAAC,EACtB,OAAAD,EAAQ,SAAW,aACZ,CAAE,QAAAA,CAAA,EAGX,GAAI,UAAU,KAAKC,CAAC,EAClB,OAAAD,EAAQ,SAAW,GACnBA,EAAQ,SAAW,SACZ,CAAE,QAAAA,CAAA,EAGX,GAAI,aAAa,KAAKC,CAAC,EAAG,CACxBD,EAAQ,SAAW,GACnBA,EAAQ,SAAW,eACnB,MAAMvC,EAAIwC,EAAE,MAAM,UAAU,EAC5B,OAAIxC,IAAGuC,EAAQ,gBAAkB,SAASvC,EAAE,CAAC,EAAG,EAAE,GAC3C,CAAE,QAAAuC,CAAA,CACX,CAEA,GAAI,WAAW,KAAKC,CAAC,EAAG,CACtB,MAAMxC,EAAIwC,EAAE,MAAM,SAAS,EACrBC,EAAQzC,EAAI,SAASA,EAAE,CAAC,EAAG,EAAE,EAAI,EACjC0C,EAAYD,EAAQ,EAC1B,OAAAF,EAAQ,QAAU,CAAE,GAAIG,EAAY,UAAY,UAAW,MAAO,KAAK,IAAID,CAAK,EAAG,UAAW,cAAc,KAAKD,CAAC,GAClHD,EAAQ,SAAW,UACZ,CAAE,QAAAA,CAAA,CACX,CAEA,GAAI,QAAQ,KAAKC,CAAC,EAAG,CACnB,MAAMxC,EAAIwC,EAAE,MAAM,MAAM,EACxB,OAAIxC,IAAGuC,EAAQ,MAAQ,SAASvC,EAAE,CAAC,EAAG,EAAE,GACxCuC,EAAQ,SAAW,OACZ,CAAE,QAAAA,CAAA,CACX,CAEA,GAAI,KAAK,KAAKC,CAAC,EAAG,CAChB,MAAMG,EAAa1C,GAAwBL,CAAG,EAC9C,OAAA2C,EAAQ,MAAQI,EAAW,OAC3BJ,EAAQ,SAAW,OACnBrC,EAAYyC,EAAW,UAChB,CAAE,QAAAJ,EAAS,UAAArC,CAAA,CACpB,CAEA,MAAM0C,EAAWJ,EAAE,MAAM,UAAU,EACnC,GAAII,EACF,OAAAL,EAAQ,MAAQ,SAASK,EAAS,CAAC,EAAG,EAAE,EACxCL,EAAQ,SAAWA,EAAQ,MAAQ,EAAI,OAAS,OACzC,CAAE,QAAAA,CAAA,EAGX,MAAMM,EAAgBL,EAAE,MAAM,qBAAqB,EACnD,GAAIK,EAAe,CACjB,MAAMC,EAAKD,EAAc,CAAC,EAAE,MAAM,SAAS,EAC3C,OAAIC,IAAIP,EAAQ,MAAQ,SAASO,EAAG,CAAC,EAAG,EAAE,GAC1CP,EAAQ,SAAWA,EAAQ,MAAQ,EAAI,OAAS,OACzC,CAAE,QAAAA,CAAA,CACX,CAEA,OAAAA,EAAQ,SAAW,QACZ,CAAE,QAAAA,CAAA,CACX,CAEO,SAASQ,GAAiBR,EAAqCS,EAAeb,EAA8B,CACjH,GAAI,CAACI,EAAS,OAAOS,EAAa,UAClC,GAAIT,EAAQ,YAAa,OAAOS,EAAa,YAC7C,OAAQT,EAAQ,UACd,IAAK,aAAc,OAAOS,EAAa,WACvC,IAAK,eAAgB,OAAOA,EAAa,aACzC,IAAK,SAAU,OAAOA,EAAa,OACnC,IAAK,UAAW,OAAOA,EAAa,QACpC,IAAK,OAAQ,OAAOA,EAAa,KACjC,IAAK,OAAQ,OAAO,KAAK,IAAIT,EAAQ,KAAK,EAAI,GAAKS,EAAa,WAAaA,EAAa,UAC1F,QAAS,OAAOA,EAAa,UAEjC,kMC3HO,SAASC,GAAqBV,EAAkBW,EAAsBC,EAAuBC,EAAkBjB,EAAqC,CAEzJ,IAAIkB,EAAUN,GAAiBR,EAASa,CAAS,EACjD,GAAIF,EAAa,CACf,MAAMI,EAAef,EAAQ,WAAa,aACpCgB,EAAQ,CAAC,CAAChB,EAAQ,aACpBe,GAAgBC,GAASJ,KAC3BE,EAAU,EAEd,CACA,OAAOA,CACT,uICGO,MAAMG,EAAgB,CACnB,OAER,YAAYC,EAA0C,GAAI,CAExD,KAAK,OAAS,CACZ,QAAS,GACT,SAAU,MACV,kBAAmB,UACnB,YAAa,aACb,iBAAkB,IAClB,UAAW,IACX,cAAe,IACf,SAAU,aAAa,KAAK,KAAK,UACjC,sBAAuB,GACvB,cAAe,GACf,GAAG,KAAK,yBACR,GAAGA,CAAA,CAEP,CAKA,WAAqB,CACnB,OAAO,KAAK,OAAO,OACrB,CAKA,aAA8C,CAC5C,OAAO,KAAK,OAAO,QACrB,CAKA,sBAAsD,CACpD,OAAO,KAAK,OAAO,iBACrB,CAKA,gBAA+C,CAC7C,OAAO,KAAK,OAAO,WACrB,CAKA,qBAA8B,CAC5B,OAAO,KAAK,OAAO,kBAAoB,GACzC,CAKA,cAAuB,CACrB,OAAO,KAAK,qBACd,CAKA,cAAuB,CACrB,OAAO,KAAK,OAAO,WAAa,GAClC,CAKA,kBAA2B,CACzB,OAAO,KAAK,OAAO,eAAiB,GACtC,CAKA,aAAsB,CACpB,OAAO,KAAK,OAAO,UAAY,aAAa,KAAK,KAAK,SACxD,CAKA,0BAAoC,CAClC,OAAO,KAAK,OAAO,wBAA0B,EAC/C,CAKA,kBAA6B,CAC3B,OAAO,KAAK,OAAO,eAAiB,EACtC,CAKA,aAAaC,EAAkD,CAC7D,KAAK,OAAS,CAAE,GAAG,KAAK,OAAQ,GAAGA,CAAA,CACrC,CAKA,OAAOD,EAA0C,GAAU,CACzD,KAAK,OAAO,QAAU,GACtB,KAAK,aAAaA,CAAM,CAC1B,CAKA,SAAgB,CACd,KAAK,OAAO,QAAU,GACtB,KAAK,OAAO,SAAW,KACzB,CAKA,YAAYE,EAA6C,CACvD,KAAK,OAAO,SAAWA,EACnBA,IAAU,MACZ,KAAK,OAAO,QAAU,GAEtB,KAAK,OAAO,QAAU,EAE1B,CAKA,qBAAqBC,EAAkD,CACrE,KAAK,OAAO,kBAAoBA,CAClC,CAKA,eAAeC,EAA0C,CACvD,KAAK,OAAO,YAAcA,CAC5B,CAKA,uBAAwB,CACtB,MAAO,CACL,SAAU,KAAK,OAAO,SACtB,SAAU,KAAK,OAAO,SACtB,eAAgB,KAAK,OAAO,oBAAsB,OAClD,cAAe,KAAK,OAAO,cAE/B,CAKA,WAAoC,CAClC,MAAO,CAAE,GAAG,KAAK,OACnB,CAKA,OAAO,iBAAmC,CACxC,MAAMC,EAAM,OAAO,QAAY,IAAcC,GAAc,GAErDN,EAA0C,GAUhD,GAPIK,EAAI,oBAAsB,OAC5BL,EAAO,QAAU,GACRK,EAAI,oBAAsB,UACnCL,EAAO,QAAU,IAIfK,EAAI,oBAAqB,CAC3B,MAAMH,EAAQG,EAAI,oBAAoB,cAClC,CAAC,MAAO,QAAS,YAAY,EAAE,SAASH,CAAK,IAC/CF,EAAO,SAAWE,EAEtB,CAGA,GAAIG,EAAI,iBAAkB,CACxB,MAAME,EAASF,EAAI,iBAAiB,cAChC,CAAC,UAAW,OAAQ,QAAQ,EAAE,SAASE,CAAM,IAC/CP,EAAO,kBAAoBO,EAE/B,CAGA,GAAIF,EAAI,uBAAwB,CAC9B,MAAMD,EAAOC,EAAI,uBAAuB,cACpC,CAAC,cAAe,YAAY,EAAE,SAASD,CAAI,IAC7CJ,EAAO,YAAcI,EAEzB,CAGA,GAAIC,EAAI,qBAAsB,CAC5B,MAAMG,EAAY,SAASH,EAAI,qBAAsB,EAAE,EACnD,CAAC,MAAMG,CAAS,GAAKA,EAAY,IACnCR,EAAO,iBAAmBQ,EAE9B,CAGA,GAAIH,EAAI,qBAAsB,CAC5B,MAAMI,EAAY,SAASJ,EAAI,qBAAsB,EAAE,EACnD,CAAC,MAAMI,CAAS,GAAKA,EAAY,IACnCT,EAAO,UAAYS,EAEvB,CAGA,GAAIJ,EAAI,yBAA0B,CAChC,MAAMK,EAAgB,SAASL,EAAI,yBAA0B,EAAE,EAC3D,CAAC,MAAMK,CAAa,GAAKA,EAAgB,IAC3CV,EAAO,cAAgBU,EAE3B,CAEA,OAAO,IAAIX,GAAgBC,CAAM,CACnC,CAKQ,wBAA0D,CAKhE,OAHsB,OAAO,QAAY,KACIM,GAAY,OAGhD,CACL,QAAS,GACT,SAAU,QACV,YAAa,eAKV,CACL,QAAS,GACT,SAAU,MACV,YAAa,aAEjB,CACF,CAKO,MAAMK,GAAwBZ,GAAgB,kBChK9C,MAAMa,EAAS,CACZ,UAAgE,GAExE,GAA6BC,EAAUC,EAA2C,CAChF,MAAMC,EAAO,KAAK,UAAUF,CAAK,IAAM,GACtC,OAAAE,EAAY,KAAKD,CAAc,EACzB,IAAM,CACX,MAAME,EAAKD,EAAY,QAAQD,CAAc,EACzCE,GAAK,GAAGD,EAAI,OAAOC,EAAG,CAAC,CAC7B,CACF,CAEA,KAA+BH,EAAUI,EAA4B,CACnE,MAAMF,EAAM,KAAK,UAAUF,CAAK,EAChC,GAAKE,EACL,UAAWG,KAAKH,EAAKG,EAAED,CAAc,CACvC,CACF,CCrHO,MAAME,EAAmB,CAO9B,YACUC,EACApB,EACR,CAFQ,cAAAoB,EACA,YAAApB,EAER,KAAK,UAAY,KAAK,oBACtB,KAAK,OAAS,KAAK,iBACnB,KAAK,UAAYA,EAAO,WAC1B,CAbQ,OAA2B,GAC3B,UACA,OACA,aAAe,EACf,UAAY,GAcpB,cAAqB,CACd,KAAK,YAEV,KAAK,OAAS,KAAK,iBACnB,KAAK,aAAe,EACpB,KAAK,OAAS,GAGd,KAAK,sBACP,CAKA,gBAAmC,CACjC,OAAK,KAAK,WAEV,KAAK,wBACE,CAAC,GAAG,KAAK,MAAM,GAHM,EAI9B,CAKA,eAAeqB,EAON,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAAuB,CAC3B,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,YACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,wBAAwBQ,EAWf,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAAgC,CACpC,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,qBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,sBAAsBQ,EASb,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAA8B,CAClC,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,mBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,mBAAmBQ,EAaV,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAA2B,CAC/B,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,gBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,sBAAsBQ,EAKb,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAA8B,CAClC,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,oBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,mBAAmBQ,EAMV,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAAsB,CAC1B,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,gBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,iBAAiBQ,EAMR,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAAyB,CAC7B,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,cACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,uBAAuBQ,EAOd,CAIP,GAHI,CAAC,KAAK,WAGN,KAAK,OAAO,cAAgB,KAAK,OAAO,QAAU,KAAK,OAAO,eAChE,OAGF,MAAMR,EAA+B,CACnC,UAAW,KAAK,MAChB,QAAS,KAAK,kBACd,UAAW,KAAK,UAChB,OAAQ,KAAK,OACb,UAAW,oBACX,GAAGQ,CAAA,EAGL,KAAK,OAAO,KAAKR,CAAK,CACxB,CAKA,WAA8B,CAC5B,MAAO,CAAC,GAAG,KAAK,MAAM,CACxB,CAKA,aAAoB,CAClB,KAAK,OAAS,GACd,KAAK,aAAe,CACtB,CAEQ,qBAA4B,CAElC,KAAK,SAAS,GAAG,gBAAkBI,GAAY,CAC7C,KAAK,eAAe,CAClB,UAAWA,EAAQ,SAAS,WAAa,UACzC,aAAcA,EAAQ,SAAS,cAAgB,UAC/C,SAAUA,EAAQ,SAAS,UAAY,UACvC,WAAYA,EAAQ,WACpB,SAAUA,EAAQ,SAAS,SAC3B,WAAYA,EAAQ,SAAS,WAC9B,CACH,CAAC,EAGD,KAAK,SAAS,GAAG,eAAiBA,GAAY,CAG9C,CAAC,CACH,CAEQ,uBAA8B,CAGtC,CAEQ,mBAA4B,CAElC,MAAO,WAAW,KAAK,KAAK,IAAI,KAAK,YAAY,EACnD,CAEQ,gBAAyB,CAE/B,MAAO,QAAQ,KAAK,KAAK,IAAI,KAAK,YAAY,EAChD,CAEQ,iBAA0B,CAChC,MAAO,OAAO,KAAK,cAAc,IAAI,KAAK,KAAK,EACjD,CACF,CC/VO,MAAMK,GAA6E,CAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAEvIC,GAA2C,CACtD,YAAa,EACb,gBAAiB,EACjB,eAAgB,EAChB,QAAW,EACX,aAAc,EACd,aAAc,EACd,QAAW,EACX,gBAAiB,EACjB,QAAW,EACX,eAAgB,CAClB,EAEaC,GAA8D,CACzE,YAAa,WACb,eAAgB,cAChB,eAAgB,aAClB,EAEaC,GAA6C,CACxD,oBAAqB,kBACrB,gBAAiB,gBACnB,EAGA,IAAIC,EAAgD,KAK7C,SAASC,GAAoBP,EAA0B,CACxDT,GAAsB,cACxBe,EAAqB,IAAIP,GAAmBC,EAAUT,EAAqB,EAE/E,CAKO,SAASiB,IAAmD,CACjE,OAAOF,CACT,CAUO,SAASG,GAA2BR,EAAgC,CACzE,KAAM,CAAE,SAAAS,EAAU,UAAAC,EAAW,aAAAC,EAAc,OAAAC,EAAQ,IAAA9F,GAAQkF,EACrDa,EAAgBV,GAA+BM,CAAQ,GAAMA,EAC7DK,EAAeV,GAAmBM,CAAS,GAAKA,EAChDK,EAASb,GAAiBS,CAAY,EACtCK,EAAaD,GAAU,KAAOd,GAAkBc,CAAM,EAAI,OAC1DE,EAAOL,IAASC,CAAmC,EACnDK,EAAOD,EAAOA,EAAKH,CAAY,EAAI,OACnCK,EAAYH,GAAaE,EAAOA,EAAKF,CAAS,EAAI,KAGxD,GAAIX,GAAsBc,EAAW,CAEnC,MAAMC,EAAc5D,GAA0B2D,EAAWE,EAAWvG,CAAG,EAGvE,GAAIsG,EAAY,WAAaA,EAAY,UAAU,OAAS,EAAG,CAE7D,MAAMhG,EAAYgG,EAAY,UACxBE,EAAKlG,EAAU,CAAC,GAAK,EACrBmG,EAAKnG,EAAU,CAAC,GAAKkG,EACrBE,EAAMpG,EAAU,OAAO,CAACqG,EAAKzG,IAASyG,EAAMzG,EAAM,CAAC,EACnD0G,EAAYJ,IAAOC,GAAMnG,EAAU,OAAS,EAElDiF,EAAmB,eAAe,CAChC,UAAAK,EACA,aAAAC,EACA,SAAAF,EACA,WAAY,CAAE,GAAAa,EAAI,GAAAC,EAAI,IAAAC,EAAK,UAAAE,CAAA,EAC3B,SAAU,OAAOb,CAAY,EAC7B,GAAIG,EAAY,CAAE,WAAYA,GAAc,EAAC,CAC9C,CACH,CAGA,OAAAX,EAAmB,wBAAwB,CACzC,UAAAK,EACA,aAAAC,EACA,SAAAF,EACA,QAAS,CACP,SAAUW,EAAY,QAAQ,UAAY,QAC1C,MAAOA,EAAY,QAAQ,MAC3B,QAASA,EAAY,QAAQ,SAAW,OACxC,gBAAiBA,EAAY,QAAQ,gBACrC,aAAcD,GAAa,OAC7B,CACD,EAEMC,EAAY,OACrB,CAEA,OAAO5D,GAA0B2D,EAAWE,EAAWvG,CAAG,EAAE,OAC9D,4QCvGO,SAAS6G,GAAerF,EAA0B,CACvD,MAAMsF,EAAOtF,EAAI,UAAY,GAAKA,EAAI,OAAS,IAE/C,IAAIuF,EAAMvF,EAAI,KAAO,GAAKA,EAAI,MAAQ,EAEtC,OAAIA,EAAI,MAAM,wBAA0BA,EAAI,KAAO,GAAKA,EAAI,OAAS,IAAMsF,IAAMC,EAAK,IAC/EA,CACT,CAEO,SAASC,GAAWxF,EAAiBxB,EAAgC,CAC1E,OAAI6G,GAAerF,CAAG,EAEb,CAAE,SADOxB,IAAQ,GACK,EAAI,GAI5B,CAAE,SADOA,IAAQ,IACK,EAAI,EACnC,qICZaiH,GAA+C,CAC1D,YAAa,CACX,KAAM,YACN,WAAY,GACZ,gBAAiB,IACjB,SAAU,IACV,uBAAwB,GACxB,iBAAkB,GAElB,oBAAqB,CACnB,aAAc,GACd,OAAU,IACV,WAAY,GACZ,WAAc,GACd,YAAa,IAEf,cAAe,GACf,0BAA2B,IAE7B,cAAe,CACb,KAAM,cACN,WAAY,GACZ,gBAAiB,IACjB,SAAU,IACV,uBAAwB,GACxB,iBAAkB,GAElB,oBAAqB,CACnB,aAAc,GACd,OAAU,GACV,WAAY,GACZ,WAAc,IACd,YAAa,IAEf,cAAe,GACf,0BAA2B,IAE7B,iBAAkB,CAChB,KAAM,iBACN,WAAY,IACZ,gBAAiB,EACjB,SAAU,KACV,uBAAwB,GACxB,iBAAkB,GAElB,oBAAqB,CACnB,aAAc,GACd,OAAU,GACV,WAAY,GACZ,WAAc,GACd,YAAa,KAEf,cAAe,GACf,0BAA2B,GAE/B,kHC7BA,SAASC,GAAe7E,EAAY8E,EAA0D,CAC5F,UAAWC,KAAOD,EAChB,GAAI9E,GAAM+E,EAAI,OAAQ,OAAOA,EAAI,OAEnC,MAAO,EACT,CAEO,SAASC,GAAcC,EAAoBC,EAAgE,CAChH,MAAMJ,EAAoDG,EAAI,SAC9D,MAAO,CACL,SAASlF,EAAcZ,EAAK,CAC1B,IAAIgG,EAAIN,GAAe,KAAK,MAAM9E,CAAY,EAAG+E,CAAK,EAEtD,MAAMM,EAAO,KAAK,IAAIjG,EAAI,UAAY,CAAC,EACjCkG,GAAQlG,EAAI,UAAY,GAAK,EAAI,GAAKA,EAAI,UAAY,GAAK,EAAI,GAAK,EACtEkG,EAAO,IAAGF,GAAKF,EAAI,YAAY,qBAAuBG,EAAO,KAC7DC,EAAO,IAAGF,GAAKF,EAAI,YAAY,qBAAuBG,EAAO,KAC7DjG,EAAI,UAAY,UAASgG,GAAK,GAElC,MAAMG,EAAInG,EAAI,QAAU,MACxB,OAAImG,IAAM,UAASH,GAAKF,EAAI,YAAY,oBACpCK,IAAM,SAAQH,GAAKF,EAAI,YAAY,mBAChC,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGE,CAAC,CAAC,CACnC,EAEJ,CAkBO,SAASI,IAAyB,CAqBvC,MAAMC,EAAUR,GAnBgB,CAC9B,SAAU,CACR,CAAE,OAAQ,GAAI,OAAQ,KACtB,CAAE,OAAQ,GAAI,OAAQ,KACtB,CAAE,OAAQ,GAAI,OAAQ,KACtB,CAAE,OAAQ,GAAI,OAAQ,KACtB,CAAE,OAAQ,GAAI,OAAQ,IACtB,CAAE,OAAQ,GAAI,OAAQ,IAAK,EAE7B,YAAa,CACX,oBAAqB,KACrB,oBAAqB,IACrB,cAAe,IACf,YAAa,KACb,mBAAoB,IACpB,kBAAmB,KACrB,CAGoC,EAEtC,SAASS,EAAiBtG,EAA4D,CACpF,MAAMuG,EAAKvG,EAAI,SAAWqG,EAEpBG,EAAKxG,EAAI,aACTyG,EAAOzG,EAAI,kBAGX0G,EAAgB,IAAMF,EAAM,GAC5BG,EAAQJ,EAAG,SAASG,EAAc,EAAS,EAG3CE,EAAS5G,EAAI,UAAY,GAAMA,EAAI,UAAY,GAAKA,EAAI,mBAAqB,KAASA,EAAI,UAAY,GAAKA,EAAI,mBAAqB,IACpIsF,GAAQtF,EAAI,UAAY,GAAKA,EAAI,UAAY,IAAMA,EAAI,oBAAsB,IAC7E6G,EAAS7G,EAAI,oBAAsB,IACnC8G,EAAW9G,EAAI,WAAa,EAElC,GAAI4G,EAAO,CACT,GAAIJ,GAAM,GACR,OAAIC,GAAQ,EAAU,OAClBA,GAAQ,GAAKD,GAAM,IAAWG,GAAS,IAAO,aAC3C,OAET,GAAIH,GAAM,IAAMA,GAAM,GAEpB,OADIC,GAAQ,GACRA,GAAQ,EAAU,YACf,OAET,GAAID,GAAM,IAAMA,GAAM,GAEpB,OADIC,GAAQ,GACRA,GAAQ,EAAU,YACfE,GAAS,IAAO,aAAe,OAExC,GAAIH,GAAM,GAER,OADIC,GAAQ,GACRA,GAAQ,EAAU,YACfE,GAAS,IAAsBA,GAAS,GAAzB,aAA8C,WAExE,CAEA,OAAIrB,GAAQwB,IACNN,GAAM,IAAMC,GAAQ,GACpBD,GAAM,IAAMC,GAAQ,GACpBD,GAAM,IAAMC,GAAQ,IACpBD,EAAK,IAAMK,GAAUJ,GAAQ,GAAU,YAGzCnB,GAAQ,CAACwB,EACPN,GAAM,IAAMC,GAAQ,EAAU,YAC9BD,GAAM,KAAOxG,EAAI,MAAQ,GAAKA,EAAI,oBAAsB,IAAY2G,GAAS,IAAO,aAAe,OAChGA,GAAS,KAAQH,GAAM,GAAK,aAAe,OAIhDA,GAAM,GAAW,OAEdG,GAAS,IAAO,aAAgBF,GAAQ,EAAI,YAAc,MACnE,CAEA,SAASM,EAAU/G,EAAwF,CACzG,OAAIA,EAAI,QAAU,GAAKA,EAAI,mBAAqB,IAE1CA,EAAI,YAAc,GAAW,MAC1B,OAELA,EAAI,aAAe,GAAW,MAC9BA,EAAI,aAAe,GAAW,OAC9BA,EAAI,aAAe,GAAW,MAC3B,MACT,CAEA,SAASgH,EAAYhH,EAAqC,CACxD,MAAM8G,EAAW9G,EAAI,WAAa,EAC5BiH,EAAQjH,EAAI,YAAc,EAC1BsF,GAAQtF,EAAI,UAAY,GAAKA,EAAI,UAAY,IAAMA,EAAI,oBAAsB,IAC7E6G,EAAS7G,EAAI,oBAAsB,IACzC,OAAKsF,GAAQuB,IAAWC,EAAiB,CAAE,MAAO,aAC7CxB,GAAQuB,IAAWI,EAAc,CAAE,MAAO,cACxC,CAAE,MAAO,SAClB,CAEA,MAAO,CAAE,iBAAAX,EAAkB,UAAAS,EAAW,YAAAC,CAAA,CACxC,CC3LA,SAASE,GAAMC,EAAWC,EAAaC,EAAqB,CAC1D,OAAO,KAAK,IAAID,EAAK,KAAK,IAAIC,EAAKF,CAAC,CAAC,CACvC,CAEA,SAASG,GAAUC,EAAwBC,EAAuBC,EAAoC,CAGpG,OAF2BA,IAAe,WAAcD,EACZ,IAAMD,EAAkBA,GAC5C,EAC1B,CAIA,SAASG,GAAiBjB,EAAsC,CAC/D,OAAIA,GAAQ,EAAU,QAClBA,GAAQ,EAAU,OACf,QACR,CAEA,SAASkB,GAAgBC,EAAcC,EAA8BC,EAA4B,CAEhG,MAAO,GADG,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGF,CAAI,CAAC,CAC5B,IAAIC,CAAI,IAAIC,EAAY,KAAO,IAAI,EAC/C,CAEO,MAAMC,EAAuB,CAC3B,YAA6D,OAAO,OAAO,IAAI,EAC/E,OAAwC,CAAE,IAAK,EAAG,KAAM,GAEhE,OAAOC,EAAqBC,EAAwBjI,EAAqH,CAExK,GAAIgI,IAAS,UAAYhI,EAAI,aAAe,SAAU,OACtD,MAAMkI,EAAQZ,GAAUtH,EAAI,eAAgBA,EAAI,aAAcA,EAAI,UAAU,EACtEmG,EAAIwB,GAAgB3H,EAAI,KAAM0H,GAAiB1H,EAAI,IAAI,EAAGkI,CAAK,EAChE,KAAK,YAAY/B,CAAC,IAAG,KAAK,YAAYA,CAAC,EAAI,CAAE,IAAK,EAAG,KAAM,IAChE,KAAK,YAAYA,CAAC,EAAG8B,CAAQ,GAAK,EAClC,KAAK,OAAOA,CAAQ,GAAK,CAC1B,CAGA,+BAA+BE,EAA8F,CAC5H,MAAMD,EAAQZ,GAAUa,EAAM,eAAgBA,EAAM,aAAc,QAAQ,EACpEhC,EAAIwB,GAAgBQ,EAAM,KAAMT,GAAiBS,EAAM,IAAI,EAAGD,CAAK,EACnEE,EAAS,KAAK,YAAYjC,CAAC,GAAK,CAAE,IAAK,EAAG,KAAM,GAChDkC,EAAI,KAAK,OAETC,EAAUF,EAAO,IAAMA,EAAO,KAC9BG,EAAUF,EAAE,IAAMA,EAAE,KACpBG,GAAaJ,EAAO,IAAM,IAAME,EAAU,GAC1CG,EAAYF,EAAU,EAAKF,EAAE,IAAME,EAAW,GAC9CG,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGJ,EAAU,CAAC,CAAC,EAC9C,OAAOpB,GAAMsB,EAAYE,EAAID,GAAa,EAAIC,GAAI,GAAK,EAAG,CAC3D,CACD,CClDO,SAASC,EAAUC,EAAmB,CAC3C,IAAIxH,EAAIwH,EAAO,WACf,OAAIxH,GAAK,IAAGA,GAAK,YACV,UAAwB,CAC7B,OAAAA,EAAKA,EAAI,MAAS,YACVA,EAAI,GAAK,UACnB,CACF,CCUA,SAAS8F,GAASC,EAAW0B,EAAYC,EAAoB,CAAE,OAAO,KAAK,IAAID,EAAI,KAAK,IAAIC,EAAI3B,CAAC,CAAC,CAAG,CAE9F,SAASO,GAAiBjB,EAA8B,CAC7D,OAAIA,GAAQ,EAAU,EAClBA,GAAQ,EAAU,MAClBA,GAAQ,EAAU,MAClBA,GAAQ,GAAW,OACnBA,GAAQ,GAAW,QAChB,KACT,CAEO,SAASsC,GAAYxB,EAAwByB,EAAmC,CACrF,MAAMC,EAAMD,EAAgBzB,EAAkB,IAAMA,EACpD,OAAI0B,GAAO,EAAU,SACjBA,GAAO,GAAW,SAClBA,GAAO,GAAW,MAClBA,GAAO,GAAW,MAClBA,GAAO,GAAW,OACf,KACT,CAEO,SAASC,GAAaC,EAAiBC,EAA2B,CACvE,OAAIA,GAAS,IAAY,UACrBD,IAAY,GAAKC,GAAS,IAAe,UACzCD,IAAY,EAAU,WACtBA,IAAY,EAAU,KACtBA,IAAY,EAAU,KACnB,IACT,CAEO,SAASE,GAAaC,EAAsBC,EAAkC,CACnF,MAAMC,EAAOF,EAAeC,EAC5B,GAAIC,IAAS,EAAG,MAAO,OACvB,MAAMC,EAAS,KAAK,IAAID,CAAI,EACtBE,EACAD,GAAU,EAAU,EACpBA,GAAU,EAAU,MACpBA,GAAU,EAAU,MACpBA,GAAU,GAAW,OAClB,MAET,OAAQD,EAAO,EAAI,QAAQE,CAAM,GAAK,SAASA,CAAM,EACvD,CAEA,SAASC,EAAUxD,EAAwB,CACzC,MAAO,GAAGA,EAAE,IAAI,IAAIA,EAAE,IAAI,IAAIA,EAAE,IAAI,IAAIA,EAAE,KAAK,IAAIA,EAAE,KAAK,EAC5D,CASO,MAAMyD,EAAc,CACjB,kBAA2C,IAC3C,kBAA2C,IAC3C,MACA,MAER,YAAYtK,EAA8C,CACxD,MAAMuK,EAAW,KAAK,IAAI,EAAG,KAAK,MAAMvK,GAAM,UAAY,EAAE,CAAC,EAG7D,KAAK,MAAQ,KAAK,IAAI,GAAK,EAAIuK,CAAQ,EACvC,KAAK,MAAQvK,GAAM,OAAS,EAC9B,CAEA,OAAc,CACZ,KAAK,cAAc,QACnB,KAAK,cAAc,OACrB,CAEQ,SAASV,EAAgC,CAC/C,SAAW,CAACuH,EAAGiC,CAAM,IAAKxJ,EAAG,CAC3B,IAAIkL,EAAQ,EACZ,UAAWC,KAAK,OAAO,KAAK3B,CAAM,EAAG,CAEnC,MAAM4B,GADU5B,EAAO2B,CAAC,GAAK,GACH,KAAK,MAC/B3B,EAAO2B,CAAC,EAAIC,EACZF,GAASE,CACX,CAEIF,EAAQ,MAAMlL,EAAE,OAAOuH,CAAC,CAC9B,CACF,CAEA,WAAkB,CAChB,KAAK,SAAS,KAAK,aAAa,EAChC,KAAK,SAAS,KAAK,aAAa,CAClC,CAEA,cAAcA,EAAgBuD,EAA6B,CACzD,MAAMO,EAAKN,EAAUxD,CAAC,EAChBP,EAAM,KAAK,cAAc,IAAIqE,CAAE,GAAK,OAAO,OAAO,IAAI,EAC5DrE,EAAI8D,CAAM,GAAK9D,EAAI8D,CAAM,GAAK,GAAK,EACnC,KAAK,cAAc,IAAIO,EAAIrE,CAAG,CAChC,CAEA,cAAcO,EAAgBuD,EAA6B,CACzD,MAAMO,EAAKN,EAAUxD,CAAC,EAChBP,EAAM,KAAK,cAAc,IAAIqE,CAAE,GAAK,OAAO,OAAO,IAAI,EAC5DrE,EAAI8D,CAAM,GAAK9D,EAAI8D,CAAM,GAAK,GAAK,EACnC,KAAK,cAAc,IAAIO,EAAIrE,CAAG,CAChC,CAEA,eAAeO,EAA2C,CACxD,MAAM8D,EAAKN,EAAUxD,CAAC,EAChBiC,EAAS,KAAK,cAAc,IAAI6B,CAAE,GAAK,GACvCC,EAAwB,CAAC,UAAU,WAAW,aAAa,YAAY,QAAQ,EACrF,IAAIJ,EAAQ,EACZ,MAAMK,EAA0C,CAC9C,QAAS,KAAK,MACd,SAAU,KAAK,MACf,WAAY,KAAK,MACjB,UAAW,KAAK,MAChB,OAAQ,KAAK,OAEf,UAAWJ,KAAKG,EAAQC,EAASJ,CAAC,GAAK3B,EAAO2B,CAAC,GAAK,EAAGD,GAASK,EAASJ,CAAC,EAC1E,MAAMK,EAAQ,OAAO,YAAYF,EAAK,IAAIH,GAAK,CAACA,GAAII,EAASJ,CAAC,GAAK,IAAMD,GAAS,EAAE,CAAC,CAAC,EAEhFO,EAAc,GAAK,EADb,OAAO,OAAOjC,CAAM,EAAE,OAAO,CAAChH,EAAG+F,IAAM/F,GAAK+F,GAAK,GAAI,CAAC,GAElE,MAAO,CAAE,MAAAiD,EAAO,YAAAC,CAAA,CAClB,CAEA,eAAelE,EAA2C,CACxD,MAAM8D,EAAKN,EAAUxD,CAAC,EAChBiC,EAAS,KAAK,cAAc,IAAI6B,CAAE,GAAK,GACvCC,EAAwB,CAAC,YAAY,WAAW,eAAe,gBAAgB,WAAW,UAAU,UAAU,cAAc,EAClI,IAAIJ,EAAQ,EACZ,MAAMK,EAA0C,OAAO,OAAO,IAAI,EAClE,UAAWJ,KAAKG,EAAQC,EAASJ,CAAC,GAAK3B,EAAO2B,CAAC,GAAK,GAAK,KAAK,MAAOD,GAASK,EAASJ,CAAC,EACxF,MAAMK,EAAQ,OAAO,YAAYF,EAAK,IAAIH,GAAK,CAACA,GAAII,EAASJ,CAAC,GAAK,IAAMD,GAAS,EAAE,CAAC,CAAC,EAEhFO,EAAc,GAAK,EADb,OAAO,OAAOjC,CAAM,EAAE,OAAO,CAAChH,EAAG+F,IAAM/F,GAAK+F,GAAK,GAAI,CAAC,GAElE,MAAO,CAAE,MAAAiD,EAAO,YAAAC,CAAA,CAClB,CAGA,kBAAkBC,EAAetB,EAAqC,CACpE,MAAMpB,EAAQV,GAAMoD,EAAG,KAAM,EAAG,CAAC,EAC3BzC,EAAOH,GAAiB4C,EAAG,IAAI,EAC/BC,EAAOxB,GAAYuB,EAAG,OAAQtB,CAAa,EAC3CI,EAAQF,GAAaoB,EAAG,QAASA,EAAG,KAAK,EACzCE,EAAWF,EAAG,MAAOA,EAAG,aAAe,SAAY,SAAW,IAAI,EAClEG,EAAWH,EAAG,MAAOA,EAAG,aAAe,SAAY,KAAO,QAAQ,EAClEI,EAAQrB,GAAamB,EAAUC,CAAQ,EAC7C,MAAO,CAAE,KAAA7C,EAAM,KAAAC,EAAM,KAAA0C,EAAM,MAAAG,EAAO,MAAAtB,CAAA,CACpC,CACF,CAEO,SAASuB,GAAuBC,EAA8B,CACnE,MAAMC,EAAID,EAAM,cAChB,MAAI,6CAA6C,KAAKC,CAAC,EAAU,SAC7D,6BAA6B,KAAKA,CAAC,EAAU,WAC7C,8CAA8C,KAAKA,CAAC,EAAU,YAC9D,uFAAuF,KAAKA,CAAC,EAAU,aACpG,SACT,CAEO,SAASC,GAAuBF,EAA8B,CACnE,MAAMC,EAAID,EAAM,cAChB,MAAI,YAAY,KAAKC,CAAC,EAAU,YAC5B,gBAAgB,KAAKA,CAAC,EAAU,WAChC,eAAe,KAAKA,CAAC,EAAU,eAC/B,gBAAgB,KAAKA,CAAC,EAAU,gBAChC,eAAe,KAAKA,CAAC,EAAU,eAC/B,UAAU,KAAKA,CAAC,EAAU,UAC1B,UAAU,KAAKA,CAAC,EAAU,UACvB,UACT,CCpKA,SAAS3D,EAAMC,EAAW0B,EAAYC,EAAoB,CAAE,OAAO,KAAK,IAAID,EAAI,KAAK,IAAIC,EAAI3B,CAAC,CAAC,CAAG,CAElG,SAAS4D,GAAQ3G,EAAmB4G,EAAsBV,EAAe9C,EAAgC,CACvG,MAAMyD,EAAID,EAAK,wBAAwB5G,CAAS,EAChD,OAAI6G,GAAK,KAAa,IACCX,EAAG,aAAe,WAAc9C,EACnB,IAAM8C,EAAG,OAAUA,EAAG,QACtCW,CACtB,CAEA,SAASC,GAAe1M,EAAU2M,EAAyCC,EAAiB,CAC1F,MAAMC,EAAI,KAAK,IAAI,IAAMD,CAAI,EACvBE,EAAUH,EAAM,IAAII,GAAM,KAAK,IAAIrE,EAAMqE,EAAG,KAAM,GAAI,CAAC,EAAIF,CAAC,CAAC,EAC7DnG,EAAMoG,EAAQ,OAAO,CAAClK,EAAGoK,IAAMpK,EAAIoK,EAAG,CAAC,GAAK,EAC5CP,EAAIzM,IAAQ0G,EAClB,IAAIC,EAAM,EACV,QAAS9B,EAAI,EAAGA,EAAI8H,EAAM,OAAQ9H,IAAK,CACrC,MAAMqF,EAAI4C,EAAQjI,CAAC,GAAK,EACxB,GAAI4H,GAAK9F,GAAO8F,EAAI9F,EAAMuD,EAAG,OAAOyC,EAAM9H,CAAC,EAAG,KAC9C8B,GAAOuD,CACT,CACA,OAAOyC,EAAMA,EAAM,OAAS,CAAC,EAAG,IAClC,CAEA,SAASM,GAAanB,EAAetB,EAAgC,CACnE,MAAMC,EAAMqB,EAAG,OACf,OAAItB,EACEC,GAAO,GAAW,OAAO,KAAK,IAAI,EAAGA,CAAG,CAAC,GACtC,OAAO,KAAK,IAAI,EAAG,IAAMA,CAAG,CAAC,GAEhCA,GAAO,GAAW,OAAO,KAAK,IAAI,EAAG,IAAMA,CAAG,CAAC,GAC5C,OAAO,KAAK,IAAI,EAAGA,CAAG,CAAC,EAElC,CAEO,MAAMyC,EAAW,CAetB,YAAoBV,EAA8BxD,EAAuB,CAArD,UAAAwD,EAA8B,kBAAAxD,CAAwB,CAdlE,IAAWmB,EAAU,SAAS,EAC9B,MAAQ,IAAIiB,GAAc,CAAE,SAAU,GAAI,MAAO,GAAK,EACtD,iBAA6B,GAC7B,iBAA6B,GAC7B,YAAiC,CACvC,uBAAwB,GACxB,uBAAwB,GACxB,gBAAiB,IACjB,gBAAiB,IACjB,eAAgB,IAChB,iBAAkB,SAClB,oBAAqB,IAKvB,MAAM,gBAAgB9D,EAAiD,CACrE,GAAI,CAEF,IAAI6F,EAAuC,GAC3C,GAAI,CACF,MAAMC,EAAW,MAAAC,EAAA,IAAM,OAAO,iCAA0B,MAAE,MAAM,IAAM,IAAI,EAC1EF,EAAYC,IAAQA,EAAI,SAAWA,IAAS,EAC9C,MAAQ,CAAC,CACT,KAAK,YAAc,CAAE,GAAG,KAAK,YAAa,GAAGD,CAAA,CAC/C,MAAQ,CAAC,CACL7F,SAAU,YAAc,CAAE,GAAG,KAAK,YAAa,GAAGA,CAAA,EACxD,CAEA,MAAM8C,EAAoB,CACxB,KAAK,IAAMD,EAAUC,CAAI,EACzB,KAAK,MAAM,QACX,KAAK,iBAAmB,GACxB,KAAK,iBAAmB,EAC1B,CAEA,WAAkB,CAChB,KAAK,MAAM,WACb,CAEA,gBAAgBkD,EAAgBC,EAAsB1H,EAA4B,CAChF,MAAM2E,EAAiB8C,EAAI,aAAe,WAAc,KAAK,aACvDE,EAAM,KAAK,MAAM,kBAAkBF,EAAK9C,CAAa,EAC3D,KAAK,MAAM,cAAcgD,EAAKrB,GAAuBoB,CAAY,CAAC,EAClE,KAAK,MAAM,cAAcC,EAAKlB,GAAuBzG,CAAY,CAAC,CACpE,CAEA,oBAAoB4H,EAAkB9H,EAA+B,CACnE,MAAM+H,EAAO,KAAK,KAAK,iBAAiB,OAAOnC,IAAMA,EAAE,OAAS,OAASA,EAAE,OAAS,SAAWgB,GAAQhB,EAAE,MAAO,KAAK,KAAMkC,EAAO,KAAK,YAAY,CAAC,EAC9IjD,EAAiBiD,EAAM,aAAe,WAAc,KAAK,aACzDD,EAAM,KAAK,MAAM,kBAAkBC,EAAOjD,CAAa,EACvDmD,EAAU,KAAK,MAAM,eAAeH,CAAG,EACvCI,EAAQlD,GAAa+C,EAAM,QAASA,EAAM,KAAK,EAC/CI,EAAYtD,GAAYkD,EAAM,OAAQjD,CAAa,EAGnDsD,EAAYL,EAAM,OAAS,GAAKA,EAAM,MAAQ,GAAMA,EAAM,OAAS,GAAMA,EAAM,UAAY,GAAKA,EAAM,OAAS,IAC/GM,EAAQ,KAAK,YAAY,mBAAqB,QAAU,GAAM,KAAK,YAAY,mBAAqB,OAAS,GAAM,GACnHnB,EAAOlE,EAAMqF,GAASD,EAAW,GAAM,GAAM,GAAK,GAAG,EACrDE,EAAU,IAEVC,EAAaP,EAAK,IAAIQ,GAAQ,CAClC,MAAMC,EAAMhC,GAAuB+B,EAAK,KAAK,EAEvCE,EAAIT,EAAQ,MAClB,IAAIU,EAAU,EACVF,IAAQ,UAAWE,EAAW,IAAOD,EAAE,QAAUA,EAAE,QAAUA,EAAE,cAAiB,KAAOA,EAAE,UAAYA,EAAE,SAAWA,EAAE,cAC/GD,IAAQ,WAAYE,EAAW,KAAQD,EAAE,QAAUA,EAAE,UAAa,MAAQA,EAAE,SAAWA,EAAE,eACzFD,IAAQ,aAAcE,EAAW,KAAQD,EAAE,SAAWA,EAAE,SAAY,MAAQA,EAAE,aAAeA,EAAE,cAAgBA,EAAE,WACjHD,IAAQ,YAAaE,EAAW,IAAOD,EAAE,QAAW,KAAOA,EAAE,QAAUA,EAAE,cACzED,IAAQ,WAAUE,EAAW,KAAQ,EAAID,EAAE,UAAa,IAAMA,EAAE,WAGzE,IAAIE,EAAU,EACd,MAAMC,EAAQd,EAAM,MAAQ,EACtBe,EAAOf,EAAM,MAAQ,EACvBc,IAAUJ,IAAQ,WAAaA,IAAQ,YAAc,2BAA2B,KAAKD,EAAK,KAAK,KAAII,GAAW,KAC9GE,IAASL,IAAQ,cAAgBA,IAAQ,eAAcG,GAAW,KAClET,IAAc,UAAYA,IAAc,YACtCM,IAAQ,aAAeA,IAAQ,YAAUG,GAAW,IAEtDT,IAAc,OAASJ,EAAM,OAAS,GAAKU,IAAQ,YAAWG,GAAW,KAG7E,MAAMG,EAAgB,KAAK,iBAAiB,MAAM,EAAE,EAAE,OAAOzB,GAAKA,IAAMkB,EAAK,KAAK,EAAE,OAC9EQ,EAAaD,GAAiB,EAAI,IAAQA,IAAkB,EAAI,IAAO,EAGvEE,GAAY,EAAIhB,EAAQ,aAAe,KAAK,YAAY,gBAAkB,KAAK,MAAQ,GAAM,EAAI,IAAM,GAGvG3B,EAAWyB,EAAM,MAAOA,EAAM,aAAe,SAAY,SAAW,IAAI,EACxExB,EAAWwB,EAAM,MAAOA,EAAM,aAAe,SAAY,KAAO,QAAQ,EAExEmB,EADenB,EAAM,UAAY,GAAKA,EAAM,OAAS,KAAUzB,EAAWC,IAC5CkC,IAAQ,aAAeA,IAAQ,UAAY,IAAO,EAOhFU,EAAOnG,EALK,IAKW2F,EAJX,GAI+BC,EAHnC,IAGmDI,EAF7C,GAEsEC,EAD3E,GAC6FC,EAAa,GAAI,CAAC,EAC9H,MAAO,CAAE,KAAM,CAAE,SAAAjJ,EAAU,UAAWuI,EAAK,OAAS,KAAAW,CAAA,CACtD,CAAC,EAED,IAAIC,EACJ,GAAI,KAAK,MAAQd,EAAS,CACxB,MAAMe,EAAM,KAAK,MAAM,KAAK,MAAQ,KAAK,IAAI,EAAGd,EAAW,MAAM,CAAC,EAClEa,EAASb,EAAW,KAAK,IAAIc,EAAKd,EAAW,OAAS,CAAC,CAAC,EAAG,IAC7D,MACEa,EAASpC,GAAY,KAAK,IAAKuB,EAAYrB,CAAI,EAIjD,KAAK,iBAAiB,KAAKkC,EAAO,SAAS,EACvC,KAAK,iBAAiB,OAAS,GAAG,KAAK,iBAAiB,QAG5D,GAAI,CAMF,IALe,IAAM,CACnB,GAAI,CAAE,GAAI,OAAO,aAAiB,WAAoB,aAAa,QAAQ,aAAa,IAAM,GAAK,MAAQ,CAAC,CAC5G,GAAI,CAAE,MAAO,CAAC,CAAE,WAAmB,IAAI,WAAW,OAAS,MAAQ,CAAC,CACpE,MAAO,EACT,KACW,CACT,MAAME,EAAkBvB,EAAM,aAAe,WAAc,KAAK,aAC1DwB,EAAQ,CACZ,MAAO,OACP,QAASxB,EAAM,QACf,MAAO,GAAG,OAAO,KAAK,MAAMA,EAAM,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,IAAI,OAAOA,EAAM,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,GACtG,MAAO,CAAE,GAAIA,EAAM,MAAOA,EAAM,aAAa,SAAU,SAAS,IAAI,EAAG,KAAMA,EAAM,MAAOA,EAAM,aAAa,SAAU,KAAK,QAAQ,GACpI,KAAMA,EAAM,KAAM,MAAOA,EAAM,KAAM,SAAUR,GAAaQ,EAAOuB,CAAc,EACjF,MAAApB,EACA,WAAYC,EACZ,cAAeF,EAAQ,MACvB,YAAaA,EAAQ,YACrB,WAAYM,EAAW,IAAI1C,IAAM,CAAE,KAAMA,EAAE,KAAK,UAAW,QAAS,OAAOA,EAAE,KAAK,QAAQ,CAAC,CAAC,GAAI,EAChG,KAAAqB,EAAM,QAAAoB,EACN,OAAQc,EAAO,UACf,YAAa,CACX,QAAS,KAAK,YAAY,uBAC1B,UAAW,KAAK,YAAY,eAC5B,WAAY,KAAK,YAAY,gBAC/B,EAED,WAAmB,IAAI,KAAK,OAAO,WAAY,CAAE,KAAM,KAAK,UAAUG,CAAK,EAAG,CACjF,CACF,MAAQ,CAAC,CAET,OAAOH,CACT,CAEA,oBAAoBrB,EAA+B,CACjD,MAAMyB,EAAU,KAAK,KAAK,oBACpB1E,EAAiBiD,EAAM,aAAe,WAAc,KAAK,aACzDD,EAAM,KAAK,MAAM,kBAAkBC,EAAOjD,CAAa,EACvD2E,EAAU,KAAK,MAAM,eAAe3B,CAAG,EACvCI,EAAQlD,GAAa+C,EAAM,QAASA,EAAM,KAAK,EAC/CI,EAAYtD,GAAYkD,EAAM,OAAQjD,CAAa,EAGnDyD,EAAaiB,EAAQ,IAAI9C,GAAS,CACtC,MAAM+B,EAAM7B,GAAuBF,CAAK,EAClCgD,EAAID,EAAQ,MAClB,IAAId,EAAU,EACVF,IAAQ,aAAeA,IAAQ,WAAYE,EAAW,KAAQe,EAAE,QAAUA,EAAE,UAAa,KAAOA,EAAE,UAC7FjB,IAAQ,gBAAkBA,IAAQ,kBAA4B,IAAQiB,EAAE,WAAe,KAAOA,EAAE,OAChGjB,IAAQ,UAAWE,EAAW,KAAQe,EAAE,WAAaA,EAAE,WAAc,IAAOA,EAAE,QAC9EjB,IAAQ,eAAgBE,EAAW,GAAMe,EAAE,UAAa,MAAQA,EAAE,QAAUA,EAAE,UAC9EjB,IAAQ,UAAWE,EAAW,IAAOe,EAAE,UAAa,IAAMA,EAAE,QAChEf,EAAW,IAAOe,EAAE,QAAUA,EAAE,SAAWA,EAAE,YAAc,IAAKA,EAAE,OAEvE,IAAId,EAAU,EACAb,EAAM,MAAQ,IACdU,IAAQ,aAAeA,IAAQ,YAAcA,IAAQ,kBAAiBG,GAAW,IAC3FT,IAAc,QAAUM,IAAQ,aAAeA,IAAQ,cAAaG,GAAW,IAC/Eb,EAAM,UAAY,GAAKA,EAAM,OAAS,KAAQU,IAAQ,iBAAgBG,GAAW,KAErF,MAAMG,EAAgB,KAAK,iBAAiB,MAAM,EAAE,EAAE,OAAOzB,GAAKA,IAAMZ,CAAK,EAAE,OACzEsC,EAAaD,GAAiB,EAAI,IAAQA,IAAkB,EAAI,KAAQ,EAExEI,EAAOnG,EAAM,GAAI2F,EAAU,GAAIC,EAAU,GAAII,EAAY,GAAI,CAAC,EACpE,MAAO,CAAE,KAAM,CAAE,MAAAtC,CAAA,EAAS,KAAAyC,CAAA,CAC5B,CAAC,EAGKjC,EADYa,EAAM,OAAS,GAAKA,EAAM,MAAQ,GAAOA,EAAM,UAAY,GAAKA,EAAM,OAAS,IACzE,IAAO,IACzBO,EAAU,IAAO,GAAImB,EAAQ,YAEnC,IAAIL,EACJ,GAAI,KAAK,MAAQd,EAAS,CACxB,MAAMe,EAAM,KAAK,MAAM,KAAK,MAAQ,KAAK,IAAI,EAAGd,EAAW,MAAM,CAAC,EAClEa,EAASb,EAAW,KAAK,IAAIc,EAAKd,EAAW,OAAS,CAAC,CAAC,EAAG,IAC7D,MACEa,EAASpC,GAAY,KAAK,IAAKuB,EAAYrB,CAAI,EAGjD,KAAK,iBAAiB,KAAKkC,EAAO,KAAK,EACnC,KAAK,iBAAiB,OAAS,GAAG,KAAK,iBAAiB,QAE5D,GAAI,CAMF,IALe,IAAM,CACnB,GAAI,CAAE,GAAI,OAAO,aAAiB,WAAoB,aAAa,QAAQ,aAAa,IAAM,GAAK,MAAQ,CAAC,CAC5G,GAAI,CAAE,MAAO,CAAC,CAAE,WAAmB,IAAI,WAAW,OAAS,MAAQ,CAAC,CACpE,MAAO,EACT,KACW,CACT,MAAME,EAAkBvB,EAAM,aAAe,WAAc,KAAK,aAC1DwB,EAAQ,CACZ,QAASxB,EAAM,QACf,MAAO,GAAG,OAAO,KAAK,MAAMA,EAAM,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,IAAI,OAAOA,EAAM,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,GACtG,MAAO,CAAE,GAAIA,EAAM,MAAOA,EAAM,aAAa,SAAU,SAAS,IAAI,EAAG,KAAMA,EAAM,MAAOA,EAAM,aAAa,SAAU,KAAK,QAAQ,GACpI,KAAMA,EAAM,KAAM,MAAOA,EAAM,KAAM,SAAUR,GAAaQ,EAAOuB,CAAc,EACjF,MAAApB,EACA,WAAYC,EACZ,cAAesB,EAAQ,MACvB,YAAaA,EAAQ,YACrB,WAAYlB,EAAW,IAAI1C,IAAM,CAAE,KAAMA,EAAE,KAAK,MAAO,QAAS,OAAOA,EAAE,KAAK,QAAQ,CAAC,CAAC,GAAI,EAC5F,KAAAqB,EAAM,QAAAoB,EACN,OAAQc,EAAO,MACf,YAAa,CAAE,QAAS,KAAK,YAAY,uBAAuB,EAEjE,WAAmB,IAAI,KAAK,OAAO,WAAY,CAAE,KAAM,KAAK,UAAUG,CAAK,EAAG,CACjF,CACF,MAAQ,CAAC,CAET,OAAOH,CACT,CACF,CCxQA,SAASO,GAAYC,EAAmB,CACtC,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKA,CAAC,CAAC,CACrC,CAEA,SAASC,GAAoBjC,EAAgBzK,EAAuB,CAClE,OAAOyK,EAAI,aAAe,SAAWzK,EAAQ,CAACA,CAChD,CAEA,SAAS2M,GAAkBC,EAAiBC,EAAiC,CAC3E,OAAOL,GAAYI,EAAUC,CAAe,CAC9C,CAEA,SAASC,GAAsBrC,EAAgBsC,EAA2B,CAExE,OAAOtC,EAAI,aAAe,SAAY,IAAMsC,EAAaA,CAC3D,CAEA,SAASC,GAAsBvC,EAAgBsC,EAA2B,CAExE,OAAOtC,EAAI,aAAe,SAAWsC,EAAa,IAAMA,CAC1D,CAEA,SAASE,GAAgBC,EAAgBC,EAA2D,CAClG,MAAMC,EAAM,KAAK,MAAMD,EAAc,CAAC,EACtC,OAAID,EAASE,EAAY,CAAE,QAASA,EAAK,OAAQ,IAC1C,CAAE,QAASF,EAAQ,OAAQ,GACpC,CAEA,SAASG,GAAyB5C,EAAgB6C,EAAmBC,EAAyD,CAC5H,GAAIA,EAAgB,CAClB,MAAMC,EAAc/C,EAAI,aAAe,SAAY,IAAM6C,EAAaA,EAEtE,MAAO,CAAE,KAAM,EAAG,KADL,KAAK,IAAI,GAAIE,CAAW,CACnB,CACpB,CAGA,MAAMA,EAAc/C,EAAI,aAAe,SAAY,IAAM6C,EAAaA,EAChEG,EAAsB,KAAK,IAAI,GAAID,CAAW,EACpD,MAAO,CAAE,KAAM,KAAK,IAAI,EAAG/C,EAAI,IAAI,EAAG,KAAM,KAAK,IAAI,EAAGgD,CAAmB,EAC7E,CAEA,SAASC,GAAW5N,EAA2B,CAC7C,OAAKA,EACD,GAAAA,EAAQ,KAAO,UAAU,KAAKA,EAAQ,GAAG,GADxB,EAGvB,CAEA,SAAS6N,GAAelN,EAAsBmN,EAA0B,CACtE,OAAIA,EAAgB,EAEblO,EAAqB,OAC9B,CAEA,SAASmO,GAASjD,EAA6B,CAC7C,MAAO,CAAE,GAAGA,EAAO,MAAO,CAAE,GAAGA,EAAM,MAAM,CAC7C,CAEA,SAASkD,GAAarD,EAAgBsD,EAAkBC,EAAkBC,EAA8F,CACtK,MAAMC,EAA4BD,GAAcD,EAAI,KAAO,UACrDG,EAAqCD,EAA4B,WAAa,WAC9EE,EAAWF,EAA4B,GAAKH,EAClD,GAAIC,EAAI,KAAO,UAAW,CAExB,MAAMK,EAAavB,GAAsBrC,EAAK2D,CAAQ,EAChD,CAAE,QAAAE,EAAS,OAAAC,CAAA,EAAWtB,GAAgBe,EAAI,MAAOK,CAAU,EAEjE,MAAO,CAAE,OADM1B,GAAkByB,EAAU1B,GAAoBjC,EAAK6D,CAAO,CAAC,EACnD,OAAAC,EAAQ,UAAAJ,CAAA,CACnC,KAAO,CAEL,MAAMK,EAAgBxB,GAAsBvC,EAAK2D,CAAQ,EACnD,CAAE,QAAAE,EAAS,OAAAC,CAAA,EAAWtB,GAAgBe,EAAI,MAAOQ,CAAa,EAEpE,MAAO,CAAE,OADM7B,GAAkByB,EAAU1B,GAAoBjC,EAAK,CAAC6D,CAAO,CAAC,EACpD,OAAAC,EAAQ,UAAAJ,CAAA,CACnC,CACF,CAEO,SAASM,GAAkB9P,EAAkC,CAClE,KAAM,CAAE,aAAc8L,EAAK,cAAeiE,EAAM,QAAA5O,EAAS,YAAAW,GAAgB9B,EACnEqP,EAAMlO,EAAQ,QAEdoO,EADKR,GAAW5N,CAAO,GACWkO,EAAI,KAAO,UAG7CW,EAAWd,GAASa,CAAI,EAGxBE,EAAQd,GAAarD,EAAKA,EAAI,OAAQuD,EAAKE,CAAyB,EACpEW,EAAS,CAAC,CAACb,EAAI,WAAaA,EAAI,KAAO,UACvCc,EAAKzB,GAAyB5C,EAAKmE,EAAM,OAAQC,CAAM,EAG7D,IAAIE,EAAsB,CAAE,GADIlB,GAASpD,CAAG,EACC,OAAQmE,EAAM,OAAQ,KAAME,EAAG,KAAM,KAAMA,EAAG,MAG3F,MAAME,EAAevE,EAAI,SAAW,EAC9BwE,EAASxE,EAAI,QAAU,GAAKsE,EAAS,QAAU,EAE/CG,EADYlB,EAAI,KAAO,WACagB,GAAgBC,EACpDrO,EAAU+M,GAAelN,EAAayO,CAAoB,EAChEH,EAAS,MAAQ,KAAK,IAAI,EAAGtE,EAAI,MAAQ7J,CAAO,EAEhD,MAAMuO,EAAY,CAChB,0BAA2BN,EAC3B,mBAAoBD,EAAM,OAC1B,0BAAAV,EACA,UAAWU,EAAM,UACjB,qBAAAM,CAAA,EAIF,SAASE,EAAQnG,EAAuB,CAGtC,MAAMoG,EAAW,CADMvC,GAAsBrC,EAAKxB,EAAG,MAAM,EACtB6D,GAAsBrC,EAAKA,EAAI,MAAM,EACpE6E,EAAYrG,EAAG,OAAS,EAAI,EAAKA,EAAG,OAAS,EAAI,EAAKA,EAAG,OAAS,EAAI,EAAI,GAC1EsG,EAAY,KAAK,IAAI,EAAG,GAAKtG,EAAG,IAAI,EAAI,GAC9C,OAAOoG,EAAWC,EAAYC,CAChC,CACA,MAAMC,EAAUJ,EAAQL,CAAQ,EAC1BU,EAAWL,EAAQT,CAAQ,EACjC,IAAIe,EAAiD,UACrD,OAAIF,EAAUC,EAAW,GAAKC,EAAe,SACpCD,EAAWD,EAAU,KAAKE,EAAe,WAE3C,CAAE,SAAAX,EAAU,SAAAJ,EAAU,aAAAe,EAAc,UAAAP,CAAA,CAC7C,CClJA,SAASQ,GAAU7J,EAAmB,CACpC,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,KAAK,MAAMA,CAAC,CAAC,CAAC,CACjD,CAEO,SAAS8J,GAAYC,EAA0B,CACpD,OAAOA,IAAY,GAAKA,IAAY,GACtC,CAEO,SAASC,GAAiBD,EAA0B,CACzD,OAAOA,EAAU,GAAKA,EAAU,GAClC,CAEO,SAASE,GAAcC,EAAuC,CACnE,OAAOA,IAAiB,SAAW,GAAK,EAC1C,CAEO,SAASC,GAAsBtR,EAAmE,CAEvG,MAAO,CAAE,OADMoR,GAAcpR,EAAI,UAAU,EAC1B,WAAYA,EAAI,WACnC,CAYO,SAASuR,GAAoBtF,EAAoBrL,EAAuE,CAC7H,MAAM4Q,EAA6BvF,EAAM,aAAe,SAAW,KAAO,SACpEwF,EAAgBT,GAAU/E,EAAM,aAAe,SAAWA,EAAM,OAAS,EAAIA,EAAM,OAAS,CAAC,EAEnG,IAAIyF,EACJ,OAAIF,IAAc,SAAUE,EAAS,KAAK,IAAI,GAAID,CAAa,EAC1DC,EAAS,KAAK,IAAI,GAAID,CAAa,EACjC,CAAE,OAAQT,GAAUU,CAAM,EAAG,WAAYF,CAAA,CAClD,CCjBO,SAASG,GAAW1F,EAAkB5K,EAA0B,CACrE,MAAMuQ,EAAO,CAAE,GAAG3F,CAAA,EAClB,OAAIA,EAAM,aAAe,SAAU2F,EAAK,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK3F,EAAM,OAAS5K,CAAK,CAAC,EAC3FuQ,EAAK,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK3F,EAAM,OAAS5K,CAAK,CAAC,EAC3DuQ,CACT,CAEA,SAASC,GAAc5F,EAA6E,CAClG,MAAM2F,EAAO,CAAE,GAAG3F,EAAO,MAAO,CAAE,GAAGA,EAAM,MAAM,EACjD,IAAI6F,EAAY,GACZC,EAAS,GACb,OAAI9F,EAAM,aAAe,UACnBA,EAAM,QAAU,MAAO2F,EAAK,MAAM,QAAU,EAAGE,EAAY,IAC3D7F,EAAM,QAAU,IAAK2F,EAAK,MAAM,IAAM,EAAGG,EAAS,MAElD9F,EAAM,QAAU,IAAK2F,EAAK,MAAM,IAAM,EAAGE,EAAY,IACrD7F,EAAM,QAAU,MAAO2F,EAAK,MAAM,QAAU,EAAGG,EAAS,KAEvD,CAAE,MAAOH,EAAM,UAAAE,EAAW,OAAAC,CAAA,CACnC,CAEO,SAASC,GAAgB7J,EAAoC,CAClE,GAAI,CAAE,MAAA8D,GAAU9D,EAGhB,MAAM8J,EAAkB,CACtB,QAAShG,EAAM,QACf,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,OAAQA,EAAM,OACd,WAAYA,EAAM,WAClB,MAAO,CAAE,GAAGA,EAAM,MAAM,EAGpB9K,EAAU+C,GAA2B,CACzC,SAAUiE,EAAM,SAChB,UAAWA,EAAM,UACjB,aAAcA,EAAM,aACpB,OAAQA,EAAM,OACd,IAAKA,EAAM,IACZ,EAED,GAAIhH,EAAQ,WAAa,WAAaA,EAAQ,QAAS,CAMrD,MAAM+Q,EAAQpC,GAAkB,CAC9B,aANU7D,EAOV,cALWA,EAOX,QAAA9K,EACA,YAAa,EAEf,CAAC,EAED,MAAO,CAAE,MADI+Q,EAAM,eAAiB,UAAYA,EAAM,SAAWA,EAAM,SACjD,QAAA/Q,EAAS,UAAW,GAAO,OAAQ,GAAO,kBAAmB,GACrF,CAEA,IAAIyQ,EAAO,CAAE,GAAG3F,CAAA,EACZkG,EAAoB,GACxB,GAAIhR,EAAQ,WAAa,QAAUA,EAAQ,WAAa,OACtDyQ,EAAOD,GAAW1F,EAAO9K,EAAQ,KAAK,UAC7BA,EAAQ,WAAa,aAEhC,GAAWA,EAAQ,WAAa,eAAgB,CAE9CyQ,EAAK,WAAa3F,EAAM,aAAe,SAAW,KAAO,SACzDkG,EAAoB,GAEpB,MAAM7R,EAAMa,EAAQ,iBAAmB,EAIvC,GAHIyQ,EAAK,aAAe,SAAUA,EAAK,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK3F,EAAM,OAAS3L,CAAG,CAAC,EACxFsR,EAAK,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK3F,EAAM,OAAS3L,CAAG,CAAC,EAE5D6Q,GAAiBS,EAAK,MAAM,EAAG,CACjC,MAAMQ,EAAKd,GAAsB,CAAE,OAAQM,EAAK,OAAQ,WAAYA,EAAK,WAAY,EACrFA,EAAK,OAASQ,EAAG,MACnB,SAAWnB,GAAYW,EAAK,MAAM,EAAG,CAEnC,MAAMQ,EAAKd,GAAsB,CAAE,OAAQM,EAAK,OAAQ,WAAYA,EAAK,WAAY,EACrFA,EAAK,OAASQ,EAAG,MACnB,CAEAR,EAAK,KAAO,EAAGA,EAAK,KAAO,EAC7B,MAAWzQ,EAAQ,WAAa,WAE9ByQ,EAAK,WAAa3F,EAAM,aAAe,SAAW,KAAO,SACzDkG,EAAoB,GACpBP,EAAK,KAAO,EAAGA,EAAK,KAAO,IAG7B,GAAI,CAACO,IAAsBhR,EAAQ,WAAa,QAAUA,EAAQ,WAAa,QAAS,CAEtF,MAAMkR,EADS,KAAK,IAAIlR,EAAQ,KAAK,GACV8K,EAAM,MAAQ9K,EAAQ,MAAQ,EACrDkR,GACFT,EAAK,KAAO,EACZA,EAAK,KAAO,KAEZA,EAAK,KAAO,KAAK,IAAI,EAAG3F,EAAM,KAAO,CAAC,EACtC2F,EAAK,KAAO,KAAK,IAAI,EAAGS,EAAW,GAAKpG,EAAM,KAAO,KAAK,IAAI,EAAG9K,EAAQ,KAAK,CAAC,EAEnF,KAAW,CAACgR,GAAqBhR,EAAQ,WAAa,eACpDyQ,EAAK,KAAO,KAAK,IAAI,EAAG3F,EAAM,KAAO,CAAC,GAGxC,MAAMlK,EAAe,CAACoQ,GAAsBhR,EAAQ,WAAa,QAAUA,EAAQ,MAAQ,GAAKA,EAAQ,OAAS8K,EAAM,KACjHhK,EAAUJ,GAAqBV,EAAS,GAAsDY,CAAY,EAChH6P,EAAK,MAAQ,KAAK,IAAI,EAAG3F,EAAM,MAAQhK,CAAO,EAG9C,MAAMqQ,EAAiB,CACrB,QAASV,EAAK,QACd,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,OAAQA,EAAK,OACb,WAAYA,EAAK,WACjB,MAAO,CAAE,GAAGA,EAAK,MAAM,EAInBW,EAAWV,GAAcD,CAAI,EACnCA,EAAOW,EAAS,MAGhBD,EAAe,QAAUV,EAAK,QAC9BU,EAAe,MAAM,OAASV,EAAK,MAAM,OACzCU,EAAe,MAAM,GAAKV,EAAK,MAAM,GAGrC,MAAM7N,EAAqBE,GAAA,EAC3B,GAAIF,IAEFA,EAAmB,mBAAmB,CACpC,UAAWoE,EAAM,UACjB,aAAcA,EAAM,aACpB,SAAUA,EAAM,SAChB,gBAAA8J,EACA,eAAAK,EACA,QAAS,CACP,SAAUnR,EAAQ,UAAY,QAC9B,MAAOA,EAAQ,MACf,UAAWoR,EAAS,UACpB,OAAQA,EAAS,OACjB,kBAAAJ,CAAA,CACF,CACD,GAGGF,EAAgB,SAAWK,EAAe,QAC1CL,EAAgB,OAASK,EAAe,MACxCL,EAAgB,aAAeK,EAAe,aAChDvO,EAAmB,sBAAsB,CACvC,WAAY,iBACZ,SAAUkO,EACV,SAAUK,EACV,OAAQ,kBACT,EAICL,EAAgB,QAAUK,EAAe,OAC3CvO,EAAmB,iBAAiB,CAClC,YAAakO,EAAgB,MAC7B,WAAYK,EAAe,MAC3B,YAAaL,EAAgB,MAAQK,EAAe,MACpD,QAASL,EAAgB,QACzB,OAAQ,kBACT,EAICE,GAAqBF,EAAgB,aAAeK,EAAe,YACrEvO,EAAmB,uBAAuB,CACxC,iBAAkBkO,EAAgB,WAClC,gBAAiBK,EAAe,WAChC,OAAQ,WACR,KAAMA,EAAe,OACrB,KAAMA,EAAe,KACrB,KAAMA,EAAe,KACtB,EAICC,EAAS,WAAaA,EAAS,QAAQ,CACzC,MAAMC,EAAcD,EAAS,UAC1BN,EAAgB,aAAe,SAAW,SAAW,KACrDA,EAAgB,aAAe,SAAW,KAAO,SAEpDlO,EAAmB,mBAAmB,CACpC,YAAAyO,EACA,OAAQD,EAAS,UAAY,EAAI,EACjC,UAAWA,EAAS,UAAY,KAAO,SACvC,gBAAAN,EACA,eAAAK,CAAA,CACD,CACH,CAGF,MAAO,CAAE,MAAOV,EAAM,QAAAzQ,EAAS,UAAWoR,EAAS,UAAW,OAAQA,EAAS,OAAQ,kBAAAJ,CAAA,CACzF,WCjNA,MAAMM,GAA8B,CAClC,OAAQ,gBACR,cAAe,EACjB,EAKO,SAASC,GAA6C1G,EAAyB,CAGpF,MAAM2G,EAAS,YAAY,OAAO3G,CAAG,EAAE,aAAa,GAC9C4G,EAAY,OAAO,QAAY,KAAejQ,GAAeA,GAAYgQ,CAAM,EAAI,OAEzF,GAAIC,IAAa,OAEb,OAAQA,IAAa,OAAS,OAAS,gBAS3C,GAAI,CACF,MAAMC,EAAS,aAAa,QAAQ,oBAAoB7G,CAAG,EAAE,EAC7D,GAAI6G,IAAW,KACb,OAAI7G,IAAQ,SACF6G,IAAW,OAAS,OAAS,iBAE5BJ,GAAczG,CAAG,EAGrB6G,EAEX,MAAgB,CAEd,QAAQ,KAAK,yDAAyD,CACxE,CAEA,OAAOJ,GAAczG,CAAG,CAC1B,CA2CO,SAAS8G,IAA+B,CAC7C,OAAOJ,GAAe,QAAQ,CAChC,CAKO,SAASK,IAAgF,CAC9F,MAAMC,EAAOF,GAAA,EAab,MAAO,CACL,KAAAE,EACA,GAbW,CACX,cAAe,CACb,KAAM,uBACN,YAAa,uCAEf,KAAM,CACJ,KAAM,cACN,YAAa,wCACf,EAKQA,CAAI,EAEhB,CC3GA,MAAMC,GAAyC,CAC9C,kBACA,mBACA,YACA,YACA,UACA,UACA,OACA,OACA,oBACA,aACA,gBACA,eACA,cACA,WACA,mBACA,gBACA,kBACA,iBACA,YACA,gBACD,EAEA,SAASC,GAAWvO,EAAgBiG,EAAuB,CAC1D,MAAMuI,EAAUxO,EAAK,QAAQ,OAAQ,GAAG,EAClCyO,EAAWxI,EACf,QAAQ,OAAQ,EAAE,EAClB,QAAQ,SAAU,EAAE,EACpB,QAAQ,MAAO,EAAE,EACnB,MAAO,GAAGuI,CAAO,IAAIC,CAAQ,EAC9B,CAEA,SAASC,GAAY1O,EAAgBiG,EAAuB,CAC3D,MAAO,gBAAgBjG,CAAI,IAAIiG,CAAK,MACrC,CAEA,SAAS0I,GAAmB1I,EAAyB,CACpD,OAAIA,EAAM,WAAW,MAAM,EAAU,OACrBA,EAAM,cACV,SAAS,MAAM,EAAU,QACjC,CAAC,mBAAmB,EAAE,SAASA,CAAK,EAAU,MAEnD,CAEA,SAAS2I,GAAiB5O,EAAkC,CAE3D,MAAM6O,EAAyBP,GAAoB,IAAKrI,IAAW,CAClE,GAAIsI,GAAWvO,EAAMiG,CAAK,EAC1B,KAAAjG,EACA,MAAAiG,EACA,KAAM0I,GAAmB1I,CAAK,EAC9B,IAAKyI,GAAY1O,EAAMiG,CAAK,GAC3B,EAEI6I,EAAY,uBACZC,EAAuB,CAC5B,GAAIR,GAAWvO,EAAM8O,CAAS,EAC9B,KAAA9O,EACA,MAAO8O,EACP,KAAM,OACN,IAAKJ,GAAY1O,EAAM8O,CAAS,GAMjC,MAAO,CAAC,GADSD,EAAK,OAAQzJ,GAAMA,EAAE,QAAU,MAAM,EACjC2J,CAAI,CAC1B,CAEO,MAAMC,EAAoD,CAChE,YAAaJ,GAAiB,WAAW,EACzC,eAAgBA,GAAiB,cAAc,EAC/C,eAAgBA,GAAiB,cAAc,CAChD,EAEaK,EAAiC,CAC7C,CAAE,GAAI,mBAAoB,MAAO,aACjC,CAAE,GAAI,uBAAwB,MAAO,iBACrC,CAAE,GAAI,sBAAuB,MAAO,gBACpC,CAAE,GAAI,kBAAmB,MAAO,WAChC,CAAE,GAAI,qBAAsB,MAAO,cACnC,CAAE,GAAI,qBAAsB,MAAO,cACnC,CAAE,GAAI,kBAAmB,MAAO,WAChC,CAAE,GAAI,uBAAwB,MAAO,iBACrC,CAAE,GAAI,kBAAmB,MAAO,WAChC,CAAE,GAAI,sBAAuB,MAAO,eACrC,EAIaC,GAAkD,CAE9D,YAAa,EACb,oBAAqB,EACrB,gBAAiB,EACjB,iBAAkB,CACnB,EC7EA,MAAMC,EAAsC,CAClC,cAAqB,KAE7B,MAAM,YAA4B,CAChC,GAAI,MAAK,cAET,GAAI,CAEF,KAAM,CAAE,mBAAAC,CAAA,EAAuB,MAAAlI,EAAA,mCAAAkI,GAAA,KAAM,QAAO,6BAA+B,4BAAAA,CAAA,2BACrEC,EAAe,MAAMD,EAAA,EACvBC,EAAa,KACf,KAAK,cAAgBA,EAAa,KAEtC,OAASC,EAAO,CACd,QAAQ,KAAK,0DAA2DA,CAAK,CAC/E,CACF,CAEA,YACEC,EACAC,EACAlI,EACAzN,EACe,CAEf,MAAM4V,EAAc,KAAK,gBAAgBF,CAAS,EAC5CG,EAAc,KAAK,gBAAgBF,CAAS,EAElD,GAAI,CAACC,EACH,eAAQ,KAAK,4BAA4BF,CAAS,EAAE,EAC7C,CAAE,MAAO,EAAG,MAAO,MAG5B,GAAI,CAACG,EACH,eAAQ,KAAK,4BAA4BF,CAAS,EAAE,EAC7C,CAAE,MAAO,EAAG,MAAO,MAI5B,GAAI,KAAK,cACP,GAAI,CACF,KAAM,CAAE,gBAAAnC,CAAA,EAAoB,QAAQ,0BAA0B,EACxDjT,EAASiT,EAAgB,CAC7B,MAAA/F,EACA,OAAQ,KAAK,cACb,SAAUmI,EAAY,KACtB,UAAWA,EAAY,MACvB,aAAcC,EAAY,MAC1B,IAAA7V,CAAA,CACD,EAGD,OAAO,KAAK,2BAA2BO,EAAQqV,EAAY,MAAOC,EAAY,KAAK,CACrF,OAASJ,EAAO,CACd,QAAQ,KAAK,uDAAwDA,CAAK,CAC5E,CAIF,MAAO,CACL,MAAO,EACP,MAAO,KAEX,CAEQ,2BAA2BlV,EAAaqF,EAAmBC,EAAqC,CAGtG,MAAO,CACL,MAAOtF,EAAO,SAAS,OAAS,EAChC,SAAUA,EAAO,SAAS,WAAa,gBAAkBA,EAAO,SAAS,WAAa,SACtF,MAAO,KACP,KAAM,CAACqF,EAAWC,CAAY,EAElC,CAEQ,gBAAgBiQ,EAAgB,CACtC,UAAWnQ,IAAY,CAAC,YAAa,eAAgB,cAAc,EAAiB,CAElF,MAAMuI,EADOiH,EAAcxP,CAAQ,EACjB,KAAK4F,GAAKA,EAAE,KAAOuK,CAAM,EAC3C,GAAI5H,EAAM,OAAOA,CACnB,CACA,OAAO,IACT,CAEQ,gBAAgB4H,EAAgB,CACtC,OAAOV,EAAa,KAAK7J,GAAKA,EAAE,KAAOuK,CAAM,GAAK,IACpD,CACF,CAKA,MAAMC,EAA6B,CACzB,aAAoB,KACpB,aAAoB,KAE5B,MAAM,YAA4B,CAChC,GAAI,OAAK,cAAgB,KAAK,cAE9B,GAAI,CAEF,KAAM,CAAE,kBAAAC,CAAA,EAAsB,MAAA3I,EAAA,kCAAA2I,GAAA,KAAM,QAAO,6BAA+B,2BAAAA,CAAA,6BACpE,CAAE,wBAAAC,CAAA,EAA4B,MAAA5I,EAAA,wCAAA4I,GAAA,KAAM,QAAO,6BAA+B,iCAAAA,CAAA,6BAE1E,CAACC,EAAeC,CAAa,EAAI,MAAM,QAAQ,IAAI,CACvDH,EAAkB,+BAA+B,EACjDC,EAAwB,kBAAkB,EAC3C,EAEGC,EAAc,KAChB,KAAK,aAAeA,EAAc,MAEhCC,EAAc,KAChB,KAAK,aAAeA,EAAc,KAEtC,OAASV,EAAO,CACd,QAAQ,KAAK,8CAA+CA,CAAK,CACnE,CACF,CAEA,YACEC,EACAC,EACAlI,EACAzN,EACe,CAEf,MAAM4V,EAAc,KAAK,gBAAgBF,CAAS,EAC5CG,EAAc,KAAK,gBAAgBF,CAAS,EAElD,GAAI,CAACC,EACH,eAAQ,KAAK,4BAA4BF,CAAS,EAAE,EAC7C,CAAE,MAAO,EAAG,MAAO,MAG5B,GAAI,CAACG,EACH,eAAQ,KAAK,4BAA4BF,CAAS,EAAE,EAC7C,CAAE,MAAO,EAAG,MAAO,MAI5B,GAAI,KAAK,cAAgB,KAAK,aAC5B,GAAI,CACF,KAAM,CAAE,YAAAS,CAAA,EAAgB,QAAQ,sBAAsB,EAChDrT,EAAaqT,EACjBR,EAAY,GACZC,EAAY,GACZ,KAAK,aACL,KAAK,aACLpI,EACAzN,CAAA,EAIF,OAAO,KAAK,kBAAkB+C,EAAY6S,EAAY,MAAOC,EAAY,KAAK,CAChF,OAASJ,EAAO,CACd,QAAQ,KAAK,mDAAoDA,CAAK,CACxE,CAIF,MAAO,CACL,MAAO,EACP,MAAO,KAEX,CAEQ,kBAAkB1S,EAAiB6C,EAAmBC,EAAqC,CAEjG,MAAMtF,EAAwB,CAC5B,MAAOwC,EAAW,YAAcA,EAAW,aAAa,OAAS,EACjE,MAAOA,EAAW,iBAAiB,WACnC,KAAM,CAAC6C,EAAWC,EAAc,GAAG9C,EAAW,IAAI,GAIpD,OAAIA,EAAW,aAAa,WAC1BxC,EAAO,SAAW,CAChB,KAAMwC,EAAW,YAAY,SAAS,KACtC,aAAcA,EAAW,YAAY,SAAS,aAC9C,UAAWA,EAAW,YAAY,SAAS,YAK3CA,EAAW,UACbxC,EAAO,QAAU,CAAE,KAAMwC,EAAW,UAIlCA,EAAW,UACbxC,EAAO,QAAU,CACf,KAAMwC,EAAW,QAAQ,YAAY,KACrC,MAAOA,EAAW,QAAQ,YAAY,MACtC,MAAOA,EAAW,QAAQ,YAAY,MACtC,qBAAsBA,EAAW,QAAQ,qBAGvCA,EAAW,mBACbxC,EAAO,QAAU,CAAE,mBAAoB,MAIpCA,CACT,CAEQ,gBAAgBuV,EAAgB,CACtC,UAAWnQ,IAAY,CAAC,YAAa,eAAgB,cAAc,EAAiB,CAElF,MAAMuI,EADOiH,EAAcxP,CAAQ,EACjB,KAAK4F,GAAKA,EAAE,KAAOuK,CAAM,EAC3C,GAAI5H,EAAM,OAAOA,CACnB,CACA,OAAO,IACT,CAEQ,gBAAgB4H,EAAgB,CACtC,OAAOV,EAAa,KAAK7J,GAAKA,EAAE,KAAOuK,CAAM,GAAK,IACpD,CACF,CAKA,MAAMO,EAAc,CACV,YAAuC,IACvC,YAAuB,GAE/B,aAAc,CACZ,KAAK,QAAQ,IAAI,gBAAiB,IAAIf,EAAqB,EAC3D,KAAK,QAAQ,IAAI,OAAQ,IAAIS,EAAY,CAC3C,CAEA,MAAM,YAA4B,CAChC,GAAI,MAAK,YAET,GAAI,CAEF,MAAMO,EAAU,CAAC,KAAK,QAAQ,IAAI,eAAe,EAAG,KAAK,QAAQ,IAAI,MAAM,CAAC,EAC5E,MAAM,QAAQ,IAAIA,EAAQ,OAAcC,GAAQ,YAAY,CAAC,EAC7D,KAAK,YAAc,EACrB,OAASd,EAAO,CACd,QAAQ,KAAK,gCAAiCA,CAAK,CACrD,CACF,CAEA,UAAUe,EAAiC,CACzC,MAAMhC,EAAOgC,GAAclC,GAAA,EACrBiC,EAAS,KAAK,QAAQ,IAAI/B,CAAI,EAEpC,OAAK+B,IACH,QAAQ,KAAK,wBAAwB/B,CAAI,iCAAiC,EACnE,KAAK,QAAQ,IAAI,eAAe,EAI3C,CAEA,kBAA2B,CACzB,OAAO,KAAK,WACd,CAEA,MAAM,YACJkB,EACAC,EACAlI,EACAzN,EACwB,CAExB,OAAK,KAAK,aACR,MAAM,KAAK,aAGN,KAAK,mBAAmB,YAAY0V,EAAWC,EAAWlI,EAAOzN,CAAG,CAC7E,CACF,CAKO,MAAMyW,GAAgB,IAAIJ,GAKjC,eAAsBK,GACpBhB,EACAC,EACAlI,EACAzN,EACwB,CACxB,OAAOyW,GAAc,YAAYf,EAAWC,EAAWlI,EAAOzN,CAAG,CACnE,CCzUO,SAAS2W,GAAsBC,EAAmD,CACvF,MAAMC,GAAWD,GAAS,IAAI,IAAKjO,GAAM,OAAOA,CAAC,EAAE,QAAQ,OAAQ,GAAG,EAAE,MAAM,EAAE,OAAO,OAAO,EAC9F,GAAIkO,EAAQ,SAAW,EAAG,MAAO,CAAE,IAAK,oBAAqB,QAAS,0CACtE,GAAIA,EAAQ,SAAW,EAAG,MAAO,CAAE,IAAKA,EAAQ,CAAC,GAAK,oBAAqB,QAAS,6CACpF,MAAMC,EAAelU,GAAc,gBAAgB,KAAKA,CAAC,EACnDmU,EAAiBnU,GAAc,gCAAgC,KAAKA,CAAC,EACrEoU,EAAsBpU,GAAc,EAAEkU,EAAYlU,CAAC,GAAKmU,EAAcnU,CAAC,GACvEqL,EAAa4I,EAAQ,OAAOG,CAAkB,EAC9CC,EAAW,qRACXC,EAAY,0JACZC,EAAOlJ,EAAW,KAAMrL,GAAMqU,EAAS,KAAKrU,CAAC,CAAC,GAAKqL,EAAW,CAAC,GAAK4I,EAAQ,KAAKG,CAAkB,GAAKH,EAAQ,CAAC,GAAK,oBAC5H,IAAIO,EAAUnJ,EAAW,KAAMrL,GAAMA,IAAMuU,IAAQD,EAAU,KAAKtU,CAAC,GAAK,mCAAmC,KAAKA,CAAC,EAAE,GAC9GiU,EAAQ,KAAMjU,GAAMA,IAAMuU,GAAOH,EAAmBpU,CAAC,CAAC,GACtDiU,EAAQ,KAAMjU,GAAMA,IAAMuU,CAAG,GAC7B,4CACL,MAAO,CAAE,IAAAA,EAAK,QAAAC,CAAA,CAChB,CAEO,SAASC,GACd/J,EACA8F,EACAzJ,EACAhH,EACA6J,EASkC,CAClC,MAAM8K,EAAWhK,EAAI,OAAS,EAAI,eAAkBA,EAAI,OAAS,EAAI,cAAcA,EAAI,IAAI,GAAMA,EAAI,OAAS,EAAI,aAAaA,EAAI,IAAI,GAAK,cAAcA,EAAI,IAAI,GAC5JiK,EAAa/K,EAAK,iCAAiCc,EAAI,WAAYA,EAAI,MAAM,EAC7EkK,EAAM,OAAO7N,EAAM,cAAgB,EAAE,EACrC8N,EAAM,OAAO9N,EAAM,WAAa,EAAE,EAClCiB,EAAQ4B,EAAK,YAAYc,EAAI,KAAK,EAClCoK,EAAY,QAAQpK,EAAI,MAAM,MAAM,WAAWA,EAAI,MAAM,EAAE,GAC3DqK,GAAQ,IAAc,CAC1B,MAAMvK,EAAME,EAAI,OAAS,EAAG,OAAIF,IAAQ,EAAU,YAAiBA,IAAQ,EAAU,aAAqB,oBAC5G,KACMwK,EACQtK,EAAI,OAAS,IAAkB,EAAI,oBAAsB,mBAGjEuK,EACA,2EAA2E,KAAKJ,CAAG,EAAU,sBAC7F,oEAAoE,KAAKA,CAAG,EAAU,4BACnF,eAEHK,EACA,8BAA8B,KAAKN,CAAG,EAAU,aAChD,WAAW,KAAKA,CAAG,EAAU,kCAC7B,gBAAgB,KAAKA,CAAG,EAAU,yBAClC,wBAAwB,KAAKA,CAAG,EAAU,2BACvC,iBAEHO,EACA,2DAA2D,KAAKN,CAAG,EAAU,uBAC1E,GAEHO,EAAQ,sFAAsF,KAAKP,CAAG,GAAK,CAAC,QAAQ,KAAKA,CAAG,EAC5HQ,EAAS,wDAAwD,KAAKR,CAAG,EACzES,EAASF,EACV,WAAW,KAAKP,CAAG,EAAI,gCACrB,cAAc,KAAKA,CAAG,EAAI,2BACxB,mBAAmB,KAAKA,CAAG,EAAI,oBAAsB,wCACzDQ,EAAS,wBAA0B,uBACxC,IAAIE,EAAa,GACjB,GAAI,CAACxV,EACHwV,EAAa,WACJxV,EAAQ,WAAa,aAC9BwV,EAAa,uBACJxV,EAAQ,WAAa,QAAUA,EAAQ,WAAa,OAAQ,CACrE,MAAMyV,EAAIzV,EAAQ,OAAS,EAC3B,GAAIyV,EAAI,EAAG,CACT,MAAMC,EAAa,CAAC,6BAA6B,wBAAwB,8BAA8B,oBAAoB,iBAAiB,EACtIC,GAAc,CAAC,4BAA4B,uBAAuB,8BAA8B,oBAAoB,gBAAgB,EACpIC,EAAW3T,GAAgBA,EAAI,KAAK,MAAO4H,EAAK,MAAQ5H,EAAI,MAAO,CAAC,EAG1E,GADAuT,EAAa,GADQI,EAARP,EAAaK,EAAmBC,EAAT,CAChB,YAAYF,CAAC,IAC7BA,GAAK,GAAM,GAAI,CAAE5L,EAAK,aAAa,YAAc,CAAG,MAAQ,CAAC,CAEnE,MAAW4L,EAAI,EAAGD,EAAa,qBAAqB,KAAK,IAAIC,CAAC,CAAC,IAC1DD,EAAa,2BACpB,SAAWxV,EAAQ,WAAa,SAAU,CACxCwV,EAAa,gCACb,GAAI,CAAE3L,EAAK,aAAa,WAAa,CAAG,MAAQ,CAAC,CACnD,SAAW7J,EAAQ,WAAa,eAAgB,CAC9CwV,EAAa,eACb,GAAI,CAAE3L,EAAK,aAAa,WAAa,CAAG,MAAQ,CAAC,CACnD,CACoB,GAAA8K,IAAa9K,EAAK,mBAAmBc,EAAI,WAAYA,EAAI,MAAM,IAAOA,EAAI,UAAW1C,IAAW8M,IACpH,MAAMc,EAAelL,EAAI,aAAe,SAAY,OAAS,OACvDmL,GAAU,IAAc,CAC5B,MAAMC,EAAU,CAAC,eAAe,aAAa,sBAAsB,yBAAyB,eAAe,oBAAoB,oBAAoB,oBAAoB,EACvK,OAAOA,EAAQ,KAAK,MAAMlM,EAAK,MAAQkM,EAAQ,MAAM,CAAC,CACxD,KACMC,EAAU,GAAGH,CAAW,IAAIhM,EAAK,YAAc,EAAI,OAAS,mBAAmB,WAAWmL,CAAI,KAAKE,CAAS,mBAAmBC,CAAO,GAAGC,EAAS,KAAKA,CAAM,GAAK,EAAE,IACpKa,EAAO,GAAGH,CAAM,gBAAgBP,CAAM,GAAGC,CAAU,GACnDU,EAAe,GAAGrM,EAAK,cAAc4G,EAAK,IAAI,CAAC,MAAMA,EAAK,IAAI,GAC9D0F,EAAWtM,EAAK,mBAAmB4G,EAAK,WAAYA,EAAK,MAAM,EAO/D2F,EAAQ,YALS3F,EAAK,aAAe,SAAa,IAAMA,EAAK,OAAUA,EAAK,SAC7D,GAAW,sBAC1BA,EAAK,QAAU,IAAMA,EAAK,QAAU,GAAW,uBAC5C,GAAGwE,CAAW,EAEK,OAAOkB,CAAQ,KAAKD,CAAY,IAEtDG,GADQ1L,EAAI,UAAY,GAAKA,EAAI,UAAY,IAAMA,EAAI,OAAS,IAC7CA,EAAI,MAAQ,GAAK,+CAAiD,kDAAqD,GAC1I2L,EACCtW,IACDA,EAAQ,WAAa,gBAAkBA,EAAQ,WAAa,UACvDyQ,EAAK,aAAe,SAAW,yBAA2B,kCAF9C,GAOjB+D,GADU3K,EAAK,MAAQ,IAEzB,GAAG8K,CAAQ,OAAO9K,EAAK,mBAAmBc,EAAI,WAAYA,EAAI,MAAM,CAAC,KAAKsL,CAAI,IAAIG,CAAK,GAAGC,CAAQ,GAAGC,CAAK,GAC1G,GAAG3B,CAAQ,SAASC,CAAU,MAAMjK,EAAI,OAAO,IAAI1C,CAAK,MAAM8M,CAAS,KAAKiB,CAAO,IAAIC,CAAI,IAAIG,CAAK,GAAGC,CAAQ,GAAGC,CAAK,IACzH,OAEF,IAAI7B,EAAU,GACd,GAAIzU,IAAYA,EAAQ,WAAa,QAAUA,EAAQ,WAAa,QAAS,CAC3E,MAAMyV,EAAIzV,EAAQ,OAAS,EACvByV,GAAK,EAAGhB,EAAUY,EAAQ,qDAAuD,kDAC5EI,GAAK,EAAGhB,EAAUY,EAAQ,iDAAmD,qCAC7EI,EAAI,EAAGhB,EAAUY,EAAQ,wCAA0C,0CACnEI,IAAM,EAAGhB,EAAU,uCACvBA,EAAU,kEACjB,CACKA,IACC,iBAAiB,KAAKI,CAAG,EAAGJ,EAAU,wCACjC,gBAAgB,KAAKI,CAAG,EAAGJ,EAAU,qCACrC,wBAAwB,KAAKI,CAAG,EAAGJ,EAAU,4BAC7C,WAAW,KAAKI,CAAG,EAAGJ,EAAU,oCAChC,WAAW,KAAKI,CAAG,EAAGJ,EAAU,wCACpCA,EAAUY,EAAQ,6BAA+B,qCAExD,GAAI,EACcxL,EAAK,aAAe,EAAIA,EAAK,YAAc,IAC5C,GAAKwL,IAAOZ,GAAW,oFACxC,MAAQ,CAAC,CACT,MAAO,CAAE,IAAAD,EAAK,QAAAC,CAAA,CAChB,CCrJO,SAAS8B,GACd5L,EACA8F,EACAzQ,EACAwW,EACAC,EACAvT,EACA2G,EAOqC,CACrC,MAAMoK,EAAkB,GAClByC,EAAY7P,GAAyBA,IAAS,SAAW,OAAS,OAClE8P,EAAW,GAAGD,EAAS/L,EAAI,UAAU,CAAC,gBAAgBd,EAAK,mBAAmBc,EAAI,WAAYA,EAAI,MAAM,CAAC,cACzG+C,EAAc/C,EAAI,aAAe,SAAY,IAAMA,EAAI,OAAUA,EAAI,OACrE7C,EAAM6C,EAAI,OACViM,EAAajM,EAAI,aAAe,SAAY7C,GAAO,GAAKA,GAAO,GAC/D+O,EAAU/O,GAAO,IAAMA,GAAO,GAC9BgP,EAAYnM,EAAI,aAAe,SAAY7C,GAAO,GAAKA,GAAO,GACpE,IAAIsB,EAAsB,KACtBsE,GAAe,IAAM/C,EAAI,OAAS,GAAKA,EAAI,MAAQ+C,EAAatE,EAAO,WAClEsE,GAAe,GAAItE,EAAO,UAC1ByN,EAASzN,EAAO,UAChBwN,EAAWxN,EAAO,YAClB0N,IAAU1N,EAAO,YAE1B,MAAM2N,EAAOlN,EAAK,oBAAoBc,EAAI,UAAU,EAChDvB,GAAQA,IAAS2N,EAAK,OACpB3N,IAAS,WAAY6K,EAAM,KAAK,aAAa,EACxC7K,IAAS,UAAW6K,EAAM,KAAK,uBAAuB,EACtD7K,IAAS,UAAW6K,EAAM,KAAK,gBAAgB,EAC/C7K,IAAS,YAAa6K,EAAM,KAAK,kBAAkB,EACnD7K,IAAS,YAAY6K,EAAM,KAAK,+BAA+B,GAG1E,MAAM+C,EADetJ,EAAc,IACH,GAC5BsJ,GAAWrM,EAAI,MAAQ,GAAK,CAACoM,EAAK,WAAW9C,EAAM,KAAK,0BAA0B,EACtFA,EAAM,KAAK,GAAGpK,EAAK,cAAcc,EAAI,IAAI,CAAC,MAAMA,EAAI,IAAI,KAAKgM,CAAQ,EAAE,EACvE,MAAMM,EAAetM,EAAI,MAAQ,EAC3BuM,EAAU,0BAA0B,KAAKT,CAAgB,EACzDU,EAAY,wEAAwE,KAAKV,CAAgB,EAC/G,GAAIQ,GAAgBC,GAAWC,EAAW,CACxC,MAAMC,EAAe,wEAAwE,KAAKX,CAAgB,EAAI,2BAA6B,yBACnJxC,EAAM,KAAKmD,CAAY,CACzB,CACA,MAAMnU,EAAY,OAAOwT,GAAoB,EAAE,EAazCY,GAZWC,GAA8B,CAC7C,MAAM1B,EAAW3T,GAAgBA,EAAI,KAAK,MAAM4H,EAAK,MAAQ5H,EAAI,MAAM,CAAC,EACxE,MAAI,aAAa,KAAKqV,CAAE,EAAU1B,EAAK,CAAC,mCAAoC,2BAA2B,CAAC,EACpG,iBAAiB,KAAK0B,CAAE,EAAU1B,EAAK,CAAC,0BAA2B,2BAA2B,CAAC,EAC/F,WAAW,KAAK0B,CAAE,EAAU1B,EAAK,CAAC,6BAA8B,oCAAoC,CAAC,EACrG,iBAAiB,KAAK0B,CAAE,EAAU1B,EAAK,CAAC,4BAA6B,uBAAwB,6BAA6B,CAAC,EAC3H,gBAAgB,KAAK0B,CAAE,EAAU1B,EAAK,CAAC,yBAA0B,+BAA+B,CAAC,EACjG,gBAAgB,KAAK0B,CAAE,EAAU1B,EAAK,CAAC,oCAAqC,gCAAgC,CAAC,EAC7G,WAAW,KAAK0B,CAAE,EAAU,2CAC5B,iCAAiC,KAAKA,CAAE,EAAU1B,EAAK,CAAC,kBAAmB,kCAAkC,CAAC,EAC3G,IACT,GACsB,OAAO1S,GAAgB,EAAE,CAAC,EAC1CqU,EAAUR,EAAK,SAAW,KAC1BS,EAAU,SAAS,KAAKtU,GAAgB,EAAE,EA6BhD,GA5BImU,IAAUG,IAAYtU,GAAgB,MAAQqU,IAAUtD,EAAM,KAAKoD,CAAK,EAExE,QAAQ,KAAKpU,CAAS,EACxBgR,EAAM,KAAK,GAAGyC,EAAS/L,EAAI,UAAU,CAAC,8BAA8BA,EAAI,MAAM,aAAa,EAClF,0DAA0D,KAAK1H,CAAS,EAC7E,UAAU,KAAKA,CAAS,EAAGgR,EAAM,KAAK,iCAAiC,EAClE,eAAe,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,0BAA0B,EACrE,WAAW,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,4BAA4B,EACnE,YAAY,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,yBAAyB,EACjE,aAAa,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,qBAAqB,EAC9D,cAAc,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,sBAAsB,EAChE,YAAY,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,iCAAiC,EACzE,eAAe,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,yBAAyB,EACpE,aAAa,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,0BAA0B,EACnE,QAAQ,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,uBAAuB,EAC/DA,EAAM,KAAK,iCAAiC,EACxC,kBAAkB,KAAKhR,CAAS,EACzCgR,EAAM,KAAK,wCAAwC,EAE/C,WAAW,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,uCAAuC,EACzE,cAAc,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,mCAAmC,EAC7E,aAAa,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,+CAA+C,EACxF,QAAQ,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,kDAAkD,EACtF,QAAQ,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,uCAAuC,EAC3E,qBAAqB,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,oCAAoC,EACrF,iBAAiB,KAAKhR,CAAS,EAAGgR,EAAM,KAAK,6CAA6C,EAC9FA,EAAM,KAAK,4CAA4C,EAE1DuC,EAAM,GACR,MAAO,CAAE,OAAQ,YAAa,MAAO,CAAC,GAAGvC,EAAO,mBAAmB,GAErE,GAAIuC,EAAM,OACR,MAAO,CAAE,OAAQ,SAAU,MAAO,CAAC,GAAGvC,EAAO,oBAAoB,GAEnE,GAAI,CAACjU,EACH,MAAO,CAAE,OAAQ,OAAQ,MAAAiU,CAAA,EAE3B,GAAIjU,EAAQ,WAAa,aAAc,CACrC,IAAIyX,EAAM,6BACV,MAAI,SAAS,KAAKvU,CAAY,EAAGuU,EAAM,sCAC9B,gBAAgB,KAAKvU,CAAY,EAAGuU,EAAM,iDAC1C,WAAW,KAAKvU,CAAY,IAAGuU,EAAM,0CACvC,CAAE,OAAQ,aAAc,MAAO,CAAC,GAAGxD,EAAOwD,CAAG,EACtD,CACA,GAAIzX,EAAQ,WAAa,QAAUA,EAAQ,WAAa,OAAQ,CAC9D,MAAMyV,EAAIzV,EAAQ,OAAS,EACrB0X,EAAOjC,GAAK,EAAI,OAAS,OAE/B,GADe,GAASzV,EAAQ,KAAO,QAAQ,KAAKA,EAAQ,GAAG,GAAM,QAAQ,KAAKiD,CAAS,GAC/E,CACV,MAAM0U,EAAW,SAAS,KAAKzU,CAAY,EAAI,oBAAsB,GACrE,MAAO,CAAE,OAAQ,SAAS,KAAK,IAAIuS,CAAC,CAAC,GAAI,MAAO,CAAC,GAAGxB,EAAO,gDAAgD0D,CAAQ,GAAI,WAAW,KAAK,IAAIlC,CAAC,CAAC,6BAA8B,OAAO5L,EAAK,cAAc4G,EAAK,IAAI,CAAC,MAAMA,EAAK,IAAI,GAAG,EACnO,CACA,MAAMmH,EAAgBjN,EAAI,aAAe8F,EAAK,YAAe9F,EAAI,OAAS,GAAK8F,EAAK,OAAS,EACvFoH,GAAY,CAAC,cAAe,cAAe,aAAc,aAAc,UAAU,EACjFC,EAAY,CAAC,cAAe,cAAe,cAAe,aAAa,EACvElC,EAAW3T,GAAgBA,EAAI,KAAK,MAAM4H,EAAK,MAAQ5H,EAAI,MAAM,CAAC,EAClEsT,EAASE,GAAK,EAAI,GAAGG,EAAKiC,EAAS,CAAC,IAAI,KAAK,IAAIpC,CAAC,CAAC,IAAM,GAAGG,EAAKkC,CAAS,CAAC,IAAI,KAAK,IAAIrC,CAAC,CAAC,IAC1FsC,EAAO,KAAK,IAAItC,CAAC,GAAK,IAAM,IAAM,CACtC,MAAMuC,EAAQnO,EAAK,mBAAmBc,EAAI,WAAYA,EAAI,MAAM,EAC1DsN,GAAMtN,EAAI,aAAe,SAAYA,EAAI,OAAS,KAAK,MAAM,KAAK,IAAI8K,CAAC,EAAI,CAAC,EAAM9K,EAAI,OAAS,KAAK,MAAM,KAAK,IAAI8K,CAAC,EAAI,CAAC,EACzHyC,EAAUrO,EAAK,mBAAmBc,EAAI,WAAY,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKsN,EAAG,CAAC,CAAC,EACjFE,GAAMtO,EAAK,mBAAmB4G,EAAK,WAAYA,EAAK,MAAM,EAChE,MAAO,QAAQuH,CAAK,QAAQE,CAAO,aAAaC,EAAG,GACrD,KAAO,GACDC,GAAaR,EAAe,eAAiB,GACnD,MAAO,CAAE,OAAQ,GAAGF,CAAI,IAAI,KAAK,IAAIjC,CAAC,CAAC,GAAI,MAAO,CAAC,GAAGxB,EAAO,GAAGsB,CAAM,IAAIwC,CAAI,GAAG,OAAQ,OAAOlO,EAAK,cAAc4G,EAAK,IAAI,CAAC,MAAMA,EAAK,IAAI,IAAI2H,EAAU,EAAE,EAC9J,CAOA,GALAvO,EAAK,oBAAoBc,EAAI,WAAY,CACvC,KAAMvB,GAAQS,EAAK,oBAAoBc,EAAI,UAAU,EAAE,KACvD,UAAWqM,EACX,QAAS9T,GAAgB,KAC1B,EACGlD,EAAQ,WAAa,eAAgB,CACvC,MAAMb,EAAMa,EAAQ,iBAAmB,EACjCqY,EAAUlZ,EAAM,cAAc,KAAK,IAAIA,CAAG,CAAC,UAAY,GACvDmZ,EAAUzO,EAAK,mBAAmB4G,EAAK,WAAYA,EAAK,MAAM,EACpE,MAAO,CAAE,OAAQ,eAAgB,MAAO,CAAC,GAAGwD,EAAO,qCAAqCoE,CAAO,GAAI,GAAG3B,EAASjG,EAAK,UAAU,CAAC,sBAAsB6H,CAAO,GAAG,EACjK,CACA,GAAItY,EAAQ,WAAa,SAAU,CACjC,MAAMsY,EAAUzO,EAAK,mBAAmB4G,EAAK,WAAYA,EAAK,MAAM,EAC9D8H,EAAU1O,EAAK,mBAAmBc,EAAI,WAAYA,EAAI,MAAM,EAClE,MAAO,CAAE,OAAQ,SAAU,MAAO,CAAC,GAAGsJ,EAAO,mBAAmBsE,CAAO,0BAA2B,gBAAgB7B,EAASjG,EAAK,UAAU,CAAC,OAAO6H,CAAO,GAAG,EAC9J,CACA,GAAItY,EAAQ,WAAa,UAAW,CAClC,MAAMwY,EAAMxY,EAAQ,SAAWA,EAAQ,QAAQ,IAAO,UAChDE,EAASF,EAAQ,SAAWA,EAAQ,QAAQ,OAAU,EAC5D,MAAO,CAAE,OAAQ,cAAcwY,CAAE,KAAKtY,CAAK,IAAK,MAAO,CAAC,GAAG+T,EAAO,iBAAiB,EACrF,CACA,MAAO,CAAE,OAAQ,OAAQ,MAAAA,CAAA,CAC3B,CC1JO,MAAMwE,EAAa,CAexB,YAAoBpb,EAAU,CAAV,SAAAA,EAClB,MAAMuY,EAAW3T,GAAgBA,EAAI,KAAK,MAAM,KAAK,MAAQA,EAAI,MAAM,CAAC,EACxE,KAAK,QAAU,CACb,KAAM2T,EAAK,CAAC,QAAQ,OAAO,OAAO,KAAK,CAAC,EACxC,KAAMA,EAAK,CAAC,OAAO,eAAe,QAAQ,iBAAiB,CAAC,EAC5D,OAAQA,EAAK,CAAC,QAAQ,WAAW,aAAa,YAAY,CAAC,EAE/D,CArBQ,QAAU,EACV,YAAc,EACd,kBAAqC,KACrC,oBAAqC,KACrC,eAAkC,KAClC,WAA6G,CAAE,SAAU,EAAG,UAAW,EAAG,WAAY,EAAG,WAAY,EAAG,MAAO,GAC/K,aAAiJ,CAAE,QAAS,EAAG,KAAM,EAAG,OAAQ,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,UAAW,GAC3O,QACA,sBAAwB,EACxB,gBAAyG,CAC/G,OAAQ,CAAE,KAAM,KAAM,UAAW,GAAO,QAAS,MACjD,GAAI,CAAE,KAAM,KAAM,UAAW,GAAO,QAAS,KAAK,EAYpD,gBAAyB,CAAE,OAAO,KAAK,WAAa,CACpD,oBAAqB,CAAE,OAAO,KAAK,YAAc,CACjD,oBAAoB/O,EAAgB,CAAE,OAAO,KAAK,gBAAgBA,CAAI,CAAG,CACzE,oBAAoBA,EAAgB6R,EAA0E,CAAE,KAAK,gBAAgB7R,CAAI,EAAI6R,CAAK,CAClJ,0BAA0BzV,EAAyB,CACjD,GAAI,CACF,MAAMwG,EAAQ,OAAOxG,GAAa,EAAE,EAAE,cACxB,6DAA6D,KAAKwG,CAAK,GAAK,CAAC,OAAO,KAAKA,CAAK,EACjG,KAAK,aAAa,MAAQ,EAAQ,KAAK,aAAa,QAAU,CAC3E,MAAQ,CAAC,CACX,CACA,mBAAmBqB,EAAkB6N,EAAqBC,EAA4E,CACpI,GAAI,KAAK,oBAAsB9N,EAAM,WAAY,CAC3C,KAAK,YAAc,IAAG,KAAK,SAAW,GAC1C,KAAK,YAAc,EACnB,KAAK,kBAAoBA,EAAM,WAC/B,KAAK,oBAAsBA,EAAM,OACjC,KAAK,eAAiBA,EAAM,WAC5B,KAAK,WAAa,CAAE,SAAU,EAAG,UAAW,EAAG,WAAY,EAAG,WAAY,EAAG,MAAO,GACpF,MAAM+N,EAAOD,EAAmB9N,EAAM,WAAYA,EAAM,MAAM,EACxDgO,EAAWhO,EAAM,aAAe,SAAY,OAAS,OACrDhD,EAAMgD,EAAM,OACZiO,EAAajO,EAAM,aAAe,SAAahD,GAAO,GAAOA,GAAO,GAEpEkR,GADUlO,EAAM,aAAe,SAAahD,GAAO,GAAOA,GAAO,IAClD,6DACjBiR,EAAY,yDACZ,2CACJJ,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASG,CAAO,kBAAkBD,CAAI,IAAK,EAC/EF,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,CACrD,CACF,CACA,sBAA6B,CAAE,KAAK,aAAe,CAAG,CAEtD,qBAAqBlO,EAAkB6N,EAAqBM,EAAsB,CAChF,GAAI,KAAK,qBAAuB,MAAQ,KAAK,gBAAkB,KAAM,CACnE,MAAMC,EAAQ,KAAK,YACbC,EAAS,KAAK,WAAW,WACzBC,EAAQ,KAAK,WAAW,SAAW,KAAK,WAAW,UAAY,eAAkB,KAAK,WAAW,UAAY,KAAK,WAAW,SAAW,YAAc,WACtJC,EAAQ,KAAK,iBAAmB,SAAY,OAAS,OACrDC,EAAeJ,GAAS,GAAKC,GAAU,IAAO,KAAK,WAAW,YAAc,EAC5EI,EAAWL,GAAS,GAAKC,GAAU,GACzC,IAAIK,EAAO,GACPP,IAAW,YACbO,EAAOF,EACH,uDAAuDD,CAAI,cAC1DE,EAAW,4DAA4DF,CAAI,aAAe,2BAA2BH,CAAK,cAAc,KAAK,IAAIC,CAAM,CAAC,IACpJF,IAAW,OACpBO,EAAQN,GAAS,EAAK,GAAGG,CAAI,yDAA2D,iBAAiBH,CAAK,wBACrGD,IAAW,QACpBO,EAAO,sBAAsBH,CAAI,gBACxBJ,IAAW,SACpBO,EAAO,sCAAsCH,CAAI,IAEjDG,EAAO,eAAeP,CAAM,MAAMC,CAAK,WAAW,KAAK,IAAIC,CAAM,CAAC,UAAUA,GAAU,EAAI,SAAW,MAAM,IAE7G,MAAMH,EACAC,IAAW,YAAoBM,EAAW,6CAAgDD,EAAc,iDAAmD,gCAC3JL,IAAW,SAAiB,uDAC5BA,IAAW,QAAgB,6CAC3BA,IAAW,OAAe,GAAGG,CAAK,yBAC/B,GAAGA,CAAK,aAEjBT,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,EAEnD,GAAI,CAGF,GAFoBC,IAAW,QAAUC,GAAS,GAAKC,EAAS,OAC1C,uBAAyB,OAAa,sBAAwB,EAChF,KAAK,uBAAyB,EAAG,CACnC,MAAMM,EAAK,KAAK,QACVC,EAAUD,EAAG,SAAW,QAC1B,kBAAkBA,EAAG,MAAM,KAAKA,EAAG,IAAI,IACtCA,EAAG,OAAS,OAAS,eAAeA,EAAG,IAAI,wBAA0B,0CACpEE,EAAW,KAAK,WAAW,SAAW,KAAK,WAAW,WAAc,EAAI,4CAA8C,4CAC5HhB,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASe,CAAM,GAAI,EACvDf,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQgB,CAAO,GAAI,EACvD,KAAK,sBAAwB,CAC/B,CACF,MAAQ,CAAC,CACX,CACF,CACF,CCpGO,SAASC,GACd9O,EACA+G,EACAgI,EACAhQ,EAO2C,CAC3C,MAAM8O,EAAsB,GAC5B,IAAIlI,EAAO,CAAE,GAAG3F,CAAA,EAEZhK,GADO+I,EAAK,aAAejK,GACd,SACZ6Q,EAAK,UAAY,GAAKA,EAAK,UAAY,IAAMA,EAAK,MAAQ,KAAOA,EAAK,MAAQ3P,EAAU,MAC3FA,EAAU2P,EAAK,MAAQ,IACvBkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,sBAAuB,EAC3DA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAAE,KAAM,aAAe,GAE7DlI,EAAK,MAAQ,KAAK,IAAI,EAAGA,EAAK,MAAQ3P,CAAO,EAE7C,MAAMgZ,EAASjI,IAAS,SAClBkI,EAAsBlQ,EAAK,UAAUgQ,EAASpJ,EAAK,KAAK,GAAK5G,EAAK,OAAO4G,EAAK,KAAK,EACnFuJ,EAAK9b,GAAe2L,EAAK,IAAK,CAAE,OAAAiQ,EAAQ,oBAAAC,EAAqB,EAC7DE,EAAqBJ,IAAY,SAAW,KAAO,SACnD9J,EAAUkK,IAAa,SAAWD,EAAG,SAAW,IAAMA,EAAG,SAC/DvJ,EAAK,WAAauJ,EAAG,SAAWH,EAAUI,EAC1CxJ,EAAK,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKV,CAAO,CAAC,EAChD,MAAMf,EAAK,CAAE,KAAM,EAAG,KAAM,IAC5ByB,EAAK,KAAOzB,EAAG,KAAMyB,EAAK,KAAOzB,EAAG,KACpC2J,EAAO,KAAK,CAAE,KAAM,UAAW,QAAS,CAAE,OAAAmB,CAAA,EAAU,EACpD,GAAI,CACF,MAAMI,EAAyBzJ,EAAK,WAC9B0J,EAAWtQ,EAAK,mBAAmBqQ,EAAczJ,EAAK,MAAM,EAC5DmF,EAAW3T,GAAgBA,EAAI,KAAK,MAAM4H,EAAK,MAAQ5H,EAAI,MAAM,CAAC,EAClEmY,EAAOxE,EAAK,CAAC,gBAAgB,yBAAyB,kBAAkB,gBAAgB,aAAa,CAAC,EACtGyE,EAAQzE,EAAK,CAAC,0BAA0B,sBAAsB,qBAAqB,uBAAuB,qBAAqB,CAAC,EAChI0E,EAAW1E,EAAK,CAAC,gBAAgB,WAAW,WAAW,CAAC,EACxD2E,EAAcL,IAAiB,SAAWzJ,EAAK,OAAU,IAAMA,EAAK,OACpE+J,EAAYD,GAAe,GAC3BE,EAAaF,GAAe,GAC5BG,EAAc,CAAC,gCAAgC,iCAAiC,2CAA2C,EAC3HC,EAAe,CAAC,4BAA4B,gCAAgC,EAE5E5C,EAAoBnC,EAAb6E,EADU,CAAC,kCAAkC,mCAAmC,iCAAiC,EAC5ED,EAAiBE,EAAoB,CAAC,GAAGA,EAAa,GAAGC,CAAY,CAA1E,EACvCnB,EAAOiB,EACT,oBAAoBL,CAAI,IAAIC,CAAK,eAAeC,CAAQ,KAAKvC,CAAI,qBAAqBoC,CAAQ,IAC7FK,EACC,oBAAoBJ,CAAI,IAAIC,CAAK,eAAeC,CAAQ,KAAKvC,CAAI,oBAAoBoC,CAAQ,IAC7F,oBAAoBC,CAAI,IAAIC,CAAK,eAAeC,CAAQ,KAAKvC,CAAI,iBAAiBoC,CAAQ,IAC1FnB,EACFpD,EADQ6E,EACH,CAAC,kEAAkE,wDAAyD,kDAAkD,EAClLD,EACM,CAAC,wDAAwD,sCAAsC,EAC/F,CAAC,yDAAyD,uDAAuD,0CAA0C,CAHkB,EAIxL7B,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,CACrD,MAAQ,CAAC,CACT,OAAAL,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAClC,QAASlI,EAAK,QAAS,MAAOA,EAAK,MAAO,KAAMA,EAAK,KAAM,KAAMA,EAAK,KAAM,OAAQA,EAAK,OAAQ,WAAYA,EAAK,WAAY,MAAO,CAAE,OAAQA,EAAK,MAAM,OAAQ,GAAIA,EAAK,MAAM,GAAG,EACnL,EACI,CAAE,MAAOA,EAAM,OAAAkI,CAAA,CACxB,CAEO,SAASiC,GACdjQ,EACA8F,EACA5G,EAK2C,CAC3C,MAAM8O,EAAsB,GACtBkC,EAAwBlQ,EAAI,WAC5B4H,EAAO3T,GAAY,CAAE,OAAQ+L,EAAI,OAAQ,YAAAkQ,GAAehR,EAAK,IAAKvM,CAAe,EACjFwd,EAASjR,EAAK,mBAAmBgR,EAAalQ,EAAI,MAAM,EACxD0F,EAAsBwK,IAAgB,SAAW,KAAO,SACxDE,EAAOlR,EAAK,mBAAmB0I,EAAK,gBAAkBlC,EAAYwK,EAAatI,EAAK,MAAM,EACnF,OAAOA,EAAK,UAAa,UAAWA,EAAK,SACtD,MAAMpT,EAAMoT,EAAK,aAAe,EAC1BqD,EAAW3T,GAAgBA,EAAI,KAAK,MAAM4H,EAAK,MAAQ5H,EAAI,MAAM,CAAC,EAClEmY,EAAOxE,EAAK,CAAC,uBAAuB,eAAe,gBAAgB,mBAAmB,mBAAmB,CAAC,EAC1GyE,EAAQzE,EAAK,CAAC,sBAAsB,2BAA2B,qBAAqB,qBAAqB,CAAC,EAC1GoF,EAAU7b,GAAO,GAAKyW,EAAK,CAAC,cAAc,kBAAkB,2BAA2B,CAAC,EAAIA,EAAK,CAAC,+BAA+B,0BAA0B,wBAAwB,CAAC,EACpL4D,EAAO,GAAGY,CAAI,SAASU,CAAM,KAAKT,CAAK,YAAYW,CAAO,QAAQ7b,CAAG,aAAa4b,CAAI,IACtF/B,EAAM7Z,GAAO,GAAK,wDAA0D,iDAClFwZ,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,EACnDvI,EAAK,WAAa8B,EAAK,gBAAmBsI,IAAgB,SAAW,KAAO,SAAYA,EACxFpK,EAAK,OAAS8B,EAAK,OACnB,MAAMvD,EAAK,CAAE,KAAM,EAAG,KAAM,IAC5B,OAAAyB,EAAK,KAAOzB,EAAG,KAAMyB,EAAK,KAAOzB,EAAG,KACpCnF,EAAK,qBAAqB4G,EAAMkI,EAAQ,MAAM,EAC9CA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAClC,QAASlI,EAAK,QAAS,MAAOA,EAAK,MAAO,KAAMA,EAAK,KAAM,KAAMA,EAAK,KAAM,OAAQA,EAAK,OAAQ,WAAYA,EAAK,WAAY,MAAO,CAAE,OAAQA,EAAK,MAAM,OAAQ,GAAIA,EAAK,MAAM,GAAG,EACnL,EACI,CAAE,MAAOA,EAAM,OAAAkI,CAAA,CACxB,CC1GO,SAASsC,GACdnQ,EACAjE,EACAgD,EAS2C,CAC3C,MAAM8O,EAAsB,GAC5B,IAAIlI,EAAO,CAAE,GAAG3F,CAAA,EAChB,MAAMzC,EAAOoI,EAAK,MAAM,OAASA,EAAK,MAAM,IAC3B5G,EAAK,YAAY,CAAE,KAAAxB,EAAM,QAASoI,EAAK,QAAS,MAAOA,EAAK,MAAO,KAAA5J,CAAA,CAAM,IACpFA,IAAS,MAAS,IAAoB,CAAE,MAAM1C,EAAOsM,EAAK,UAAY,GAAKA,EAAK,OAAS,IAAQ,OAAIpI,EAAO,GAAK,CAACA,GAAQ,GAAKlE,EAAa,MAAc,MAAQ,KAAQ,WAC/J,MACC0F,EAAK,MAAQ,KAEvBhD,IAAS,SAAU4J,EAAK,MAAM,QAAU,EAAQA,EAAK,MAAM,IAAM,EACrEkI,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,GAAG9O,EAAK,mBAAmBhD,EAAM,CAAC,EAAG,KAAM,YAAc,GAGtFgD,EAAK,mBAAmBA,EAAK,GAAG,IAEvChD,IAAS,SAAU4J,EAAK,MAAM,QAAU,EAAQA,EAAK,MAAM,IAAM,EACrEkI,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,GAAG9O,EAAK,mBAAmBhD,EAAM,CAAC,EAAG,KAAM,MAAQ,GAG/F4J,EAAK,YAAc,GACnB,MAAMyK,EAASrR,EAAK,oBAAoB,CAAE,SAAUA,EAAK,WAAWhD,EAAM4J,EAAK,KAAK,EAAG,QAASA,EAAK,QAAS,MAAOA,EAAK,MAAO,GAAK,SAChIuJ,EAAKnQ,EAAK,eAAe4G,EAAMyK,EAAQrU,CAAI,EACjD,MAAO,CAAE,MAAOmT,EAAG,MAAO,OAAQ,CAAC,GAAGrB,EAAQ,GAAGqB,EAAG,MAAM,EAC5D,CAEO,SAASxa,GACdsL,EACArL,EACAoH,EACAgD,EAY2C,CAC3C,MAAM8O,EAAsB,GAC5B,IAAIlI,EAAO,CAAE,GAAG3F,CAAA,EAChB,MAAMH,EAAM,CAAE,GAAG8F,CAAA,EACjB,IAAI3P,EAAU+I,EAAK,4BACfsR,EAAmB,GAWvB,IAVKxQ,EAAI,UAAY,GAAKA,EAAI,UAAY,IAAMA,EAAI,MAAQ,KAAOA,EAAI,MAAQ7J,EAAU,MACvFA,EAAU6J,EAAI,MAAQ,IACtBwQ,EAAmB,IAErB1K,EAAK,MAAQ,KAAK,IAAI,EAAG9F,EAAI,MAAQ7J,CAAO,EACxCqa,IACFxC,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,4BAA6B,EACjEA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAAE,KAAM,aAAe,GAEhD9O,EAAK,qBAAqBA,EAAK,IAAKpK,CAAY,EACnD,CACJoH,IAAS,SAAU4J,EAAK,MAAM,QAAU,EAAQA,EAAK,MAAM,IAAM,EACrEkI,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,GAAG9O,EAAK,mBAAmBhD,EAAM,CAAC,EAAG,KAAM,MAAQ,EAC3F,MAAMmO,EAAOnL,EAAK,aACZ2P,EAAO,mBAAmB/Z,CAAY,KAAKuV,CAAI,uBAAuBvE,EAAK,MAAM,MAAM,WAAWA,EAAK,MAAM,EAAE,MAAMA,EAAK,OAAO,IAAI5G,EAAK,YAAY4G,EAAK,KAAK,CAAC,GACjKuI,EAAM,qDACZL,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,EACnD,MAAMgB,EAAKnQ,EAAK,eAAe4G,EAAM,SAAU5J,CAAI,EACnD4J,EAAOuJ,EAAG,MACVrB,EAAO,KAAK,GAAGqB,EAAG,MAAM,CAC1B,KAAO,CACL,MAAMoB,EAAOvR,EAAK,oBAAoB,CAAE,OAAQ4G,EAAK,OAAQ,WAAY5J,CAAA,EAAQpH,CAAY,EAC7FgR,EAAK,WAAa2K,EAAK,WACvB3K,EAAK,OAAS2K,EAAK,OACnB,MAAMpM,EAAK,CAAE,KAAM,EAAG,KAAM,IAC5ByB,EAAK,KAAOzB,EAAG,KAAMyB,EAAK,KAAOzB,EAAG,KACpC,MAAMqM,EAAUxR,EAAK,mBAAmB4G,EAAK,WAAYA,EAAK,MAAM,EAC9DuE,EAAOnL,EAAK,aACZ2P,EAAO,mBAAmB/Z,CAAY,KAAKuV,CAAI,eAAevE,EAAK,aAAe,SAAW,OAAS,MAAM,YAAY4K,CAAO,IAC/HrC,EAAM,4CACZL,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,CACrD,CACA,OAAAL,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS9O,EAAK,WAAW4G,CAAI,EAAG,EACpD,CAAE,MAAOA,EAAM,OAAAkI,CAAA,CACxB,CC9FO,SAAS2C,GACdnP,EACAoP,EACAC,EACA3R,EAIA4R,EAC2C,CAC3C,MAAM9C,EAAsB,GAC5B,IAAIlI,EAAO,CAAE,GAAGtE,CAAA,EAChB,GAAI,CACF,MAAMqM,EAAKiD,GAAM,IAAM,UACjBvb,EAAQub,GAAM,OAAS,EACvB9G,EAAW,GAAG9K,EAAK,cAAc4G,EAAK,IAAI,CAAC,MAAMA,EAAK,IAAI,GAC1DiL,EAAMH,IAAa,SACrB,cAAc/C,CAAE,KAAKtY,CAAK,0BAA0ByU,CAAQ,GAC5D,cAAc6D,CAAE,KAAKtY,CAAK,uCAAuCyU,CAAQ,GAC7EgE,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS+C,EAAK,CAC3C,MAAQ,CAAC,CAKT,GAJIF,EAAK,uBACN/K,EAAa,qBAAuB,GACrCkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,wDAAyD,GAE3F,CAAClI,EAAK,UAAY,CAACA,EAAK,YAAa,CACvC,MAAMkL,EAAa,EAASlL,EAAa,qBACzC,GAAIA,EAAK,QAAU,GAAK,CAACkL,EAAY,CACnC,MAAMC,EAAenL,EAAK,QAC1BkI,EAAO,KAAK,CAAE,KAAM,eAAgB,QAAS,CAAE,QAASiD,CAAA,EAAgB,EACxEjD,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAWiD,CAAY,WAAWnL,EAAK,MAAM,MAAM,WAAWA,EAAK,MAAM,EAAE,GAAI,EAC/GmL,IAAiB,GACnBjD,EAAO,KAAK,CAAE,KAAM,WAAY,EAChClI,EAAK,QAAU,EACfA,EAAK,MAAQ,KACJmL,IAAiB,GAC1BnL,EAAK,SAAW,GAChBkI,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,MAAOlI,EAAK,OAAS,IAE7DA,EAAK,QAAUmL,EAAe,EAC9BnL,EAAK,MAAQ,IAEjB,CACF,CACA,OAAAkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS9O,EAAK,WAAW4G,CAAI,EAAG,EACpD,CAAE,MAAOA,EAAM,OAAAkI,CAAA,CACxB,CC/CO,SAASkD,GACd/Q,EACAgR,EACAjS,EAI2C,CAC3C,MAAM8O,EAAsB,GAC5B,IAAIlI,EAAO,CAAE,GAAG3F,CAAA,EAChB,MAAMiR,EAAUlS,EAAK,UAAUiS,IAAc,SAAW,KAAO,SAAUrL,EAAK,KAAK,EAC7EuL,EAASnS,EAAK,uBAAuB,CAAE,QAAAkS,CAAA,CAAS,GAAK,aACrDlC,EAAoBiC,EAC1B,GAAIE,IAAW,aAAc,CAC3B,MAAM/B,EAAqBJ,IAAY,SAAW,KAAO,SACnD/R,EAAMmS,IAAa,SAAW,GAAK,GACzCxJ,EAAK,WAAawJ,EAClBxJ,EAAK,OAAS3I,EACd,MAAMkH,EAAK,CAAE,KAAM,EAAG,KAAM,IAC5ByB,EAAK,KAAOzB,EAAG,KAAMyB,EAAK,KAAOzB,EAAG,KACpC2J,EAAO,KAAK,CAAE,KAAM,UAAW,QAAS,CAAE,OAAQ,IAAS,CAC7D,KAAO,CACL,MAAMsB,EAAqBJ,IAAY,SAAW,KAAO,SACnD/R,EAAMmS,IAAa,SAAW,GAAK,GACzCxJ,EAAK,WAAawJ,EAClBxJ,EAAK,OAAS3I,EACd,MAAMkH,EAAK,CAAE,KAAM,EAAG,KAAM,IAC5ByB,EAAK,KAAOzB,EAAG,KAAMyB,EAAK,KAAOzB,EAAG,KACpC2J,EAAO,KAAK,CAAE,KAAM,UAAW,QAAS,CAAE,OAAQ,IAAS,CAC7D,CACA,OAAAA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAClC,QAASlI,EAAK,QAAS,MAAOA,EAAK,MAAO,KAAMA,EAAK,KAAM,KAAMA,EAAK,KAAM,OAAQA,EAAK,OAAQ,WAAYA,EAAK,WAAY,MAAO,CAAE,OAAQA,EAAK,MAAM,OAAQ,GAAIA,EAAK,MAAM,GAAG,EACnL,EACI,CAAE,MAAOA,EAAM,OAAAkI,CAAA,CACxB,CCnCO,SAASsD,GAAW,EAAc,CACvC,MAAO,CACL,QAAS,EAAE,QACX,MAAO,EAAE,MACT,KAAM,EAAE,KACR,KAAM,EAAE,KACR,OAAQ,EAAE,OACV,WAAY,EAAE,WACd,MAAO,CAAE,OAAQ,EAAE,MAAM,OAAQ,GAAI,EAAE,MAAM,GAAG,CAEpD,CCGO,SAASC,GAAYlU,EAAiBC,EAAwB,CACnE,OAAQD,IAAY,GAAKA,IAAY,IAAMC,GAAS,GACtD,CAyBO,SAASkU,EAAmBtV,EAAgBuV,EAA0D,CAC3G,OAAOvV,IAAS,SAAW,CAAE,YAAauV,EAAQ,QAAS,GAAM,CAAE,YAAa,EAAG,QAASA,CAAA,CAC9F,CAOO,SAASC,GAAmBhf,EAAmB,CAEpD,MAAME,EAAO+e,EAASjf,CAAG,EAAIif,EAASjf,CAAG,EAEzC,OADYiC,GAAiB/B,CAAI,GAAK,IAC3B,MAAQ,GACrB,CAOO,SAASgf,GAAWlf,EAA6C,CACtE,MAAMyM,EAAIzM,EAAA,EACV,OAAIyM,EAAI,IAAa,YACjBA,EAAI,GAAY,aACb,QACT,CAQO,SAAS0S,GAAU3V,EAAgB0C,EAAgD,CACxF,MAAMlB,EAAOkB,EAAM,OAASA,EAAM,GAClC,OAAQ1C,IAAS,SAAWwB,EAAO,CAACA,GAAQ,CAC9C,CAQO,SAASoU,GAAW5V,EAAgB0C,EAAgD,CACzF,MAAMlB,EAAOkB,EAAM,OAASA,EAAM,GAClC,OAAQ1C,IAAS,SAAWwB,EAAO,CAACA,GAAQ,CAC9C,CAOO,SAASqU,GAAOnT,EAAgD,CACrE,OAAOA,EAAM,SAAWA,EAAM,EAChC,CCvFO,SAASoT,EAAc3W,EAAmB,CAC/C,OAAIA,IAAM,EAAU,MAChBA,IAAM,EAAU,MAChBA,IAAM,EAAU,MACb,GAAG,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAC,CAAC,CAAC,IACvC,CAOO,SAAS4W,GAAYC,EAA8B,CACxD,MAAMpf,EAAI,KAAK,MAAM,KAAK,IAAI,EAAGof,CAAY,EAAI,EAAE,EAC7C5c,EAAI,KAAK,MAAM,KAAK,IAAI,EAAG4c,CAAY,EAAI,EAAE,EAC7CC,EAAK7c,EAAI,GAAK,IAAIA,CAAC,GAAK,OAAOA,CAAC,EACtC,MAAO,GAAGxC,CAAC,IAAIqf,CAAE,EACnB,CAiBO,SAASC,GAAiCC,EAAsB/d,EAAwB,CAC7F,MAAMge,EAAOD,IAAe,SAAa/d,GAAU,GAAOA,GAAU,GAC9DiB,EAAS8c,IAAe,SAAa/d,GAAU,GAAK,KAAK,IAAI,EAAGA,CAAM,EAAI,KAAK,IAAI,EAAG,IAAMA,CAAM,EAAMA,GAAU,GAAK,KAAK,IAAI,EAAG,IAAMA,CAAM,EAAI,KAAK,IAAI,EAAGA,CAAM,EAC3K,OAAOge,EAAM,aAAa/c,CAAK,GAAK,OAAOA,CAAK,EAClD,CAQO,SAAS0Y,EAAmBoE,EAAsB/d,EAAwB,CAC/E,MAAM8G,EAAS,GAAc,KAAK,IAAI,EAAG,KAAK,IAAI,GAAI,CAAC,CAAC,EACxD,OAAIiX,IAAe,SACb/d,GAAU,GAAW,QAAQ8G,EAAM9G,CAAM,CAAC,GACvC,QAAQ8G,EAAM,IAAM9G,CAAM,CAAC,GAE9BA,GAAU,GAAW,QAAQ8G,EAAM,IAAM9G,CAAM,CAAC,GAC7C,QAAQ8G,EAAM9G,CAAM,CAAC,EAEhC,CCtBO,SAASuB,GACdmK,EACA3K,EACAkd,EACAC,EACAC,EAAsB,GACtBpM,EACsB,CACtB,GAAIoM,EACF,MAAO,CAAE,QAAS,EAAG,iBAAkB,IAGzC,MAAMC,EAAcnB,GAAYvR,EAAI,QAASA,EAAI,KAAK,EACtD,IAAI7J,EAAU,EACVqa,EAAmB,GAGvB,GAAInb,EAAS,CACX,MAAMY,EAAe,CAACoQ,GACpBhR,EAAQ,WAAa,SACpBA,EAAQ,OAAS,GAAK,IACtBA,EAAQ,OAAS,IAAM2K,EAAI,KAG9B7J,EAAUJ,GAAqBV,EAASqd,EAAazc,EAD1Csc,GAAetd,CAC2C,CACvE,CAGA,OAAIud,IAAU,YAAcA,IAAU,YACpCrc,EAAU,KAAK,IAAI,EAAG,KAAK,MAAMA,EAAU,EAAG,CAAC,EACtCqc,IAAU,cACfnd,IAAYA,EAAQ,WAAa,QAAUA,EAAQ,WAAa,UAClEc,EAAU,KAAK,IAAIA,EAAS,EAAE,EAC9BA,EAAU,KAAK,IAAIA,EAAS,EAAE,IAK7B6J,EAAI,UAAY,GAAKA,EAAI,UAAY,IAAMA,EAAI,MAAQ,KAAOA,EAAI,MAAQ7J,EAAU,MACvFA,EAAU6J,EAAI,MAAQ,IACtBwQ,EAAmB,IAGd,CAAE,QAAAra,EAAS,iBAAAqa,CAAA,CACpB,CAQO,SAASmC,GAAaxS,EAAkByS,EAA6C,CAC1F,MAAM9M,EAAO,CAAE,GAAG3F,CAAA,EAClB,OAAA2F,EAAK,MAAQ,KAAK,IAAI,EAAG3F,EAAM,MAAQyS,EAAW,OAAO,EAClD9M,CACT,CAQO,SAAS+M,GACd3e,EACA4e,EACe,CAMf,MAAMC,EAAW7e,EAAI,SAAW,EAC1B8G,EAAW9G,EAAI,KAAO,EACtBkd,EAAUld,EAAI,KAAO,EAG3B,GAAI6e,GAAY7e,EAAI,OAAS,IAAK,CAChC,GAAI8G,GAAY,KAAK,IAAI9G,EAAI,IAAI,GAAK,EACpC,MAAO,cACEkd,GAAW,KAAK,IAAIld,EAAI,IAAI,GAAK,GAC1C,MAAO,YAEX,CAGA,GAAIqd,GAAYrd,EAAI,QAASA,EAAI,KAAK,EAAG,CACvC,GAAI8G,EAAU,MAAO,WACrB,GAAIoW,EAAS,MAAO,YACtB,CAEA,MAAO,QACT,CC/FO,MAAM4B,EAAa,CACxB,YAAoB9e,EAAkB,CAAlB,SAAAA,EAClB,KAAK,QAAU,IAAI4Z,GAAa,KAAK,IAAI,GAAG,CAC9C,CAGQ,QASR,YAAY3N,EAAkB9D,EAA6D,CACzF,MAAM2R,EAAsB,GAGtByE,EAAa,EAAStS,EAAc,qBAEpCH,EAAM,CAAE,GAAGG,CAAA,EACX8S,EAAa,QAAQ,KAAK,OAAO5W,EAAM,SAAS,CAAC,EACjD/I,EAAM4S,GAAgB,CAAE,MAAOlG,EAAK,OAAQ,KAAK,IAAI,OAAQ,SAAU3D,EAAM,SAAU,UAAWA,EAAM,UAAW,aAAcA,EAAM,aAAc,IAAK,KAAK,IAAI,IAAK,EACxKgK,EAAqB/S,EAAY,kBAMvC,GAHA,KAAK,mBAAmB0M,EAAKgO,CAAM,EAG9B1a,EAAY,SAAYA,EAAY,QAAQ,WAAa,WAAcA,EAAY,QAAQ,QAC9F,OAAO,KAAK,cAAc0M,EAAK1M,EAAY0a,CAAM,EAGnD,IAAIlI,EAAO,CAAE,GAAGxS,EAAI,OAGpB,MAAMkf,EAAQ,KAAK,sBAAsBxS,CAAG,EACtC4S,EAAa/c,GAAiBmK,EAAK1M,EAAI,QAAoB,KAAK,IAAI,YAAakf,EAAOC,EAAYpM,CAAiB,EAgB3H,GAfAP,EAAO6M,GAAa7M,EAAM8M,CAAU,EAGhCA,EAAW,mBACb5E,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,sBAAuB,EAC3DA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAAE,KAAM,aAAe,GAI7D,KAAK,kBAAkBhO,EAAK8F,EAAMzJ,EAAO/I,EAAY0a,EAAQiF,CAAU,EAGvE,KAAK,gBAAgBjT,EAAK3D,CAAK,EAG3B,CAACyJ,EAAK,UAAY,CAACxS,EAAI,WAAa,CAACA,EAAI,QAAU2f,GAAcjT,EAAI,OAAS,EAAG,CACnF,MAAMkT,EAAUjD,GAAqBjQ,EAAK8F,EAAM,CAC9C,IAAK,KAAK,IAAI,IACd,mBAAoB,CAAC5L,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,EACrD,qBAAsB,CAAC7d,EAAG8d,EAAI9E,IAAW,KAAK,qBAAqBhZ,EAAG8d,EAAI9E,CAAM,EACjF,EACD,MAAO,CAAE,MAAO4E,EAAQ,MAAO,OAAQ,CAAC,GAAGlF,EAAQ,GAAGkF,EAAQ,MAAM,EACtE,CAGA,OAAI5f,EAAI,UACC,KAAK,gBAAgB0M,EAAK8F,EAAMkI,CAAM,EACpC1a,EAAI,OACN,KAAK,aAAa0M,EAAK8F,EAAMkI,CAAM,EAIxC,CAAClI,EAAK,UAAY,CAACxS,EAAI,WAAa,CAACA,EAAI,QAAU,CAAC+S,GAClD,KAAK,kBAAkBrG,EAAK1M,EAAI,OAAkB,EAC7C,KAAK,sBAAsB0M,EAAK8F,EAAMkI,CAAM,EAKnD,CAAClI,EAAK,UAAY,CAACA,EAAK,aACtBA,EAAK,QAAU,GAAK,CAASA,EAAK,qBAC7B,KAAK,wBAAwBA,EAAMkI,CAAM,GAIpDA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,KAAK,WAAWlI,CAAI,EAAG,EACpD,CAAE,MAAOA,EAAM,OAAAkI,CAAA,EACxB,CAUA,wBAAwBxM,EAAmBoP,EAA8BC,EAAgCC,EAA8F,CACrM,OAAOuC,GAA2B7R,EAAQoP,EAAUC,EAAM,CACxD,cAAgBxV,GAAM2W,EAAc3W,CAAC,EACrC,WAAa/F,GAAM,KAAK,WAAWA,CAAC,GACnCwb,CAAI,CACT,CAQA,qBAAqB3Q,EAAkBjE,EAA2D,CAChG,OAAOoX,GAAwBnT,EAAOjE,EAAM,CAC1C,IAAK,IAAM,KAAK,IAAI,UAAY,IAAM,CAAE,MAAM,IAAI,MAAM,kBAAkB,CAAG,KAC7E,mBAAqBiD,GAAMuS,GAAmBvS,CAAQ,EACtD,mBAAoB,CAAC7J,EAAG4E,IAAMsX,EAAmBlc,EAAG4E,CAAC,EACrD,WAAY,CAAC5E,EAAGsJ,IAAUkT,GAAWxc,EAAGsJ,CAAK,EAC7C,eAAgB,CAACJ,EAAI0I,EAAMgI,IAAY,KAAK,eAAe1Q,EAAI0I,EAAMgI,CAAO,EAC5E,GAAI,KAAK,IAAI,QAAQ,UAAY,CAAE,UAAW,KAAK,IAAI,OAAO,UAAU,KAAK,KAAK,IAAI,MAAM,GAAM,GAClG,GAAI,KAAK,IAAI,QAAQ,kBAAoB,CAAE,kBAAmB,KAAK,IAAI,OAAO,kBAAkB,KAAK,KAAK,IAAI,MAAM,GAAM,EAAC,CAC5H,CACH,CASA,iBAAiB/O,EAAkBrL,EAAsBoH,EAA2D,CAClH,OAAOqX,GAAqBpT,EAAOrL,EAAcoH,EAAM,CACrD,IAAK,IAAM,KAAK,IAAI,UAAY,IAAM,CAAE,MAAM,IAAI,MAAM,kBAAkB,CAAG,KAC7E,qBAAsB,CAACiD,EAAG2L,IAAM0I,GAAqBrU,EAAU2L,CAAC,EAChE,mBAAoB,CAACxV,EAAG4E,IAAMsX,EAAmBlc,EAAG4E,CAAC,EACrD,WAAY,IAAM0X,GAAW,KAAK,IAAI,GAAI,EAC1C,YAAcvW,GAAM4W,GAAY5W,CAAC,EACjC,mBAAoB,CAACnB,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,EACrD,eAAgB,CAAC3U,EAAI0I,EAAMgI,IAAY,KAAK,eAAe1Q,EAAI0I,EAAMgI,CAAO,EAC5E,WAAa5Z,GAAM,KAAK,WAAWA,CAAC,EACpC,6BAA8B,KAAK,IAAI,aAAeme,GAA4B,UAClF,oBAAqB,CAACC,EAAM5I,IAAMrF,GAAoBiO,CAAc,EACrE,CACH,CAQA,qBAAqBvT,EAAkBgR,EAAgE,CACrG,OAAOwC,GAAwBxT,EAAOgR,EAAW,CAC/C,GAAI,KAAK,IAAI,QAAQ,qBAAuB,CAAE,qBAAsB,KAAK,IAAI,OAAO,qBAAqB,KAAK,KAAK,IAAI,MAAM,GAAM,GACnI,UAAW,CAAC7b,EAAGsJ,IAAUiT,GAAUvc,EAAGsJ,CAAK,EAC5C,CACH,CASA,eAAeuB,EAAkB+G,EAAyBgI,EAA8D,CACtH,OAAO0E,GAAkBzT,EAAO+G,EAAMgI,EAAS,CAC7C,IAAK,KAAK,IAAI,IACd,YAAa,KAAK,IAAI,YACtB,UAAW,CAAC5Z,EAAGsJ,IAAUiT,GAAUvc,EAAGsJ,CAAK,EAC3C,OAASA,GAAUmT,GAAOnT,CAAK,EAC/B,mBAAoB,CAAC1E,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,EACtD,CACH,CAIQ,mBAAmBhT,EAAkB6N,EAA2B,CACtE,KAAK,QAAQ,mBAAmB7N,EAAO6N,EAAQ,CAAC9T,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,CAAC,CACnF,CAEQ,qBAAqBhT,EAAkB6N,EAAqBM,EAAsB,CACxF,KAAK,QAAQ,qBAAqBnO,EAAO6N,EAAQM,CAAM,CACzD,CAEQ,WAAWhZ,EAAc,CAC/B,OAAOue,GAAcve,CAAC,CACxB,CAEQ,sBAAsB0K,EAA+B,CAC3D,MAAM8T,EAAU9T,EAAI,MAAM,OAASA,EAAI,MAAM,GACvC+T,EAAyB,CAC7B,QAAS/T,EAAI,QACb,MAAOA,EAAI,MACX,KAAOA,EAAI,aAAe,SAAY8T,EAAU,CAACA,EACjD,KAAM9T,EAAI,YAGZ,OAAO,KAAK,IAAI,QAAQ,YACtB,KAAK,IAAI,OAAO,YAAY+T,CAAQ,EACpClB,GAAekB,CAAQ,CAC3B,CAEQ,cAAc/T,EAAgB1M,EAAU0a,EAAgE,CAC9G,MAAM3Y,EAAe/B,EAAI,QACnB8S,EAAqBpC,GAAkB,CAC3C,aAAchE,EACd,cAAeA,EAEf,QAAA3K,EACA,YAAakc,GAAYvR,EAAI,QAASA,EAAI,KAAK,CAEjD,CAAC,EAEKuD,EAAMlO,EAAQ,QAIpB,IAH+BkO,EAAI,KAAO,UAAYvD,EAAI,WAAcA,EAAI,aAAe,SAAW,KAAO,YAGxF,KAAM,CACzB,MAAM4Q,EAA+BxK,EAAM,eAAiB,UAAY,UAAY,SAC9E4N,EAAM,KAAK,wBAAwBpD,IAAa,SAAWxK,EAAM,SAAWA,EAAM,SAAUwK,EAAUxK,EAAM,UAAW,CAAE,GAAI7C,EAAI,GAAI,MAAOA,EAAI,MAAO,EACvJ0Q,EAAYD,EAAI,MACtB,OAAAhG,EAAO,KAAK,GAAGgG,EAAI,MAAM,EACzBhG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,KAAK,WAAWiG,CAAS,EAAG,EACzD,CAAE,MAAOA,EAAW,OAAAjG,CAAA,CAC7B,CAGA,MAAMxW,EAAU,CACd,KAAM,SACN,QAAS,CAAE,KAAMwI,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,EAAI,OAAQ,QAASA,EAAI,QAAS,MAAOA,EAAI,MAAO,WAAYA,EAAI,YACvH,QAAS,CAAE,KAAMA,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,EAAI,QACvD,SAAUoG,EAAM,SAChB,SAAUA,EAAM,SAChB,QAAS,CAAE,GAAI7C,EAAI,GAAI,MAAOA,EAAI,MAAO,UAAWA,EAAI,WACxD,KAAM,CACJ,mBAAoB6C,EAAM,UAAU,mBACpC,0BAA2BA,EAAM,UAAU,0BAC3C,UAAWA,EAAM,UAAU,UAC3B,qBAAsBA,EAAM,UAAU,qBACxC,EAEF,OAAA4H,EAAO,KAAK,CAAE,KAAM,kBAAmB,OAAQ,uBAAwB,KAAMxW,EAAS,EACtFwW,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,KAAK,WAAWhO,CAAG,EAAG,EACnD,CAAE,MAAOA,EAAK,OAAAgO,CAAA,CACvB,CAEQ,kBAAkBhO,EAAgB8F,EAAiBzJ,EAAkB/I,EAAU0a,EAAqBiF,EAA2B,CACrI,GAAI,CAGF,GAAI,EADoBA,GAAcjT,EAAI,OAAS,GAC7B,CACpB,MAAMkU,EAAU,KAAK,mBAAmBlU,EAAK8F,EAAMxS,EAAI,QAAgC,CAAE,GAAI,EAAQA,EAAI,UAAY,OAAQ,EAAQA,EAAI,MAAM,EAAK,OAAO+I,EAAM,SAAS,EAAG,OAAOA,EAAM,YAAY,CAAC,EACvM,KAAK,QAAQ,uBACb,KAAK,QAAQ,0BAA0B,OAAOA,EAAM,WAAa,EAAE,CAAC,EACpE,MAAM8X,EAAO,KAAK,mBAAmBnU,EAAK8F,EAAMzJ,EAAO/I,EAAI,OAAc,EACzE0a,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASmG,EAAK,GAAG,GAAI,EACrDA,EAAK,SAAWA,EAAK,QAAQ,QAAQnG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQmG,EAAK,OAAO,GAAI,EACrGnG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAY,CAClD,CACF,MAAgB,CAEhB,CACF,CAEQ,gBAAgBhO,EAAgB3D,EAAwB,CAC9D,GAAI,CACF,MAAM0G,EAAc/C,EAAI,aAAe,SAAY,IAAMA,EAAI,OAAUA,EAAI,OACrE7C,EAAM6C,EAAI,OACViM,EAAajM,EAAI,aAAe,SAAY7C,GAAO,GAAKA,GAAO,GAC/D+O,EAAU/O,GAAO,IAAMA,GAAO,GAC9BgP,EAAYnM,EAAI,aAAe,SAAY7C,GAAO,GAAKA,GAAO,GACpE,IAAIsB,EAAsB,KACtBsE,GAAe,IAAM/C,EAAI,MAAQ+C,EAAatE,EAAO,WAChDsE,GAAe,GAAItE,EAAO,UAC1ByN,EAASzN,EAAO,UAChBwN,EAAWxN,EAAO,YAClB0N,IAAU1N,EAAO,YAC1B,MAAM4N,EAAWtJ,EAAc,IAAO,GACtC,KAAK,QAAQ,oBAAoB/C,EAAI,WAAY,CAAE,KAAAvB,EAAM,UAAW4N,EAAS,QAAS,OAAOhQ,EAAM,cAAgB,EAAE,EAAG,CAC1H,MAAgB,CAEhB,CACF,CAEQ,gBAAgB2D,EAAgB8F,EAAiBkI,EAAgE,CACvHlI,EAAK,YAAc,GACnB,MAAM5J,EAAiB8D,EAAI,WAC3BgO,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,aAAc,EAClDA,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,GAAGwD,EAAmBtV,EAAM,CAAC,EAAG,KAAM,MAAQ,EACtF8R,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,CAAE,KAAM,MAAQ,EACpD,MAAMoG,EAAM,KAAK,qBAAqBtO,EAAM5J,CAAI,EAChD,OAAA4J,EAAOsO,EAAI,MACXpG,EAAO,KAAK,GAAGoG,EAAI,MAAM,EACzBpG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,2BAA2BlI,EAAK,MAAM,MAAM,WAAWA,EAAK,MAAM,EAAE,OAAOA,EAAK,OAAO,IAAImM,GAAYnM,EAAK,KAAK,CAAC,GAAI,EAC1JkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAY,EAChD,KAAK,qBAAqBlI,EAAMkI,EAAQ,WAAW,EAC5C,CAAE,MAAOlI,EAAM,OAAAkI,CAAA,CACxB,CAEQ,aAAahO,EAAgB8F,EAAiBkI,EAAgE,CACpH,MAAMmD,EAAsBnR,EAAI,WAC1BqU,EAAwBlD,IAAc,SAAW,KAAO,SAC9DnD,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,gBAAiB,EACrDA,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,GAAGwD,EAAmB6C,EAAa,CAAC,EAAG,KAAM,UAAY,EACjGrG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,2BAA6BqG,IAAc,SAAUvO,EAAK,MAAM,OAAO,EAAGA,EAAK,MAAM,MAAQ,WAAauO,IAAc,KAAMvO,EAAK,MAAM,GAAG,EAAGA,EAAK,MAAM,EAAI,oBAAqB,EACvN,MAAMwO,EAAY,KAAK,qBAAqBxO,EAAMqL,CAAS,EAC3D,OAAArL,EAAOwO,EAAU,MACjBtG,EAAO,KAAK,GAAGsG,EAAU,MAAM,EAC/BtG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAY,EAChD,KAAK,qBAAqBlI,EAAMkI,EAAQ,QAAQ,EACzC,CAAE,MAAOlI,EAAM,OAAAkI,CAAA,CACxB,CAEQ,kBAAkBhO,EAAgB3K,EAAuC,CAC/E,OAAI2K,EAAI,OAAS,GAAK,CAAC3K,EAAgB,GAGrCA,EAAQ,WAAa,eACnBA,EAAQ,WAAa,QAAUA,EAAQ,WAAa,UAAYA,EAAQ,OAAS,GAAK2K,EAAI,IAEhG,CAEQ,sBAAsBA,EAAgB8F,EAAiBkI,EAAgE,CAC7H,MAAMuG,EAAOtG,EAAmBjO,EAAI,WAAYA,EAAI,MAAM,EAC1D,OAAAgO,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASgE,EAAchS,EAAI,IAAI,CAAC,MAAMA,EAAI,IAAI,qCAAqCuU,CAAI,GAAI,EAC/HzO,EAAK,WAAa9F,EAAI,aAAe,SAAW,KAAO,SACvD8F,EAAK,KAAO,EAAGA,EAAK,KAAO,GAC3B,KAAK,qBAAqBA,EAAMkI,EAAQ,OAAO,EAC/CA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAY,EACzC,CAAE,MAAOlI,EAAM,OAAAkI,CAAA,CACxB,CAEQ,wBAAwBlI,EAAiBkI,EAAgE,CAC/G,MAAMiD,EAAenL,EAAK,QAC1BkI,EAAO,KAAK,CAAE,KAAM,eAAgB,QAAS,CAAE,QAASiD,CAAA,EAAgB,EAGxE,GAAI,CACF,MAAMuD,EAAK,KAAK,QAAQ,qBAClBC,EAAOD,EAAG,KACVE,EAASF,EAAG,OAEZ3F,EAAO,GADH,WAAWoC,CAAY,WAAWnL,EAAK,MAAM,MAAM,WAAWA,EAAK,MAAM,EAAE,GACpE,iBAAiB2O,CAAI,UAAUC,CAAM,WAChDrG,EAAOoG,EAAOC,EAAU,iEAAoEA,EAASD,EAAO,oDAAsD,2CACxKzG,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,SAASa,CAAI,GAAI,EACrDb,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,QAAQK,CAAG,GAAI,CACrD,MAAgB,CAEhB,CAGA,MAAMmG,EAAK,KAAK,QAAQ,qBAIxB,GAHAA,EAAG,QAAUvD,EAAe,EAC5BuD,EAAG,KAAO,EAAGA,EAAG,OAAS,EAAGA,EAAG,WAAa,EAAGA,EAAG,WAAa,EAAGA,EAAG,WAAa,EAAGA,EAAG,UAAY,EAEhGvD,IAAiB,EAAG,CAEtBjD,EAAO,KAAK,CAAE,KAAM,WAAY,EAChCA,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,sBAAuB,EAC3DlI,EAAK,QAAU,EACfA,EAAK,MAAQ,IAEb,MAAM6O,EAD6B7O,EAAa,eAAiB,SAE3DuJ,EAAK,KAAK,eAAevJ,EAAM,SAAU6O,CAAQ,EACvD7O,EAAOuJ,EAAG,MACVrB,EAAO,KAAK,GAAGqB,EAAG,MAAM,CAC1B,MAAW4B,IAAiB,GAC1BnL,EAAK,SAAW,GAChBkI,EAAO,KAAK,CAAE,KAAM,QAAS,QAAS,CAAE,MAAOlI,EAAK,OAAS,IAG7DkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,0BAA0BiD,EAAe,CAAC,IAAK,EACnFnL,EAAK,QAAUmL,EAAe,EAC9BnL,EAAK,MAAQ,KAGf,OAAAkI,EAAO,KAAK,CAAE,KAAM,MAAO,QAAS,WAAY,EACzC,CAAE,MAAOlI,EAAM,OAAAkI,CAAA,CACxB,CAEQ,mBAAmBhO,EAAgB8F,EAAiBzJ,EAAkBhH,EAAgE,CAC5I,OAAOuf,GAAsB5U,EAAK8F,EAAMzJ,EAAOhH,EAAS,CACtD,IAAK,KAAK,IAAI,IACd,YAAa,KAAK,QAAQ,iBAC1B,YAAcgG,GAAM4W,GAAY5W,CAAC,EACjC,cAAgBA,GAAM2W,EAAc3W,CAAC,EACrC,mBAAoB,CAACnB,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,EACrD,iCAAkC,CAACjZ,EAAGiZ,IAAMf,GAAiClY,EAAGiZ,CAAC,EACjF,aAAc,KAAK,QAAQ,oBAAmB,CAC/C,CACH,CAEQ,mBAAmBnT,EAAgB8F,EAAiBzQ,EAA8BwW,EAA2CC,EAA0BvT,EAA2D,CACxN,OAAOsc,GAAsB7U,EAAK8F,EAAMzQ,EAASwW,EAAOC,EAAkBvT,EAAc,CACtF,cAAgB8C,GAAM2W,EAAc3W,CAAC,EACrC,mBAAoB,CAACnB,EAAGiZ,IAAMlF,EAAmB/T,EAAGiZ,CAAC,EACrD,IAAK,IAAM,KAAK,IAAI,UAAY,IAAM,CAAE,MAAM,IAAI,MAAM,kBAAkB,CAAG,KAC7E,oBAAsBjX,GAAS,KAAK,QAAQ,oBAAoBA,CAAI,EACpE,oBAAqB,CAACA,EAAMoN,IAAU,KAAK,QAAQ,oBAAoBpN,EAAMoN,CAAK,EACnF,CACH,CAEQ,sBAAsBA,EAAmD,CAC/E,OAAOwL,GAAyBxL,CAAK,CACvC,CACF,CCxaO,MAAMyL,EAAS,CAGpB,YAAoB7gB,EAAkB,CAAlB,SAAAA,EAClB,KAAK,KAAO,IAAI8e,GAAa9e,CAAG,CAClC,CAJQ,KAYR,YAAYiM,EAAkB9D,EAA6D,CACzF,OAAO,KAAK,KAAK,YAAY8D,EAAO9D,CAAK,CAC3C,CAUA,wBAAwBmF,EAAmBoP,EAA8BC,EAAWC,EAA8F,CAChL,OAAO,KAAK,KAAK,wBAAwBtP,EAAQoP,EAAUC,EAAMC,CAAI,CACvE,CAQA,qBAAqB3Q,EAAkBjE,EAA2D,CAChG,OAAO,KAAK,KAAK,qBAAqBiE,EAAOjE,CAAI,CACnD,CASA,iBAAiBiE,EAAkBrL,EAAsBoH,EAA2D,CAClH,OAAO,KAAK,KAAK,iBAAiBiE,EAAOrL,EAAcoH,CAAI,CAC7D,CAQA,qBAAqBiE,EAAkBgR,EAAgE,CACrG,OAAO,KAAK,KAAK,qBAAqBhR,EAAOgR,CAAS,CACxD,CASA,eAAehR,EAAkB+G,EAAyBgI,EAA8D,CACtH,OAAO,KAAK,KAAK,eAAe/O,EAAO+G,EAAMgI,CAAO,CACtD,CACF,CCrEA,IAAI8F,GAAe,GACnB,MAAMC,EAAM,IAAI9d,GAChB,IAAI+d,EAAsB,CAAE,cAAe,KAAM,aAAc,KAAM,YAAa,KAAM,SAAU,MAC9FC,GAA8B,KAC9BC,GAAa,GAEjB,eAAeC,IAAoC,CAEjD,GADA,QAAQ,IAAI,2CAA4CL,EAAY,EAChE,CAAAA,GAEJ,SAAQ,IAAI,6BAA6B,EAEzCM,GAAA,EAEA,GAAI,CAEF,KAAM,CAAE,cAAAC,CAAA,EAAkB,MAAAxV,EAAA,8BAAAwV,GAAA,KAAM,QAAO,6BAAoB,uBAAAA,CAAA,OACrD,CACJ,kBAAAC,EACA,kBAAAC,EACA,oBAAAC,EACA,mBAAAC,EACA,uBAAAC,EACA,sBAAAC,EACA,qBAAAC,CAAA,EACE,MAAA/V,EAAA,iLAAM,QAAO,kCAAmC,0KAGpD,MAAMgW,GAAeR,EAAeC,EAAmBC,EAAmBC,EAAqBC,EAAoBC,EAAwBE,CAAoB,EAG/J,MAAME,GAAsBT,EAAeI,EAAoBC,EAAwBC,CAAqB,EAG5G,MAAMI,GAAA,EAGN,KAAM,CAAE,wBAAAC,CAAA,EAA4B,MAAAnW,EAAA,wCAAAmW,GAAA,KAAM,QAAO,+BAAsB,iCAAAA,CAAA,OACvEA,EAAwBjB,CAAG,EAE3BD,GAAe,GACfmB,GAAA,EAGClB,EAAY,KAAK,WAAY,EAAE,CAElC,OAAS9M,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,EAExDpI,EAAA,qCAAA+V,CAAA,eAAO,kCAAmC,8BAAAA,CAAA,OAAE,KAAK,CAAC,CAAE,qBAAAA,KAA2B,CAC7EM,GAAkBN,CAAoB,CACxC,CAAC,EAAE,MAAM,IAAM,CAEb,GAAI,OAAO,SAAa,IAAa,CACnC,MAAMO,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,YAAc,2CACvBA,EAAS,MAAM,QAAU,4HACzB,SAAS,KAAK,YAAYA,CAAQ,CACpC,CACF,CAAC,CACH,EACF,CAKA,SAASf,IAA2B,CAClC,GAAI,OAAO,SAAa,IAAa,OAErC,MAAMgB,EAAiB,SAAS,cAAc,KAAK,EACnDA,EAAe,GAAK,kBACpBA,EAAe,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgB/B,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUxB,MAAMC,EAAO,SAAS,cAAc,KAAK,EAOzC,GANAA,EAAK,YAAc,+BAEnBF,EAAe,YAAYC,CAAO,EAClCD,EAAe,YAAYE,CAAI,EAG3B,CAAC,SAAS,eAAe,wBAAwB,EAAG,CACtD,MAAMC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,GAAK,yBACXA,EAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpB,SAAS,KAAK,YAAYA,CAAK,CACjC,CAEA,SAAS,KAAK,YAAYH,CAAc,CAC1C,CAKA,SAASH,IAA2B,CAClC,GAAI,OAAO,SAAa,IAAa,OAErC,MAAMG,EAAiB,SAAS,eAAe,iBAAiB,EAC5DA,GACFA,EAAe,QAEnB,CAKA,SAASF,GAAkBN,EAA8D,CACvF,GAAI,OAAO,SAAa,IAAa,OAErCK,GAAA,EACA,MAAMO,EAAeZ,EAAqB,0CAA0C,EACpF,SAAS,KAAK,YAAYY,CAAY,CACxC,CAKA,eAAeX,GACbR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACe,CAEf,MAAMa,EAAiB,CACrB,CAAE,OAAQ,WAAY,SAAU,cAAe,KAAM,MAAO,SAAUnB,CAAA,EACtE,CAAE,OAAQ,WAAY,SAAU,cAAe,KAAM,UAAW,SAAUC,CAAA,EAC1E,CAAE,OAAQ,aAAc,SAAU,gBAAiB,KAAM,YAAa,SAAUC,CAAA,EAChF,CAAE,OAAQ,gBAAiB,SAAU,mBAAoB,KAAM,eAAgB,SAAUE,CAAA,EACzF,CAAE,OAAQ,YAAa,SAAU,eAAgB,KAAM,aAAc,SAAUD,CAAA,CAAmB,EAGpG,QAAQ,IAAI,4CAA4C,EACxD,UAAWiB,KAAaD,EAAgB,CACtC,QAAQ,IAAI,WAAWC,EAAU,IAAI,mBAAmBA,EAAU,MAAM,KAAK,EAC7E,GAAI,CACF,MAAMC,EAAS,MAAM,OAAOD,EAAU,QACtC,QAAQ,IAAI,GAAGA,EAAU,IAAI,6BAA6B,EAI1D,MAAME,EAAmBD,EAAOD,EAAU,QAAQ,EAE5CG,EAAgB5D,GAAgB,CACpC,GAAI,CACF,eAAQ,IAAI,WAAWyD,EAAU,IAAI,uBAAuB,EACrDE,EAAiB,KAAKD,EAAQ1D,CAAC,CACxC,OAAShL,EAAO,CACd,QAAQ,MAAM,GAAGyO,EAAU,IAAI,kCAAmCzO,CAAK,EACvEgL,EAAE,KAAK,MAAO,CAAE,QAAS,GAAGyD,EAAU,IAAI,kCAAmC,EAC7E,MACF,CACF,EAEA,QAAQ,IAAI,eAAeA,EAAU,IAAI,KAAK,EAC9CG,EAAa9B,CAAG,EAChB,QAAQ,IAAI,GAAG2B,EAAU,IAAI,0BAA0B,CACzD,OAASzO,EAAO,CAId,GAHA,QAAQ,MAAM,GAAGyO,EAAU,IAAI,0BAA2BzO,CAAK,EAG3D,OAAO,SAAa,IAAa,CACnC,MAAMkO,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYzBA,EAAS,YAAc,GAAGO,EAAU,IAAI,kCACxC,SAAS,KAAK,YAAYP,CAAQ,CACpC,CACF,CACF,CACF,CAKA,eAAeL,GACbT,EACAI,EACAC,EACAC,EACe,CAEf,MAAMmB,EAKD,GAKCC,EAAgBC,GAAyB,CACzC,wBAAyB,OAC3B,oBAAoBA,EAAU,CAAE,QAAS,IAAM,EAE/C,WAAWA,EAAU,GAAG,CAE5B,EAEA,UAAWN,KAAaI,EACtBC,EAAa,SAAY,CACvB,GAAI,CACF,MAAMJ,EAAS,MAAM,OAAOD,EAAU,QAChCO,EAAW,IAAI5B,EAAc,CACjC,cAAeqB,EAAU,KACzB,kBAAmB,CAACzO,EAAciP,IAAsBR,EAAU,WAClE,QAAS,CAACzO,EAAc2I,IAAc,CACpC,QAAQ,MAAM,GAAG8F,EAAU,IAAI,oBAAqBzO,CAAK,EACzD8M,EAAI,KAAK,MAAO,CAAE,QAAS,GAAG2B,EAAU,IAAI,6CAA8C,CAC5F,EACD,EAEKE,EAAmBD,EAAOD,EAAU,QAAQ,GAE5BzD,GAAgB,CACpC,GAAI,CACF,OAAO2D,EAAiB,KAAKD,EAAQ1D,CAAC,CACxC,OAAShL,EAAO,CACdgP,EAAS,YAAYhP,CAAc,EACnC,MACF,CACF,GAEa8M,CAAG,CAClB,OAAS9M,EAAO,CACd,QAAQ,KAAK,GAAGyO,EAAU,IAAI,0BAA2BzO,CAAK,EAC9D,MAAMkP,EAAUT,EAAU,WAC1B,GAAI,OAAO,SAAa,IAAa,CACnC,MAAMU,EAAY,SAAS,eAAeV,EAAU,KAAK,aAAa,GAAK,SAAS,cAAc,KAAK,EACvGU,EAAU,GAAKV,EAAU,KAAK,cAC9BU,EAAU,YAAYD,CAAO,EAC7B,SAAS,KAAK,YAAYC,CAAS,CACrC,CACF,CACF,CAAC,CAEL,CAKA,eAAerB,IAAoC,CAEtB,CACzB,eACA,sBACA,iBACA,WACA,WACA,eAEA,mBACA,yBACA,yBACA,0BACA,wBAEA,mCACA,0BACA,6BACA,2BACA,6BAIiB,QAAQ,MAAOsB,GAAe,CAC/C,GAAI,CACF,MAAMV,EAAS,MAAM,OAAOU,GAEtBC,EAAY,WADJD,EAAW,MAAM,GAAG,EAAE,OAAoB,EACvB,GACjC,IAAIE,EAAmBZ,EAAeW,CAAS,EAC/C,GAAI,OAAOC,GAAe,WAAY,CACpC,MAAM9W,EAAuB,OAAO,KAAKkW,CAAM,EAAE,OAAQxc,GAAMA,EAAE,WAAW,UAAU,GAAK,OAAQwc,EAAexc,CAAC,GAAM,UAAU,EACnI,IAAIqd,EAAsB,KACtB/W,EAAW,SAAW,IACxB+W,EAAO/W,EAAW,CAAC,GAEjB+W,IACFD,EAAcZ,EAAea,CAAI,EAErC,CACI,OAAOD,GAAe,YACxBA,EAAWxC,CAAG,CAElB,OAAS9M,EAAO,CACd,QAAQ,KAAK,GAAGoP,CAAU,6BAA8BpP,CAAK,CAC/D,CACF,CAAC,CACH,CAKA,eAAewP,IAAkD,CAC/D,GAAI,CACF,KAAM,CAAE,uBAAAC,CAAA,EAA2B,MAAA7X,EAAA,uCAAA6X,GAAA,KAAM,QAAO,sCAAyC,gCAAAA,CAAA,OACzFzC,GAAyB,IAAIyC,EAAuB3C,EAAK,CACvD,YAAa,GACb,eAAgB,GAChB,qBAAsB,GACtB,yBAA0B,GAC1B,4BAA6B,GAC9B,EAGAA,EAAY,GAAG,oBAAqB,CAAC,CAAE,SAAA4C,KAAoB,CAC1D,QAAQ,IAAI,6BAA8BA,CAAQ,EAG9CA,EAAS,OACX5C,EAAI,KAAK,MAAO,CAAE,QAAS,4BAA6B,EAEtD4C,EAAS,UACX5C,EAAI,KAAK,MAAO,CAAE,QAAS,yBAA0B,EAEnD4C,EAAS,eACX5C,EAAI,KAAK,MAAO,CAAE,QAAS,4BAA6B,CAE5D,CAAC,EAGAA,EAAY,GAAG,uBAAwB,CAAC,CAAE,SAAA6C,KAAoB,CAC7D,QAAQ,IAAI,gBAAgB,KAAK,MAAMA,CAAQ,CAAC,IAAI,EACpD7C,EAAI,KAAK,MAAO,CAAE,QAAS,gBAAgB,KAAK,MAAM6C,CAAQ,CAAC,KAAM,CACvE,CAAC,EAEA7C,EAAY,GAAG,kBAAmB,CAAC,CAAE,IAAA8C,KAAe,CAC/CA,EAAM,KACR,QAAQ,KAAK,4BAA4BA,CAAG,KAAK,EACjD9C,EAAI,KAAK,MAAO,CAAE,QAAS,gBAAgB8C,CAAG,MAAO,EAEzD,CAAC,CAEH,OAAS5P,EAAO,CACd,QAAQ,KAAK,gDAAiDA,CAAK,CAErE,CACF,CAEA,eAAe6P,IAA+B,CAC5C,GAAI,CACF,MAAMC,EAAU,MAAAlY,EAAA,IAAM,OAAO,sBAAuB,kCAC9C,CAACmY,EAAIC,EAAIjiB,EAAIkiB,CAAE,EAAI,MAAM,QAAQ,IAAI,CACzCH,EAAQ,qBACRA,EAAQ,oBACRA,EAAQ,mBACRA,EAAQ,eAAc,CACvB,EACD/C,EAAS,CACP,cAAegD,EAAG,GAAKA,EAAG,KAAO,KACjC,aAAcC,EAAG,GAAKA,EAAG,KAAO,KAChC,YAAajiB,EAAG,GAAKA,EAAG,KAAO,KAC/B,SAAUkiB,EAAG,GAAKA,EAAG,KAAO,MAE9B,MAAMlE,EAAU,yBAAyBgE,EAAG,GAAK,IAAM,MAAMA,EAAG,MAAM,IAAI,GAAG,mBAAmBC,EAAG,GAAK,IAAM,MAAMA,EAAG,MAAM,IAAI,GAAG,iBAAiBjiB,EAAG,GAAK,IAAM,MAAMA,EAAG,MAAM,IAAI,GAAG,eAAekiB,EAAG,GAAK,IAAM,MAAMA,EAAG,MAAM,IAAI,GAAG,GAC5OnD,EAAI,KAAK,MAAO,CAAE,QAASf,EAAS,CACtC,MAAQ,CACNgB,EAAS,CAAE,cAAe,KAAM,aAAc,KAAM,YAAa,KAAM,SAAU,KACnF,CACI,OAAO,OAAW,KAAe,OAAO,KAC1C,OAAO,GAAG,OAASA,EAEvB,CAEA,SAASmD,GAAS5J,EAAqB,CACjC,OAAO,SAAa,MACvB,SAAS,KAAa,QAAQ,MAAQA,EACzC,CAGAwG,EAAI,GAAG,kBAAmB,CAAC,CAAE,MAAAxG,KAAiB,CAC5C,GAAI,CAAE4J,GAAS5J,CAAK,CAAG,OAChBtG,EAAO,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,CAC/C,CACF,CAAC,EAGD,GAAI,CACD8M,EAAY,IAAOA,EAAY,GAAG,mBAAoB,IAAM,CAAEG,GAAa,EAAM,CAAC,CACrF,OAASjN,EAAO,CACd,QAAQ,KAAK,4CAA6CA,CAAK,CACjE,CAEA,SAASmQ,IAAuB,CAC9B,GAAI,CAAE,GAAI,OAAO,aAAiB,WAAoB,aAAa,QAAQ,aAAa,IAAM,GAAK,MACrF,CAAkB,CAChC,GAAI,CAAE,MAAO,CAAC,CAAE,WAAmB,IAAI,WAAW,OAAS,MAC7C,CAAkB,CAChC,MAAO,EACT,CAEA,SAASrG,GAAYsG,EAAyB,CAC5C,MAAMjjB,EAAI,KAAK,IAAI,EAAG,KAAK,MAAMijB,CAAO,CAAC,EACnCC,EAAQ,KAAK,MAAMljB,EAAI,EAAE,EACzBmjB,GAASnjB,EAAI,IAAI,WAAW,SAAS,EAAG,GAAG,EACjD,MAAO,GAAGkjB,CAAK,IAAIC,CAAK,EAC1B,CAEA,SAASC,GAAgBvY,EAA+CwY,EAAkBC,EAA0B,CAClH,MAAMC,EAAY,CAAC,MAAO,MAAO,MAAO,KAAK,EACvCC,EAAU,KAAK,IAAI3Y,EAAM,KAAM,CAAC,EAAI,EACpC4Y,EAAUF,EAAUC,CAAO,GAAK,GAAG3Y,EAAM,IAAI,KAC7C6Y,GAAa,IAAM,CACvB,MAAMC,EAAe9Y,EAAM,aAAe,SAAYA,EAAM,OAASA,EAAM,KAASA,EAAM,OAASA,EAAM,KAEzG,OADcA,EAAM,aAAe,SAAY8Y,GAAgB,IAAQA,GAAgB,GACxE,OAAS,OAAO9Y,EAAM,IAAI,CAC3C,KACM+Y,EAAW/Y,EAAM,QAAU,GAAKA,EAAM,OAAS,IAAMA,EAAM,OAC3DgZ,EAAYhZ,EAAM,aAAe,SAAW,OAAS,OAC3D,MAAO,IAAIA,EAAM,OAAO,MAAM8R,GAAY9R,EAAM,KAAK,CAAC,MAAM4Y,CAAO,MAAMC,CAAS,cAAc,KAAK,MAAME,CAAQ,CAAC,MAAMC,CAAS,mBAAmBR,CAAQ,MAAMC,CAAQ,EAC9K,CAEA,eAAevL,GAAMzL,EAA+F,CAClH,GAAI,SAAO,OAAW,KAGtB,OAAM+V,GAAA,EAEN,MAAMtC,GAAA,EACFzT,GAAWA,EAAQ,OAAOyW,GAASzW,EAAQ,KAAK,EACpD,MAAMoW,GAAA,EAEN/C,EAAI,KAAK,YAAa,CACpB,QAAS,EACT,MAAO,IACP,KAAM,EACN,KAAM,GACN,OAAQ,GACR,WAAY,SACZ,MAAO,CAAE,OAAQ,EAAG,GAAI,EAAE,CACpB,EAGR,GAAI,CACFA,EAAI,GAAG,aAAc,MAAO,CAAE,SAAA5c,EAAU,aAAA+gB,KAAwB,CAC9D,GAAI,CACF,GAAI,CAAClE,EAAO,cAAe,CACzBD,EAAI,KAAK,MAAO,CAAE,QAAS,8BAA+B,EAC1D,MACF,CACA,MAAMnY,EAAO,KAAK,MAAQ,IACpBpK,EAAMmK,EAAUC,CAAI,EACpBuc,EAAO,IAAItE,GAAS,CAAE,OAAQG,EAAO,cAAe,IAAAxiB,EAAK,YAAawiB,EAAO,aAAe,CAChG,UAAW,GACX,WAAY,GACZ,KAAM,GACN,YAAa,GACb,WAAY,GACZ,aAAc,GACd,QAAS,GACT,OAAQ,GACR,QAAS,GACT,UAAW,GACX,KAAM,GACN,WAAY,GACX,OAAQ,CACT,YAAa,CAAC,CAAE,QAAA7X,EAAS,MAAAC,EAAO,KAAAI,EAAM,KAAAxB,KAAW,CAC/C,GAAI,CAAE,OAAO5B,GAAA,EAAc,YAAY,CACrC,QAAA+C,EACA,mBAAoBC,EACpB,KAAMD,GAAW,EAAI,EAAI,EACzB,WAAYK,EACZ,KAAM,EACN,kBAAmB,GACnB,aAAc,GACd,wBAAyBL,IAAY,GAAKA,IAAY,IAAMC,EAAQ,IACpE,eAAgB,MAChB,aAAcpB,IAAS,SAAW,OAAS,OAC3C,SAAU,GACV,4BAA6B,SAC9B,EAAE,KAAc,MAAQ,CAAE,MAAO,QAAU,CAC9C,GACC,EAGGod,GADaC,GAAyBA,IAAS,aAAeA,IAAS,gBAAkBA,IAAS,eAAkBA,EAAO,aACpGlhB,CAAQ,EAErC,IAAImhB,EAAmB,YACnBJ,IAAiB,YAAaI,EAAS,eAClCJ,IAAiB,iBAAkBI,EAAS,eAC5CJ,IAAiB,gBAAeI,EAAS,aAGlD,MAAMC,EAAkD,CACtD,KAAA3c,EACA,QAAS,EACT,MAAO,IACP,KAAM,EACN,KAAM,GACN,OAAQ,GACR,WAAY,KACZ,YAAa,GACb,SAAU,GACV,MAAO,CAAE,OAAQ,EAAG,GAAI,EAAE,EAItBuS,EAAKgK,EAAK,eAAeI,EAAS,SAAU,IAAI,EAChDC,EAAerK,EAAG,MAgBxB,GAdA4F,EAAI,KAAK,MAAO,CAAE,QAAS,2BAA2BqE,CAAU,OAAO,OAAOF,GAAgB,IAAI,CAAC,UAAUtc,CAAI,IAAK,EAGtHmY,EAAI,KAAK,YAAa,CACpB,QAASyE,EAAa,QACtB,MAAOA,EAAa,MACpB,KAAMA,EAAa,KACnB,KAAMA,EAAa,KACnB,OAAQA,EAAa,OACrB,WAAYA,EAAa,WACzB,MAAOA,EAAa,MACd,EAGJA,EAAa,aAAe,SAAU,CAExC,MAAMC,GADO9R,EAAcyR,CAAU,GAAK,IACf,IAAKrb,IAAO,CAAE,GAAIA,EAAE,GAAI,MAAOA,EAAE,MAAO,IAAKA,EAAE,IAAK,KAAMA,EAAE,MAAO,EAC9FgX,EAAI,KAAK,aAAc,CAAE,MAAO0E,EAAe,gBAAiB,GAAa,CAC/E,KAAO,CACL,MAAMC,EAAW9R,EAAa,IAAKhH,IAAO,CAAE,GAAKA,EAAU,GAAI,MAAQA,EAAU,MAAO,IAAK,wBAAyBA,EAAU,KAAK,OAAQ,KAAM,WAAY,EAC/JmU,EAAI,KAAK,aAAc,CAAE,MAAO2E,EAAU,gBAAiB,GAAc,CAC3E,CAGC,OAAe,WAAa,CAAE,KAAAP,EAAM,WAAAC,EAAY,OAAAE,EAAQ,MAAOE,EAAc,KAAA5c,CAAA,EAG9E,MAAM+c,EAAa,IAAI5d,GAGjB6d,EAAa9L,GAAwB,CACzC,UAAWoF,KAAMpF,EACf,GAAIoF,EAAG,OAAS,QAAW,KAAK,YAAaA,EAAG,OAAc,UACrDA,EAAG,OAAS,MAAO,CAG1B,GADYkF,GAAA,GACDlD,GACT,GAAI,CACF,MAAM2E,EAAW,OAAe,YAAc,GACxCC,EAAWD,EAAW,gBAAkB,GACxCnN,EAAWmN,EAAW,gBAAkB,GACxCvb,EAAKub,EAAG,MACd,GAAIvb,GAAMwb,GAAWpN,EAAS,CAC5B,MAAMqN,EAAOvB,GAAgBla,EAAIwb,EAASpN,CAAO,EACjDqI,EAAI,KAAK,MAAO,CAAE,QAAS,GAAGgF,CAAI,MAAM7G,EAAG,OAAO,GAAI,EACtD,QACF,CACF,OAASjL,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CACnD,CAEF8M,EAAI,KAAK,MAAO,CAAE,QAAS7B,EAAG,QAAS,CACzC,MACSA,EAAG,OAAS,MAAO6B,EAAI,KAAK,MAAO,CAAE,KAAM7B,EAAG,QAAQ,KAAM,QAASA,EAAG,QAAQ,KAAM,EACtFA,EAAG,OAAS,UAAa,KAAK,MAAO,CAAE,QAAS,gBAAgBA,EAAG,QAAQ,MAAM,MAAM,WAAWA,EAAG,QAAQ,MAAM,EAAE,GAAI,EACzHA,EAAG,OAAS,WAAY6B,EAAI,KAAK,MAAO,CAAE,QAAS,WAAY,EAC/D7B,EAAG,OAAS,eAAgB6B,EAAI,KAAK,MAAO,CAAE,QAAS,WAAW7B,EAAG,QAAQ,OAAO,GAAI,EACxFA,EAAG,OAAS,SAAS6B,EAAI,KAAK,MAAO,CAAE,QAAS,UAAU7B,EAAG,QAAQ,IAAI,GAAI,CAE1F,EAGA,GAAI,CAAE0G,EAAUzK,EAAG,MAAa,CAAG,OAC5BlH,EAAO,CAAE,QAAQ,MAAM,mCAAoCA,CAAK,CAAG,CAG1E,MAAMjJ,EAAO,CACX,OAAQgW,EAAO,cACf,eAAgB,KACDrN,EAAcyR,CAAU,GAAK,IAC9B,IAAKrb,IAAY,CAAE,GAAIA,EAAE,GAAI,MAAOA,EAAE,MAAO,KAAMA,EAAE,MAAc,EAEjF,kBAAmB,IAAM6J,EAAa,IAAIhH,GAAKA,EAAE,KAAK,EACtD,wBAA0BhC,GAAmBiJ,GAAgCjJ,CAAK,GAAK,MAEnFob,EAAW,IAAIta,GAAWV,EAAa,EAAI,EAC3Cib,EAAO,IAAIva,GAAWV,EAAa,EAAI,EAC7C,GAAI,CAAE,MAAMgb,EAAS,kBAAmB,MAAMC,EAAK,iBAAmB,OAC/DhS,EAAO,CAAE,QAAQ,KAAK,qCAAsCA,CAAK,CAAG,CAC3E+R,EAAS,MAAMpd,CAAI,EACnBqd,EAAK,MAAMrd,EAAO,CAAC,EAInBmY,EAAI,GAAG,YAAa,CAAC,CAAE,WAAAtZ,KAAiB,CACtC,GAAI,CACF,MAAMoe,EAAW,OAAe,YAAc,GAC9C,GAAIpe,IAAe,SAAU,CAE3B,MAAMye,GADUvS,EAAckS,EAAG,UAAsB,GAAK,IACtC,IAAK9b,IAAY,CAAE,GAAIA,EAAE,GAAI,MAAOA,EAAE,MAAO,IAAKA,EAAE,IAAK,KAAMA,EAAE,MAAO,EAC9FgX,EAAI,KAAK,aAAc,CAAE,MAAAmF,EAAO,gBAAiB,GAAa,CAChE,KAAO,CACL,MAAMR,EAAW9R,EAAa,IAAKhH,IAAO,CAAE,GAAKA,EAAU,GAAI,MAAQA,EAAU,MAAO,IAAK,wBAAyBA,EAAU,KAAK,OAAQ,KAAM,WAAY,EAC/JmU,EAAI,KAAK,aAAc,CAAE,MAAO2E,EAAU,gBAAiB,GAAc,CAC3E,CACF,OAASzR,EAAO,CAAE,QAAQ,MAAM,kBAAmBA,CAAK,CAAG,CAC7D,CAAC,EAGD8M,EAAI,GAAG,cAAe,MAAO,CAAE,OAAAzM,KAAiC,CAC9D,GAAI,CACF,MAAMuR,EAAW,OAAe,YAAc,GACxCM,EAAeN,EAAG,MACxB,GAAI,CAACM,GAAgBA,EAAa,SAAU,OAK5C,GAFA,MAAMlR,GAAc,aAEhBkR,EAAa,aAAe,SAAU,CAGxC,MAAMzZ,GADgBiH,EAAckS,EAAG,UAAsB,GAAK,IACvC,KAAM9b,GAAWA,EAAE,KAAOuK,CAAM,EAC3D,GAAI,CAAC5H,EAAM,OACX,MAAM0Z,EAAYH,EAAK,oBAAoBE,CAAY,EAGjDE,EAAS,CAAE,GAAGF,CAAA,EACpB,GAAI,CACF,MAAM9R,EAAcT,EAAa,QAAWhH,EAAU,QAAUwZ,EAAU,KAAK,EACzEE,EAAe,MAAMpR,GAAYxI,EAAK,GAAI2H,GAAa,IAAM+R,EAAU,MAAOD,EAAcxd,EAAUwd,EAAa,IAAI,CAAC,EAM9H,GAFApF,EAAI,KAAK,MAAO,CAAE,QAAS,kBAAkBuF,EAAa,MAAQ,EAAI,OAASA,EAAa,MAAQ,EAAI,OAAS,SAAS,OAAO,KAAK,IAAIA,EAAa,KAAK,CAAC,SAAU,EAEnKA,EAAa,UAAY,OAAOA,EAAa,UAAa,UAAW,CACvE,MAAMC,EAAID,EAAa,SACvBvF,EAAI,KAAK,MAAO,CAAE,QAAS,GAAGwF,EAAE,IAAI,GAAG,OAAOA,EAAE,cAAiB,SAAW,MAAMA,EAAE,YAAY,eAAiB,EAAE,GAAI,CACzH,CAGA,MAAMC,EAAW,CAAE,GAAGL,CAAA,EAClBG,EAAa,QAAU,IACzBE,EAAS,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKA,EAAS,QAAUA,EAAS,aAAe,SAAWF,EAAa,MAAQ,CAACA,EAAa,MAAM,CAAC,GAG9I,GAAI,CAAG,OAAe,WAAW,eAAiB5Z,EAAK,MAAQ,OAAe,WAAW,eAAiB0Z,EAAU,KAAO,MAC7G,CAA4C,CACzD,OAAe,WAAW,MAAQI,EAGnC,GAAI,CACF,MAAMve,EAA0B,QAAQ,KAAKyE,EAAK,KAAK,EAAI,OAAS,MACpEiZ,EAAW,OAAO,SAAU1d,EAAU,CACpC,KAAMoe,EAAO,KACb,KAAMA,EAAO,KACb,eAAgBA,EAAO,OACvB,aAAc,GACd,WAAYA,EAAO,WACpB,CACH,OAASpS,EAAO,CAAE,QAAQ,MAAM,yBAA0BA,CAAK,CAAG,CACpE,OAASA,EAAO,CACd,QAAQ,KAAK,2DAA4DA,CAAK,EAE9E,MAAM9L,EAAmB,CAAE,SAAU0d,EAAG,WAAY,UAAWnZ,EAAK,MAAO,aAAc0Z,EAAU,OAC7FhnB,EAAM+lB,EAAK,YAAYgB,EAAche,CAAK,EAChDyd,EAAUxmB,EAAI,MAAM,EACnB,OAAe,WAAW,MAAQA,EAAI,KACzC,CACF,KAAO,CAEL,MAAMqnB,EAAU7S,EAAa,KAAMhH,GAAOA,EAAU,KAAO0H,CAAM,EACjE,GAAI,CAACmS,EAAS,OACd,MAAMC,EAAYT,EAAK,oBAAoBE,EAAcN,EAAG,MAAkB,EAGxEQ,EAAS,CAAE,GAAGF,CAAA,EACpB,GAAI,CACF,MAAMG,EAAe,MAAMpR,GAAYwR,EAAU,UAAWD,EAAQ,GAAIN,EAAcxd,EAAUwd,EAAa,IAAI,CAAC,EAMlH,GAFApF,EAAI,KAAK,MAAO,CAAE,QAAS,qBAAqBuF,EAAa,MAAQ,EAAI,OAASA,EAAa,MAAQ,EAAI,OAAS,SAAS,OAAO,KAAK,IAAIA,EAAa,KAAK,CAAC,SAAU,EAEtKA,EAAa,UAAY,OAAOA,EAAa,UAAa,UAAW,CACvE,MAAMC,EAAID,EAAa,SACvBvF,EAAI,KAAK,MAAO,CAAE,QAAS,MAAMwF,EAAE,IAAI,GAAG,OAAOA,EAAE,cAAiB,SAAW,MAAMA,EAAE,YAAY,eAAiB,EAAE,GAAI,CAC5H,CAGA,MAAMC,EAAW,CAAE,GAAGL,CAAA,EAClBG,EAAa,QAAU,IACzBE,EAAS,OAAS,KAAK,IAAI,EAAG,KAAK,IAAI,IAAKA,EAAS,QAAUA,EAAS,aAAe,SAAWF,EAAa,MAAQ,CAACA,EAAa,MAAM,CAAC,GAG9I,GAAI,CAAG,OAAe,WAAW,eAAiBI,EAAU,UAAY,OAAe,WAAW,eAAkBD,EAAgB,KAAO,MAC7H,CAA4C,CACzD,OAAe,WAAW,MAAQD,CAGrC,OAASvS,EAAO,CACd,QAAQ,KAAK,2DAA4DA,CAAK,EAE9E,MAAM9L,EAAmB,CAAE,SAAU0d,EAAG,OAAQ,UAAWa,EAAU,UAAW,aAAeD,EAAgB,OACzGrnB,EAAM+lB,EAAK,YAAYgB,EAAche,CAAK,EAChDyd,EAAUxmB,EAAI,MAAM,EACnB,OAAe,WAAW,MAAQA,EAAI,KACzC,CACF,CACF,OAASunB,EAAK,CACZ,GAAI,CAAE5F,EAAI,KAAK,MAAO,CAAE,QAAS,0BAA0B,OAAQ4F,GAAa,SAAWA,CAAG,CAAC,GAAI,CAAG,MAChG,CAA+B,CACvC,CACF,CAAC,CACH,OAASA,EAAK,CACZ5F,EAAI,KAAK,MAAO,CAAE,QAAS,6BAA8B4F,GAAe,SAAWA,CAAG,GAAI,CAC5F,CACF,CAAC,CACH,OAAS1S,EAAO,CAAE,QAAQ,KAAK,wCAAyCA,CAAK,CAAG,EAClF,CAEA,SAAS2S,IAAgB,CAEzB,CAEA,MAAMC,GAAuB,CAC3B,IAAA9F,EACA,MAAO,CAAE,QAAA+F,GAAS,KAAAC,GAAM,aAAAC,GAAc,cAAAC,GAAe,YAAAC,GAAa,OAAAC,GAAQ,SAAAC,EAAA,EAC1E,GAAI,CAAE,YAAAC,GAAa,cAAAC,EAAA,EACnB,OAAAtG,EACA,MAAA7H,GACA,QAAAyN,GACA,SAAAzC,GACA,QAAS,CACP,mBAAqBzgB,GAQf,CACJ,MAAMtE,EAAM4S,GAAgB,CAC1B,MAAOtO,EAAO,MACd,OAAQA,EAAO,OACf,SAAUA,EAAO,SACjB,UAAWA,EAAO,UAClB,aAAcA,EAAO,aACrB,IAAKA,EAAO,IACb,EACKqc,EAAY,CAChB,GAAG3gB,EAAI,MACP,MAAQsE,EAAe,MAAM,MAC7B,MAAO,CAAE,GAAIA,EAAe,MAAM,OAClC,YAAcA,EAAe,MAAM,YACnC,SAAWA,EAAe,MAAM,UAE5BoW,EAA8C,GACpD,OAAK1a,EAAY,mBAAmB0a,EAAO,KAAK,CAAE,KAAM,oBAAqB,EACxE1a,EAAY,WAAW0a,EAAO,KAAK,CAAE,KAAM,YAAa,EACxD1a,EAAY,QAAQ0a,EAAO,KAAK,CAAE,KAAM,SAAU,EAChD,CAAE,UAAAiG,EAAW,QAAU3gB,EAAY,QAAS,OAAA0a,CAAA,CACrD,EAEA,WAAalR,GAAkB,CAC7B,MAAMpK,EAAMmK,EAAUC,GAAQ,KAAK,EACnC,GAAI,CAACoY,EAAO,cAAe,MAAM,IAAI,MAAM,2BAA2B,EACtE,MAAMmE,EAAO,IAAItE,GAAS,CAAE,OAAQG,EAAO,cAAe,IAAAxiB,EAAK,YAAawiB,EAAO,aAAe,CAChG,UAAW,GACX,WAAY,GACZ,KAAM,GACN,YAAa,GACb,WAAY,GACZ,aAAc,GACd,QAAS,GACT,OAAQ,GACR,QAAS,GACT,UAAW,GACX,KAAM,GACN,WAAY,GACX,OAAQ,CACT,YAAa,CAAC,CAAE,QAAA7X,EAAS,MAAAC,EAAO,KAAAI,EAAM,KAAAxB,KAAW,CAC/C,GAAI,CAAE,OAAO5B,GAAA,EAAc,YAAY,CACrC,QAAA+C,EACA,mBAAoBC,EACpB,KAAMD,GAAW,EAAI,EAAI,EACzB,WAAYK,EACZ,KAAM,EACN,kBAAmB,GACnB,aAAc,GACd,wBAAyBL,IAAY,GAAKA,IAAY,IAAMC,EAAQ,IACpE,eAAgB,MAChB,aAAcpB,IAAS,SAAW,OAAS,OAC3C,SAAU,GACV,4BAA6B,SAC9B,EAAE,KAAc,MAAQ,CAAE,MAAO,QAAU,CAC9C,GACC,EAEH,IAAIuf,EAA2I,KAC/I,MAAM3B,EAAa9L,GAAwB,CACzC,UAAWoF,KAAMpF,EACf,GAAIoF,EAAG,OAAS,QAAW,KAAK,YAAaA,EAAG,OAAc,UACrDA,EAAG,OAAS,MACnB6B,EAAI,KAAK,MAAO,CAAE,QAAS7B,EAAG,QAAS,EACnC,qBAAqB,KAAKA,EAAG,OAAO,IACrC6B,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,UAAW,EACvEA,EAAY,MAASA,EAAY,KAAK,YAAa,CAAE,KAAM,QAAS,WAGhE7B,EAAG,OAAS,MAAO,CAC1B,MAAMrG,EAAOqG,EAAG,QAAQ,KACpBrG,IAAS,MACVkI,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,aAAc,KAAM,GAAM,EACtFA,EAAY,MAASA,EAAY,KAAK,YAAa,EAAE,EACrDA,EAAY,MAASA,EAAY,KAAK,YAAa,CAAE,KAAM,QAAS,GAC5DlI,IAAS,gBACjBkI,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,gBAAiB,EAC7EA,EAAY,MAASA,EAAY,KAAK,YAAa,CAAE,SAAU,OAAQ,EACvEA,EAAY,MAASA,EAAY,KAAK,UAAW,EAAE,GAC3ClI,IAAS,aACjBkI,EAAY,MAASA,EAAY,KAAK,YAAa,EAAE,EAExDA,EAAI,KAAK,MAAO,CAAE,KAAMlI,EAAM,QAASqG,EAAG,QAAQ,KAAM,CAC1D,SACSA,EAAG,OAAS,mBAEnB,GADC6B,EAAY,KAAK,sBAAuB,CAAE,OAAQ7B,EAAG,OAAQ,KAAMA,EAAG,KAAM,EACzEA,EAAG,SAAW,uBAAwB,CACxC,MAAMtS,EAASsS,EAAG,MAAQ,GAC1BqI,EAAiB,CAAE,SAAU3a,EAAE,SAAU,SAAUA,EAAE,SAAU,KAAMA,EAAE,KACzE,OAEOsS,EAAG,OAAS,UAAa,KAAK,MAAO,CAAE,QAAS,gBAAgBA,EAAG,QAAQ,MAAM,MAAM,WAAWA,EAAG,QAAQ,MAAM,EAAE,GAAI,EACzHA,EAAG,OAAS,WAAY6B,EAAI,KAAK,MAAO,CAAE,QAAS,WAAY,EAC/D7B,EAAG,OAAS,eAAgB6B,EAAI,KAAK,MAAO,CAAE,QAAS,WAAW7B,EAAG,QAAQ,OAAO,GAAI,EACxFA,EAAG,OAAS,UACnB6B,EAAI,KAAK,MAAO,CAAE,QAAS,UAAU7B,EAAG,QAAQ,IAAI,GAAI,EACvD6B,EAAY,MAASA,EAAY,KAAK,eAAgB,EAAE,EACrD7B,EAAG,QAAQ,OAAS,MACrB6B,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,cAAe,EAC3EA,EAAY,MAASA,EAAY,KAAK,WAAY,CAAE,KAAM,IAAK,KAAM,WAAY,GACzE7B,EAAG,QAAQ,OAAS,UAC5B6B,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,UAAW,KAAM,GAAM,EACnFA,EAAY,MAASA,EAAY,KAAK,WAAY,CAAE,KAAM,IAAK,KAAM,SAAU,GACvE7B,EAAG,QAAQ,OAAS,OAC5B6B,EAAY,MAASA,EAAY,KAAK,aAAc,CAAE,KAAM,aAAc,KAAM,GAAM,EACtFA,EAAY,MAASA,EAAY,KAAK,YAAa,CAAE,KAAM,QAAS,GAI7E,EACC,OAAAA,EAAY,IAAOA,EAAY,GAAG,oBAAsB/a,GAAwC,CAC/F,GAAI,CAACuhB,EAAgB,OACrB,MAAMvnB,EAAMunB,EACNja,EAAStH,EAAE,WAAa,SAAWhG,EAAI,SAAWA,EAAI,SACtD8f,EAAOqF,EAAa,wBAAwB7X,EAAQtH,EAAE,SAAUhG,EAAI,IAAI,EAClE8f,EAAI,MAChB8F,EAAU9F,EAAI,MAAM,EACpByH,EAAiB,IACnB,CAAC,EACM,CACL,YAAa,CAACtb,EAA+C9D,IAAqB,CAChF,MAAM/I,EAAM+lB,EAAK,YAAYlZ,EAAO9D,CAAK,EACzC,OAAAyd,EAAUxmB,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,qBAAsB,CAAC6M,EAA+CyQ,EAA8B5P,IAA+H,CACjO,MAAMQ,EAASoP,IAAa,SAAW5P,EAAQ,SAAWA,EAAQ,SAC5DgT,EAAOqF,EAAa,wBAAwB7X,EAAQoP,EAAU5P,EAAQ,IAAI,EAChF,OAAA8Y,EAAU9F,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,qBAAsB,CAAC7T,EAA+CjE,IAAwB,CAC5F,MAAM5I,EAAM+lB,EAAK,qBAAqBlZ,EAAOjE,CAAI,EACjD,OAAA4d,EAAUxmB,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,iBAAkB,CAAC6M,EAA+CrL,EAAsBoH,IAAwB,CAC9G,MAAM5I,EAAM+lB,EAAK,iBAAiBlZ,EAAOrL,EAAcoH,CAAI,EAC3D,OAAA4d,EAAUxmB,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,qBAAsB,CAAC6M,EAA+CgR,IAA6B,CACjG,MAAM7d,EAAM+lB,EAAK,qBAAqBlZ,EAAOgR,CAAS,EACtD,OAAA2I,EAAUxmB,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,eAAgB,CAAC6M,EAA+C+G,EAAyBgI,IAA2B,CAClH,MAAM5b,EAAM+lB,EAAK,eAAelZ,EAAO+G,EAAMgI,CAAO,EACpD,OAAA4K,EAAUxmB,EAAI,MAAM,EACRA,EAAI,MACTA,CACT,EACA,MAAO+lB,CAAA,CAEX,EAEJ,EAMI,OAAO,OAAW,KAAe,CAAC,OAAO,KAC3C,OAAO,GAAK0B,IAQd,GAAI,OAAO,SAAa,IACtB,GAAI,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,GAAI,CAAOA,GAAQ,OAAS,OAAS5S,EAAO,CAAE,QAAQ,MAAM,uBAAwBA,CAAK,CAAG,CAC9F,EAAG,CAAE,KAAM,GAAM,MAEjB,IAAI,CAAO4S,GAAQ,OAAS,OAAS5S,EAAO,CAAE,QAAQ,MAAM,uBAAwBA,CAAK,CAAG","names":["LONG_GAIN_TABLE","rollD6","rng","resolveLongGain","roll","entry","m","resolveLongGainWithDice","diceRolls","result","extraRoll","NORMAL_KICKOFF_TABLE","ONSIDE_KICK_TABLE","parseKickoffYardLine","res","resolveKickoff","opts","turnover","penalty","reroll","res2","parsed","finalYard","PUNT_DISTANCE_TABLE","PUNT_RETURN_TABLE","resolvePunt","ctx","puntingIsPlayer","distRoll","puntDistance","ballOn","retRoll","ret","returnYards","fumbleTurnover","PLACE_KICK_TABLE","attemptPAT","attemptFieldGoal","attemptYards","ay","col","DEFAULT_TIME_KEEPING","parseResultString","str","parseResultStringWithDice","outcome","s","yards","onDefense","diceResult","numMatch","completeMatch","m2","calculateTimeOff","TIME_KEEPING","timeOffWithTwoMinute","inTwoMinute","wasFirstDown","tk","timeOff","isIncomplete","isOut","TelemetryConfig","config","newConfig","level","destination","mode","env","define_process_env_default","output","maxEvents","batchSize","flushInterval","globalTelemetryConfig","EventBus","event","handler","arr","i","payload","h","TelemetryCollector","eventBus","params","DEF_NUM_TO_LETTER","DEF_LABEL_TO_NUM","DECK_NAME_TO_CHART_KEY","LABEL_TO_CHART_KEY","telemetryCollector","initializeTelemetry","getTelemetryCollector","determineOutcomeFromCharts","deckName","playLabel","defenseLabel","charts","chartDeckKey","chartPlayKey","defNum","defLetter","deck","play","resultStr","parseResult","resolveLG","d1","d2","sum","acc","isDoubles","shouldGoForTwo","late","go","performPAT","COACH_PROFILES","pickBucketProb","table","row","createFGModel","cfg","overrides","p","wind","head","k","buildPolicy","fgModel","chooseFourthDown","fg","yl","toGo","kickDistance","pMake","early","twoMin","trailing","choosePAT","chooseTempo","lead9","clamp","n","min","max","isRedZone","ballOnFromHome","playerIsHome","possession","toDistanceBucket","keyForSituation","down","dist","inRedZone","PlayerTendenciesMemory","side","playType","inRed","input","counts","g","bucketN","globalN","bucketRun","globalRun","w","createLCG","seed","lo","hi","toFieldZone","offenseIsHome","abs","toClockPhase","quarter","clock","toScoreState","offenseScore","defenseScore","diff","margin","bucket","keyString","OpponentModel","halfLife","total","c","decayed","ks","cats","smoothed","probs","uncertainty","st","zone","offScore","defScore","score","categorizeOffenseLabel","label","l","categorizeDefenseLabel","isLegal","deps","r","softmaxPick","items","temp","T","weights","it","x","yardlineText","PlayCaller","fromFile","mod","__vitePreload","pre","offenseLabel","key","state","hand","predDef","phase","fieldZone","critical","baseT","epsilon","candidates","card","cat","d","matchup","context","short","long","recentRepeats","antiRepeat","surprise","riskPenalty","util","chosen","idx","offenseIsHome2","telem","options","predOff","o","clampBallOn","v","yardsTowardsOffense","applyFromAbsolute","prevAbs","yardsTowardsOff","distanceToOffenseGoal","ballOnAbs","distanceToDefenseGoal","capHalfDistance","amount","capDistance","cap","recomputeDownAndDistance","newBallOn","resetFirstDown","yardsToGoal","lineToGainRemaining","isLongGain","computeTimeOff","untimed","makeBase","marchPenalty","basisAbs","pen","lgMidfield","measuredFromMidfieldForLG","spotBasis","startAbs","distToGoal","applied","capped","distToDefGoal","administerPenalty","post","declined","march","autoFD","dd","accepted","isRegulation","atZero","untimedDownScheduled","adminMeta","valueOf","yardsAdv","downValue","toGoValue","vAccept","vDecline","decisionHint","clampYard","isInEndZone","absYard","isThroughEndZone","touchbackSpot","forReceiving","interceptionTouchback","missedFieldGoalSpot","receiving","spotOfKickAbs","newAbs","applyYards","next","handleScoring","touchdown","safety","resolvePlayCore","gameStateBefore","admin","possessionChanged","tb","madeLine","gameStateAfter","scoreRes","scoringTeam","DEFAULT_FLAGS","getFeatureFlag","envKey","envValue","stored","getCurrentEngine","getCurrentEngineInfo","type","OFFENSE_BASE_LABELS","makeCardId","deckKey","labelKey","makeArtPath","inferTypeFromLabel","buildOffenseDeck","base","puntLabel","punt","OFFENSE_DECKS","DEFENSE_DECK","WHITE_SIGN_RESTRICTIONS","DeterministicEngine","fetchOffenseCharts","chartsResult","error","offCardId","defCardId","offenseCard","defenseCard","cardId","DiceEngine","fetchMatchupTable","fetchPenaltyTableByName","matchupResult","penaltyResult","resolveSnap","EngineFactory","engines","engine","engineType","engineFactory","resolvePlay","chooseCommentaryLines","notes","cleaned","isFormation","isBookkeeping","notFormationOrBook","actionRe","defenseRe","pbp","analyst","buildBroadcastCall","downText","spotPhrase","def","off","scoreText","hash","numbersSide","formation","defLook","motion","isRun","isPass","action","resultPart","y","runPhrases","passPhrases","pick","offenseTeam","opener","choices","presnap","snap","nextDownText","nextSpot","reset","pressure","crowd","buildResultSummary","flags","currentPlayLabel","homeAway","spotText","acrossMid","nearMid","backedUp","last","inRange","shortYardage","isSneak","passHeavy","offFormation","dnote","dl","lastDef","isBlitz","inc","kind","blitzTag","firstDownNow","verbsGain","verbsLoss","path","start","mid","midText","end","conversion","retText","endSpot","looseAt","on","DriveTracker","val","events","formatTeamYardLine","yard","offense","goodField","rob","reason","plays","gained","theme","team","quickStrike","grinding","brad","wx","wxLine","fatigue","performKickoff","kicking","onside","kickerLeadingOrTied","ko","receiver","receiverSide","yardText","traj","angle","caughtAt","advancement","bigReturn","hugeReturn","normalPaths","stuffedPaths","handleFourthDownPunt","puntingTeam","fromYL","toYL","retPath","resolvePATAndRestart","koType","crossedTwoMinute","miss","spotEnd","finalizePenaltyDecision","decision","meta","info","msg","untimedNow","endedQuarter","resolveSafetyRestart","conceding","leading","choice","hudPayload","isTwoMinute","scoringSideToDelta","points","attemptPatInternal","rollD6PK","randomHash","isLeading","isTrailing","isTied","formatOrdinal","formatClock","totalSeconds","ss","formatPossessionSpotForBroadcast","possessing","own","timeKeeping","tempo","hadUntimed","inTwoBefore","applyTimeOff","timeResult","determineTempo","policy","lateGame","GameFlowCore","isPuntCard","handled","b","ev","finalizePenaltyDecisionExt","resolvePATAndRestartExt","attemptFieldGoalFlow","attemptFieldGoalKick","DEFAULT_TIME_KEEPING_CONST","args","resolveSafetyRestartExt","performKickoffExt","hudPayloadExt","preDiff","tempoCtx","fin","nextState","summary","call","pat","scoringSide","safetyRes","spot","qs","runs","passes","kickTeam","buildBroadcastCallExt","buildResultSummaryExt","chooseCommentaryLinesExt","GameFlow","uiRegistered","bus","tables","progressiveEnhancement","isTestGame","ensureUIRegistered","showInitialLoading","ErrorBoundary","createFallbackHUD","createFallbackLog","createFallbackField","createFallbackHand","createFallbackControls","createGenericFallback","createLoadingSpinner","registerCoreUI","registerInteractiveUI","registerOptionalUI","registerEngineIndicator","hideLoadingSpinner","showCriticalError","errorDiv","loadingElement","spinner","text","style","errorElement","coreComponents","component","module","originalRegister","safeRegister","interactiveComponents","scheduleWork","callback","boundary","retry","element","container","modulePath","preferred","registerFn","only","initializeProgressiveEnhancement","ProgressiveEnhancement","features","loadTime","fps","preloadTables","loaders","oc","pk","lg","setTheme","isDevModeOn","seconds","mPart","sPart","buildPlayPrefix","offLabel","defLabel","downNames","downIdx","downStr","toGoLabel","firstDownAbs","ballSpot","possLabel","opponentName","flow","playerDeck","name","aiDeck","initial","stateAfterKO","cardsToRender","defCards","tendencies","translate","rt","lastOff","pref","pcPlayer","pcAI","cards","currentState","defPicked","before","engineResult","t","newState","defCard","offPicked","err","dispose","runtime","Kickoff","Punt","PlaceKicking","ResultParsing","Timekeeping","Charts","LongGain","PATDecision","CoachProfiles","pendingPenalty"],"ignoreList":[],"sources":["../../src/rules/LongGain.ts","../../src/rules/special/Kickoff.ts","../../src/rules/special/Punt.ts","../../src/rules/special/PlaceKicking.ts","../../src/rules/ResultParsing.ts","../../src/rules/Timekeeping.ts","../../src/telemetry/TelemetryConfig.ts","../../src/utils/EventBus.ts","../../src/telemetry/TelemetryCollector.ts","../../src/rules/Charts.ts","../../src/ai/PATDecision.ts","../../src/ai/CoachProfiles.ts","../../src/ai/policy/NFL2025Policy.ts","../../src/ai/tendencies/PlayerTendenciesMemory.ts","../../src/sim/RNG.ts","../../src/ai/OpponentModel.ts","../../src/ai/PlayCaller.ts","../../src/rules/PenaltyAdmin.ts","../../src/rules/Spots.ts","../../src/rules/ResolvePlayCore.ts","../../src/config/FeatureFlags.ts","../../src/data/decks.ts","../../src/config/EngineSelector.ts","../../src/flow/narration/Broadcast.ts","../../src/flow/narration/Summary.ts","../../src/flow/drive/DriveTracker.ts","../../src/flow/special/SpecialTeamsFlow.ts","../../src/flow/scoring/Scoring.ts","../../src/flow/penalties/PenaltyFlow.ts","../../src/flow/special/Safety.ts","../../src/flow/HudPayload.ts","../../src/flow/utils/GameFlowUtils.ts","../../src/flow/formatting/GameFlowFormatting.ts","../../src/flow/time/TimeManagement.ts","../../src/flow/core/GameFlowCore.ts","../../src/flow/GameFlow.ts","../../src/index.ts"],"sourcesContent":["export const LONG_GAIN_TABLE: Record<number, string> = {\r\n  1: '+50 and (+10 x 1D6)',\r\n  2: '+50',\r\n  3: '+45',\r\n  4: '+40',\r\n  5: '+35',\r\n  6: '+30',\r\n};\r\n\r\nexport type RNG = () => number;\r\n\r\nexport function rollD6(rng: RNG): number {\r\n  return Math.floor(rng() * 6) + 1;\r\n}\r\n\r\nexport interface DiceRollResult {\r\n  result: number;\r\n  diceRolls: number[];\r\n}\r\n\r\nexport function resolveLongGain(rng: RNG): number {\r\n  const roll = rollD6(rng);\r\n  const entry = LONG_GAIN_TABLE[roll];\r\n  if (!entry) return 30;\r\n  if (entry.includes('and')) {\r\n    // \"+50 and (+10 x 1D6)\"\r\n    const extra = rollD6(rng) * 10;\r\n    return 50 + extra;\r\n  }\r\n  const m = entry.match(/\\+(\\d+)/);\r\n  return m && m[1] ? parseInt(m[1], 10) : 30;\r\n}\r\n\r\nexport function resolveLongGainWithDice(rng: RNG): DiceRollResult {\r\n  const roll = rollD6(rng);\r\n  const diceRolls = [roll];\r\n\r\n  const entry = LONG_GAIN_TABLE[roll];\r\n  let result: number;\r\n\r\n  if (!entry) {\r\n    result = 30;\r\n  } else if (entry.includes('and')) {\r\n    // \"+50 and (+10 x 1D6)\"\r\n    const extraRoll = rollD6(rng);\r\n    diceRolls.push(extraRoll);\r\n    result = 50 + (extraRoll * 10);\r\n  } else {\r\n    const m = entry.match(/\\+(\\d+)/);\r\n    result = m && m[1] ? parseInt(m[1], 10) : 30;\r\n  }\r\n\r\n  return { result, diceRolls };\r\n}\r\n","import { rollD6, resolveLongGain } from '../LongGain';\r\nimport type { RNG } from '../../sim/RNG';\r\n\r\nexport const NORMAL_KICKOFF_TABLE: Record<number, number | string> = {\r\n  2: 'FUMBLE*',\r\n  3: 'PENALTY -10*',\r\n  4: 10,\r\n  5: 15,\r\n  6: 20,\r\n  7: 25,\r\n  8: 30,\r\n  9: 35,\r\n  10: 40,\r\n  11: 'LG',\r\n  12: 'LG + 5',\r\n};\r\n\r\nexport interface OnsideEntry { possession: 'kicker' | 'receiver'; yard: number }\r\nexport const ONSIDE_KICK_TABLE: Record<number, OnsideEntry> = {\r\n  1: { possession: 'kicker', yard: 40 },\r\n  2: { possession: 'kicker', yard: 40 },\r\n  3: { possession: 'receiver', yard: 35 },\r\n  4: { possession: 'receiver', yard: 35 },\r\n  5: { possession: 'receiver', yard: 35 },\r\n  6: { possession: 'receiver', yard: 30 },\r\n};\r\n\r\nexport interface KickoffResult { yardLine: number; turnover: boolean }\r\n\r\nexport function parseKickoffYardLine(res: number | string, rng: RNG): KickoffResult {\r\n  if (typeof res === 'number') return { yardLine: res, turnover: false };\r\n  if (res === 'LG') return { yardLine: Math.min(resolveLongGain(rng), 50), turnover: false };\r\n  if (res === 'LG + 5') return { yardLine: Math.min(resolveLongGain(rng) + 5, 50), turnover: false };\r\n  return { yardLine: 25, turnover: false };\r\n}\r\n\r\nexport function resolveKickoff(\r\n  rng: RNG,\r\n  opts: { onside: boolean; kickerLeadingOrTied: boolean }\r\n): KickoffResult {\r\n  if (opts.onside) {\r\n    let roll = rollD6(rng);\r\n    if (opts.kickerLeadingOrTied) roll = Math.min(6, roll + 1);\r\n    const entry = ONSIDE_KICK_TABLE[roll] || { possession: 'receiver', yard: 35 };\r\n    return { yardLine: entry.yard, turnover: entry.possession === 'kicker' };\r\n  }\r\n  let roll = rollD6(rng) + rollD6(rng);\r\n  let entry = NORMAL_KICKOFF_TABLE[roll];\r\n  let turnover = false;\r\n  let penalty = false;\r\n  if (typeof entry === 'string' && entry.includes('*')) {\r\n    if (/FUMBLE/i.test(entry)) turnover = true;\r\n    if (/PENALTY/i.test(entry)) penalty = true;\r\n    // strip '*'\r\n    entry = (entry as string).replace('*', '').trim();\r\n    // reroll for yard line possibly with another star\r\n    const reroll = rollD6(rng) + rollD6(rng);\r\n    let res2 = NORMAL_KICKOFF_TABLE[reroll];\r\n    if (typeof res2 === 'string' && res2.includes('*')) {\r\n      if (/FUMBLE/i.test(res2)) turnover = false; // offset\r\n      if (/PENALTY/i.test(res2)) penalty = false; // offset\r\n      res2 = res2.replace('*', '').trim();\r\n    }\r\n    entry = res2;\r\n  }\r\n  const parsed = parseKickoffYardLine(entry as any, rng);\r\n  let finalYard = parsed.yardLine;\r\n  if (penalty) finalYard = Math.max(0, parsed.yardLine - 10);\r\n  return { yardLine: finalYard, turnover };\r\n}\r\n","import type { RNG } from '../../sim/RNG';\r\n\r\nexport const PUNT_DISTANCE_TABLE: Record<number, number> = {\r\n  2: 30, 3: 35, 4: 38, 5: 40, 6: 42, 7: 43, 8: 44, 9: 46, 10: 48, 11: 50, 12: 52,\r\n};\r\n\r\nexport const PUNT_RETURN_TABLE: Record<number, { type?: 'LG' | 'FC'; yards?: number }> = {\r\n  2: { type: 'LG' },\r\n  3: { yards: 20 },\r\n  4: { yards: 15 },\r\n  5: { yards: 12 },\r\n  6: { yards: 10 },\r\n  7: { yards: 8 },\r\n  8: { yards: 6 },\r\n  9: { yards: 5 },\r\n  10: { yards: 3 },\r\n  11: { yards: 0 },\r\n  12: { type: 'FC' },\r\n};\r\n\r\nexport interface PuntContext {\r\n  ballOn: number; // 0..100\r\n  puntingTeam: 'player' | 'ai';\r\n}\r\n\r\nexport interface PuntOutcome {\r\n  ballOn: number;\r\n  possessionFlips: boolean;\r\n  fumbleRecoveredByKickingTeam: boolean;\r\n  touchback: boolean;\r\n  // Optional narration aids\r\n  distance?: number;\r\n  returnYards?: number;\r\n  returnType?: 'LG'|'FC'|'YDS';\r\n}\r\n\r\nexport function rollD6(rng: RNG): number { return Math.floor(rng() * 6) + 1; }\r\n\r\nexport function resolvePunt(ctx: PuntContext, rng: RNG, resolveLongGain: (rng: RNG) => number): PuntOutcome {\r\n  const puntingIsPlayer = ctx.puntingTeam === 'player';\r\n  // Distance\r\n  const distRoll = rollD6(rng) + rollD6(rng);\r\n  const puntDistance = PUNT_DISTANCE_TABLE[distRoll] ?? 40;\r\n  let ballOn = ctx.ballOn + (puntingIsPlayer ? puntDistance : -puntDistance);\r\n  // End zone over/through using centralized Spots helpers\r\n  if (ballOn > 100 || ballOn < 0 || ballOn === 100 || ballOn === 0) {\r\n    const receiving = puntingIsPlayer ? 'ai' : 'player';\r\n    // Inline to avoid circular imports if any; mirrors Spots.puntTouchback\r\n    const tbBallOn = receiving === 'player' ? 20 : 80;\r\n    return { ballOn: tbBallOn, possessionFlips: true, fumbleRecoveredByKickingTeam: false, touchback: true, distance: puntDistance, returnYards: 0, returnType: 'YDS' };\r\n  }\r\n  // In play: resolve return\r\n  const retRoll = rollD6(rng) + rollD6(rng);\r\n  const ret = PUNT_RETURN_TABLE[retRoll] || { yards: 0 };\r\n  let returnYards = 0;\r\n  let fumbleTurnover = false;\r\n  if (ret.type === 'FC') {\r\n    returnYards = 0;\r\n    // Fair catch: no fumble chance\r\n  } else if (ret.type === 'LG') {\r\n    returnYards = resolveLongGain(rng);\r\n  } else {\r\n    returnYards = ret.yards || 0;\r\n    if (retRoll <= 4) {\r\n      if (rng() < 0.15) {\r\n        fumbleTurnover = rng() < 0.5;\r\n      }\r\n    }\r\n  }\r\n  if (puntingIsPlayer) ballOn -= returnYards; else ballOn += returnYards;\r\n  ballOn = Math.max(0, Math.min(100, ballOn));\r\n  if (fumbleTurnover) {\r\n    // Kicking team recovers: possession does not flip\r\n    return { ballOn, possessionFlips: false, fumbleRecoveredByKickingTeam: true, touchback: false, distance: puntDistance, returnYards, returnType: ret.type ? ret.type : 'YDS' };\r\n  }\r\n  return { ballOn, possessionFlips: true, fumbleRecoveredByKickingTeam: false, touchback: false, distance: puntDistance, returnYards, returnType: ret.type ? ret.type : 'YDS' };\r\n}\r\n","import type { RNG } from '../../sim/RNG';\r\n\r\nexport const PLACE_KICK_TABLE: Record<number, Record<string, 'G'|'NG'>> = {\r\n  2: { PAT: 'NG', '1-12': 'NG', '13-22': 'NG', '23-32': 'G', '33-38': 'G', '39-45': 'G' },\r\n  3: { PAT: 'G',  '1-12': 'NG', '13-22': 'NG', '23-32': 'NG', '33-38': 'G', '39-45': 'NG' },\r\n  4: { PAT: 'G',  '1-12': 'G',  '13-22': 'NG', '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  5: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  6: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'NG', '39-45': 'NG' },\r\n  7: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'G',  '39-45': 'NG' },\r\n  8: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'NG', '39-45': 'NG' },\r\n  9: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  10: { PAT: 'G', '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  11: { PAT: 'G', '1-12': 'G',  '13-22': 'NG', '23-32': 'NG', '33-38': 'G',  '39-45': 'NG' },\r\n  12: { PAT: 'NG','1-12': 'NG', '13-22': 'G',  '23-32': 'G',  '33-38': 'G',  '39-45': 'G' },\r\n};\r\n\r\nexport function rollD6(rng: RNG): number { return Math.floor(rng() * 6) + 1; }\r\n\r\nexport function attemptPAT(rng: RNG): boolean {\r\n  const roll = rollD6(rng) + rollD6(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {};\r\n  return row.PAT === 'G';\r\n}\r\n\r\nexport function attemptFieldGoal(rng: RNG, attemptYards: number): boolean {\r\n  const ay = Math.round(attemptYards);\r\n  let col: string | null = null;\r\n  if (ay <= 12) col = '1-12';\r\n  else if (ay <= 22) col = '13-22';\r\n  else if (ay <= 32) col = '23-32';\r\n  else if (ay <= 38) col = '33-38';\r\n  else if (ay <= 45) col = '39-45';\r\n  else col = null;\r\n  if (!col) return false;\r\n  const roll = rollD6(rng) + rollD6(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {};\r\n  return row[col] === 'G';\r\n}\r\n\r\n\r\n","import type { RNG } from '../sim/RNG';\r\nimport { resolveLongGainWithDice } from './LongGain';\r\n\r\nexport type OutcomeCategory = 'incomplete' | 'fumble' | 'interception' | 'penalty' | 'loss' | 'gain' | 'other';\r\n\r\nexport interface PenaltyInfo { on: 'offense' | 'defense'; yards: number; firstDown?: boolean }\r\nexport interface Outcome {\r\n  yards: number;\r\n  penalty: PenaltyInfo | null;\r\n  turnover: boolean;\r\n  interceptReturn: number;\r\n  firstDown: boolean;\r\n  raw?: string;\r\n  outOfBounds?: boolean;\r\n  category?: OutcomeCategory;\r\n  diceRolls?: number[]; // Added for telemetry\r\n}\r\n\r\nexport const DEFAULT_TIME_KEEPING = {\r\n  gain0to20: 30,\r\n  gain20plus: 45,\r\n  loss: 30,\r\n  outOfBounds: 15,\r\n  incomplete: 15,\r\n  interception: 30,\r\n  penalty: 15,\r\n  fumble: 15,\r\n  kickoff: 15,\r\n  fieldgoal: 15,\r\n  punt: 15,\r\n  extraPoint: 0,\r\n} as const;\r\n\r\nexport interface ParseResult {\r\n  outcome: Outcome;\r\n  diceRolls?: number[];\r\n}\r\n\r\nexport function parseResultString(str: string | null | undefined, resolveLongGain: (rng: RNG) => number, rng: RNG): Outcome {\r\n  const result = parseResultStringWithDice(str, resolveLongGain, rng);\r\n  return result.outcome;\r\n}\r\n\r\nexport function parseResultStringWithDice(str: string | null | undefined, resolveLongGain: (rng: RNG) => number, rng: RNG): ParseResult {\r\n  const outcome: Outcome = { yards: 0, penalty: null, turnover: false, interceptReturn: 0, firstDown: false };\r\n  let diceRolls: number[] | undefined;\r\n\r\n  if (!str) return { outcome };\r\n\r\n  const s = str.trim();\r\n  outcome.raw = s;\r\n  outcome.outOfBounds = /O\\/?B/i.test(s);\r\n\r\n  if (/Incomplete/i.test(s)) {\r\n    outcome.category = 'incomplete';\r\n    return { outcome };\r\n  }\r\n\r\n  if (/FUMBLE/i.test(s)) {\r\n    outcome.turnover = true;\r\n    outcome.category = 'fumble';\r\n    return { outcome };\r\n  }\r\n\r\n  if (/INTERCEPT/i.test(s)) {\r\n    outcome.turnover = true;\r\n    outcome.category = 'interception';\r\n    const m = s.match(/[+-]?\\d+/);\r\n    if (m) outcome.interceptReturn = parseInt(m[0], 10);\r\n    return { outcome };\r\n  }\r\n\r\n  if (/PENALTY/i.test(s)) {\r\n    const m = s.match(/[+-]\\d+/);\r\n    const yards = m ? parseInt(m[0], 10) : 0;\r\n    const onDefense = yards > 0;\r\n    outcome.penalty = { on: onDefense ? 'defense' : 'offense', yards: Math.abs(yards), firstDown: /1st\\s*Down/i.test(s) };\r\n    outcome.category = 'penalty';\r\n    return { outcome };\r\n  }\r\n\r\n  if (/Sack/i.test(s)) {\r\n    const m = s.match(/-\\d+/);\r\n    if (m) outcome.yards = parseInt(m[0], 10);\r\n    outcome.category = 'loss';\r\n    return { outcome };\r\n  }\r\n\r\n  if (/LG/.test(s)) {\r\n    const diceResult = resolveLongGainWithDice(rng);\r\n    outcome.yards = diceResult.result;\r\n    outcome.category = 'gain';\r\n    diceRolls = diceResult.diceRolls;\r\n    return { outcome, diceRolls };\r\n  }\r\n\r\n  const numMatch = s.match(/[+-]?\\d+/);\r\n  if (numMatch) {\r\n    outcome.yards = parseInt(numMatch[0], 10);\r\n    outcome.category = outcome.yards < 0 ? 'loss' : 'gain';\r\n    return { outcome };\r\n  }\r\n\r\n  const completeMatch = s.match(/Complete\\s*[+-]\\d+/i);\r\n  if (completeMatch) {\r\n    const m2 = completeMatch[0].match(/[+-]\\d+/);\r\n    if (m2) outcome.yards = parseInt(m2[0], 10);\r\n    outcome.category = outcome.yards < 0 ? 'loss' : 'gain';\r\n    return { outcome };\r\n  }\r\n\r\n  outcome.category = 'other';\r\n  return { outcome };\r\n}\r\n\r\nexport function calculateTimeOff(outcome: Outcome | null | undefined, TIME_KEEPING = DEFAULT_TIME_KEEPING): number {\r\n  if (!outcome) return TIME_KEEPING.gain0to20;\r\n  if (outcome.outOfBounds) return TIME_KEEPING.outOfBounds;\r\n  switch (outcome.category) {\r\n    case 'incomplete': return TIME_KEEPING.incomplete;\r\n    case 'interception': return TIME_KEEPING.interception;\r\n    case 'fumble': return TIME_KEEPING.fumble;\r\n    case 'penalty': return TIME_KEEPING.penalty;\r\n    case 'loss': return TIME_KEEPING.loss;\r\n    case 'gain': return Math.abs(outcome.yards) > 20 ? TIME_KEEPING.gain20plus : TIME_KEEPING.gain0to20;\r\n    default: return TIME_KEEPING.gain0to20;\r\n  }\r\n}\r\n","import { DEFAULT_TIME_KEEPING, calculateTimeOff } from './ResultParsing';\r\nimport type { TimeKeeping } from '../data/schemas/Timekeeping';\r\nimport type { Outcome } from './ResultParsing';\r\n\r\nexport function timeOffWithTwoMinute(outcome: Outcome, inTwoMinute: boolean, wasFirstDown: boolean, tk: TimeKeeping = DEFAULT_TIME_KEEPING as any): number {\r\n  // After two-minute warning, incomplete passes, out-of-bounds gains, and first-down conversions do not consume time.\r\n  let timeOff = calculateTimeOff(outcome, tk as any);\r\n  if (inTwoMinute) {\r\n    const isIncomplete = outcome.category === 'incomplete';\r\n    const isOut = !!outcome.outOfBounds;\r\n    if (isIncomplete || isOut || wasFirstDown) {\r\n      timeOff = 0;\r\n    }\r\n  }\r\n  return timeOff;\r\n}\r\n","/**\r\n * Configuration system for telemetry logging\r\n * Controls enablement, logging levels, and environment-specific settings\r\n */\r\n\r\nexport interface TelemetryConfiguration {\r\n  enabled: boolean;\r\n  logLevel: 'off' | 'debug' | 'production';\r\n  outputDestination: 'console' | 'file' | 'memory';\r\n  privacyMode: 'development' | 'production';\r\n  maxEventsPerGame?: number;\r\n  batchSize?: number;\r\n  flushInterval?: number; // milliseconds\r\n  fileName?: string;\r\n  enableSessionTracking?: boolean;\r\n  customFilters?: string[];\r\n}\r\n\r\nexport class TelemetryConfig {\r\n  private config: TelemetryConfiguration;\r\n\r\n  constructor(config: Partial<TelemetryConfiguration> = {}) {\r\n    // Default configuration\r\n    this.config = {\r\n      enabled: false,\r\n      logLevel: 'off',\r\n      outputDestination: 'console',\r\n      privacyMode: 'production',\r\n      maxEventsPerGame: 10000,\r\n      batchSize: 100,\r\n      flushInterval: 5000,\r\n      fileName: `telemetry_${Date.now()}.ndjson`,\r\n      enableSessionTracking: true,\r\n      customFilters: [],\r\n      ...this.getEnvironmentDefaults(),\r\n      ...config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check if telemetry is enabled\r\n   */\r\n  isEnabled(): boolean {\r\n    return this.config.enabled;\r\n  }\r\n\r\n  /**\r\n   * Get current log level\r\n   */\r\n  getLogLevel(): 'off' | 'debug' | 'production' {\r\n    return this.config.logLevel;\r\n  }\r\n\r\n  /**\r\n   * Get output destination\r\n   */\r\n  getOutputDestination(): 'console' | 'file' | 'memory' {\r\n    return this.config.outputDestination;\r\n  }\r\n\r\n  /**\r\n   * Get privacy mode\r\n   */\r\n  getPrivacyMode(): 'development' | 'production' {\r\n    return this.config.privacyMode;\r\n  }\r\n\r\n  /**\r\n   * Get maximum events per game (for memory management)\r\n   */\r\n  getMaxEventsPerGame(): number {\r\n    return this.config.maxEventsPerGame || 10000;\r\n  }\r\n\r\n  /**\r\n   * Get maximum events per game (alias for compatibility)\r\n   */\r\n  getMaxEvents(): number {\r\n    return this.getMaxEventsPerGame();\r\n  }\r\n\r\n  /**\r\n   * Get batch size for processing\r\n   */\r\n  getBatchSize(): number {\r\n    return this.config.batchSize || 100;\r\n  }\r\n\r\n  /**\r\n   * Get flush interval for batching\r\n   */\r\n  getFlushInterval(): number {\r\n    return this.config.flushInterval || 5000;\r\n  }\r\n\r\n  /**\r\n   * Get file name for file output\r\n   */\r\n  getFileName(): string {\r\n    return this.config.fileName || `telemetry_${Date.now()}.ndjson`;\r\n  }\r\n\r\n  /**\r\n   * Check if session tracking is enabled\r\n   */\r\n  isSessionTrackingEnabled(): boolean {\r\n    return this.config.enableSessionTracking !== false;\r\n  }\r\n\r\n  /**\r\n   * Get custom filters\r\n   */\r\n  getCustomFilters(): string[] {\r\n    return this.config.customFilters || [];\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<TelemetryConfiguration>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Enable telemetry with specific settings\r\n   */\r\n  enable(config: Partial<TelemetryConfiguration> = {}): void {\r\n    this.config.enabled = true;\r\n    this.updateConfig(config);\r\n  }\r\n\r\n  /**\r\n   * Disable telemetry\r\n   */\r\n  disable(): void {\r\n    this.config.enabled = false;\r\n    this.config.logLevel = 'off';\r\n  }\r\n\r\n  /**\r\n   * Set log level\r\n   */\r\n  setLogLevel(level: 'off' | 'debug' | 'production'): void {\r\n    this.config.logLevel = level;\r\n    if (level === 'off') {\r\n      this.config.enabled = false;\r\n    } else {\r\n      this.config.enabled = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set output destination\r\n   */\r\n  setOutputDestination(destination: 'console' | 'file' | 'memory'): void {\r\n    this.config.outputDestination = destination;\r\n  }\r\n\r\n  /**\r\n   * Set privacy mode\r\n   */\r\n  setPrivacyMode(mode: 'development' | 'production'): void {\r\n    this.config.privacyMode = mode;\r\n  }\r\n\r\n  /**\r\n   * Get configuration for NDJSON logger\r\n   */\r\n  getNdJsonLoggerConfig() {\r\n    return {\r\n      logLevel: this.config.logLevel,\r\n      fileName: this.config.fileName,\r\n      enableBatching: this.config.outputDestination === 'file',\r\n      flushInterval: this.config.flushInterval,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the complete configuration object\r\n   */\r\n  getConfig(): TelemetryConfiguration {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Create configuration from environment variables\r\n   */\r\n  static fromEnvironment(): TelemetryConfig {\r\n    const env = typeof process !== 'undefined' ? process.env : {};\r\n\r\n    const config: Partial<TelemetryConfiguration> = {};\r\n\r\n    // Check for telemetry enablement\r\n    if (env.TELEMETRY_ENABLED === 'true') {\r\n      config.enabled = true;\r\n    } else if (env.TELEMETRY_ENABLED === 'false') {\r\n      config.enabled = false;\r\n    }\r\n\r\n    // Check for log level\r\n    if (env.TELEMETRY_LOG_LEVEL) {\r\n      const level = env.TELEMETRY_LOG_LEVEL.toLowerCase();\r\n      if (['off', 'debug', 'production'].includes(level)) {\r\n        config.logLevel = level as 'off' | 'debug' | 'production';\r\n      }\r\n    }\r\n\r\n    // Check for output destination\r\n    if (env.TELEMETRY_OUTPUT) {\r\n      const output = env.TELEMETRY_OUTPUT.toLowerCase();\r\n      if (['console', 'file', 'memory'].includes(output)) {\r\n        config.outputDestination = output as 'console' | 'file' | 'memory';\r\n      }\r\n    }\r\n\r\n    // Check for privacy mode\r\n    if (env.TELEMETRY_PRIVACY_MODE) {\r\n      const mode = env.TELEMETRY_PRIVACY_MODE.toLowerCase();\r\n      if (['development', 'production'].includes(mode)) {\r\n        config.privacyMode = mode as 'development' | 'production';\r\n      }\r\n    }\r\n\r\n    // Check for max events\r\n    if (env.TELEMETRY_MAX_EVENTS) {\r\n      const maxEvents = parseInt(env.TELEMETRY_MAX_EVENTS, 10);\r\n      if (!isNaN(maxEvents) && maxEvents > 0) {\r\n        config.maxEventsPerGame = maxEvents;\r\n      }\r\n    }\r\n\r\n    // Check for batch size\r\n    if (env.TELEMETRY_BATCH_SIZE) {\r\n      const batchSize = parseInt(env.TELEMETRY_BATCH_SIZE, 10);\r\n      if (!isNaN(batchSize) && batchSize > 0) {\r\n        config.batchSize = batchSize;\r\n      }\r\n    }\r\n\r\n    // Check for flush interval\r\n    if (env.TELEMETRY_FLUSH_INTERVAL) {\r\n      const flushInterval = parseInt(env.TELEMETRY_FLUSH_INTERVAL, 10);\r\n      if (!isNaN(flushInterval) && flushInterval > 0) {\r\n        config.flushInterval = flushInterval;\r\n      }\r\n    }\r\n\r\n    return new TelemetryConfig(config);\r\n  }\r\n\r\n  /**\r\n   * Get default configuration based on environment\r\n   */\r\n  private getEnvironmentDefaults(): Partial<TelemetryConfiguration> {\r\n    // In development, enable by default\r\n    const isDevelopment = typeof process !== 'undefined' &&\r\n      (process.env.NODE_ENV === 'development' || process.env.VITEST);\r\n\r\n    if (isDevelopment) {\r\n      return {\r\n        enabled: true,\r\n        logLevel: 'debug',\r\n        privacyMode: 'development'\r\n      };\r\n    }\r\n\r\n    // In production, disabled by default\r\n    return {\r\n      enabled: false,\r\n      logLevel: 'off',\r\n      privacyMode: 'production'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Global telemetry configuration instance\r\n */\r\nexport const globalTelemetryConfig = TelemetryConfig.fromEnvironment();\r\n","export type HudUpdatePayload = {\r\n  quarter: number;\r\n  clock: number;\r\n  down: number;\r\n  toGo: number;\r\n  ballOn: number;\r\n  possession: 'player' | 'ai';\r\n  score: { player: number; ai: number };\r\n};\r\n\r\n/**\r\n * Safely extracts an error message from an unknown error object\r\n */\r\nexport function getErrorMessage(error: unknown): string {\r\n  if (error instanceof Error) {\r\n    return error.message;\r\n  }\r\n  if (typeof error === 'string') {\r\n    return error;\r\n  }\r\n  return 'Unknown error occurred';\r\n}\r\n\r\nexport type HandCardPayload = {\r\n  id: string;\r\n  label: string;\r\n  art: string;\r\n  type: string;\r\n};\r\n\r\nexport type HandUpdatePayload = {\r\n  cards: HandCardPayload[];\r\n  isPlayerOffense: boolean;\r\n};\r\n\r\n// Controls/UI payloads\r\nexport type ControlsUpdatePayload = {\r\n  awaitingPAT?: boolean;\r\n  showFG?: boolean;\r\n  enabled?: boolean;\r\n  hints?: {\r\n    patKickHint?: string;\r\n    patTwoHint?: string;\r\n    fgHint?: string;\r\n  };\r\n};\r\n\r\nexport type UINewGamePayload = { deckName: string; opponentName: string };\r\nexport type UIDevModeChangedPayload = { enabled: boolean };\r\nexport type UIThemeChangedPayload = { theme: 'arcade'|'minimalist'|'retro'|'board'|'vintage'|'modern' };\r\nexport type UISfxTogglePayload = { enabled: boolean };\r\nexport type UISfxVolumePayload = { volume: number };\r\nexport type UIChoosePATPayload = { choice: 'kick'|'two' };\r\nexport type UIAttemptFieldGoalPayload = { attemptYards?: number };\r\nexport type UIPlayCardPayload = { cardId: string };\r\nexport type UIFieldOverlayCardPayload = { art: string; label: string; xPercent: number; yPercent: number; ttlMs?: number };\r\n\r\nexport type EventMap = {\r\n  log: { message: string };\r\n  hudUpdate: HudUpdatePayload;\r\n  handUpdate: HandUpdatePayload;\r\n  sfx: { type: string; payload?: any };\r\n  vfx: { type: string; payload?: any };\r\n  playResolved: any;\r\n  // UI control flow\r\n  'controls:update': ControlsUpdatePayload;\r\n  'ui:newGame': UINewGamePayload;\r\n  'ui:devModeChanged': UIDevModeChangedPayload;\r\n  'ui:themeChanged': UIThemeChangedPayload;\r\n  'ui:engineChanged': { engine: string };\r\n  'ui:sfxToggle': UISfxTogglePayload;\r\n  'ui:sfxVolume': UISfxVolumePayload;\r\n  'ui:choosePAT': UIChoosePATPayload;\r\n  'ui:attemptFieldGoal': UIAttemptFieldGoalPayload;\r\n  'ui:playCard': UIPlayCardPayload;\r\n  'field:overlayCard': UIFieldOverlayCardPayload;\r\n  // Special Teams UI choice flow\r\n  'flow:choiceRequired': { choice: 'puntReturn'|'safetyFreeKick'|'onsideOrNormal'|'penaltyAcceptDecline'; data: any };\r\n  'ui:choice.kickoffType': { type: 'normal'|'onside' };\r\n  'ui:choice.puntReturn': { action: 'return'|'fairCatch'|'downAt20' };\r\n  'ui:choice.safetyFreeKick': { action: 'kickoff+25'|'puntFrom20' };\r\n  // Penalty UI\r\n  'ui:choice.penalty': { decision: 'accept'|'decline' };\r\n  // Dice UI events\r\n  'ui:playbookSelected': { playbook: string };\r\n  'ui:defensiveCardToggled': { cardId: string };\r\n  'ui:cardSelected': { cardId: string };\r\n  'ui:diceResult': { diceResult: { d1: number; d2: number; sum: number; isDoubles: boolean }; outcome: any };\r\n  'ui:resultDisplayShown': { result: any };\r\n  'ui:resultDisplayHidden': {};\r\n  'ui:penaltyOverride': { penaltyInfo: any; description: string };\r\n  'ui:possessionChanged': { isPlayerOffense: boolean };\r\n  'ui:gameReset': {};\r\n  'ui:diceUIReady': { config: any };\r\n  'ui:diceUIEvent': { event: any };\r\n  'ui:playbookStateChanged': { state: any };\r\n  'ui:defensiveStateChanged': { state: any };\r\n  'ui:penaltyStateChanged': { state: any };\r\n  'ui:resultStateChanged': { state: any };\r\n  // QA/Dev harness\r\n  'qa:startTestGame': {\r\n    seed: number;\r\n    playerDeck: string;\r\n    aiDeck: string;\r\n    playerCoach?: string;\r\n    aiCoach?: string;\r\n    startingPossession?: 'player'|'ai';\r\n  };\r\n  'qa:runAutoGame': { seed?: number; playerPAT?: 'auto'|'kick'|'two' };\r\n  'qa:runBatch': { seeds: number[]; playerPAT?: 'auto'|'kick'|'two' };\r\n  'qa:runValidatedBatch': { seeds: number[]; playerPAT?: 'auto'|'kick'|'two'; chunkSize?: number };\r\n  'qa:copyLog': {};\r\n  'qa:downloadDebug': {};\r\n  'qa:debug': { text: string };\r\n};\r\n\r\ntype Handler<T> = (payload: T) => void;\r\n\r\nexport class EventBus {\r\n  private listeners: { [K in keyof EventMap]?: Handler<EventMap[K]>[] } = {};\r\n\r\n  on<K extends keyof EventMap>(event: K, handler: Handler<EventMap[K]>): () => void {\r\n    const arr = (this.listeners[event] ||= [] as any);\r\n    (arr as any).push(handler as any);\r\n    return () => {\r\n      const i = (arr as any).indexOf(handler as any);\r\n      if (i >= 0) arr.splice(i, 1);\r\n    };\r\n  }\r\n\r\n  emit<K extends keyof EventMap>(event: K, payload: EventMap[K]): void {\r\n    const arr = this.listeners[event] as any;\r\n    if (!arr) return;\r\n    for (const h of arr) h(payload as any);\r\n  }\r\n}\r\n\r\n\r\n","import { EventBus } from '../utils/EventBus';\r\nimport type {\r\n  TelemetryEvent,\r\n  DiceRollEvent,\r\n  OutcomeDeterminedEvent,\r\n  PenaltyAssessedEvent,\r\n  PlayResolvedEvent,\r\n  GameStateChangeEvent,\r\n  ScoringEvent,\r\n  TimeUpdateEvent,\r\n  PossessionChangeEvent,\r\n  GameStateSnapshot\r\n} from './TelemetrySchema';\r\n\r\n/**\r\n * Runtime telemetry event collector\r\n * Captures dice rolls, outcomes, and game events for balance analysis\r\n */\r\nexport class TelemetryCollector {\r\n  private events: TelemetryEvent[] = [];\r\n  private sessionId: string;\r\n  private gameId: string;\r\n  private eventCounter = 0;\r\n  private isEnabled = false;\r\n\r\n  constructor(\r\n    private eventBus: EventBus,\r\n    private config: TelemetryConfig\r\n  ) {\r\n    this.sessionId = this.generateSessionId();\r\n    this.gameId = this.generateGameId();\r\n    this.isEnabled = config.isEnabled();\r\n  }\r\n\r\n  /**\r\n   * Initialize telemetry collection for a new game\r\n   */\r\n  startNewGame(): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    this.gameId = this.generateGameId();\r\n    this.eventCounter = 0;\r\n    this.events = [];\r\n\r\n    // Subscribe to relevant events from EventBus\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Stop telemetry collection and return collected events\r\n   */\r\n  stopCollection(): TelemetryEvent[] {\r\n    if (!this.isEnabled) return [];\r\n\r\n    this.cleanupEventListeners();\r\n    return [...this.events];\r\n  }\r\n\r\n  /**\r\n   * Record a dice roll event\r\n   */\r\n  recordDiceRoll(params: {\r\n    playLabel: string;\r\n    defenseLabel: string;\r\n    deckName: string;\r\n    diceResult: { d1: number; d2: number; sum: number; isDoubles: boolean };\r\n    chartKey?: string;\r\n    defenseKey?: string;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return; // Silently drop events beyond limit\r\n    }\r\n\r\n    const event: DiceRollEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'dice_roll',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record an outcome determination event\r\n   */\r\n  recordOutcomeDetermined(params: {\r\n    playLabel: string;\r\n    defenseLabel: string;\r\n    deckName: string;\r\n    outcome: {\r\n      category: string;\r\n      yards?: number;\r\n      penalty?: any;\r\n      interceptReturn?: number;\r\n      resultString?: string;\r\n    };\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: OutcomeDeterminedEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'outcome_determined',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a penalty assessment event\r\n   */\r\n  recordPenaltyAssessed(params: {\r\n    penaltyType: string;\r\n    yards: number;\r\n    spot: number;\r\n    possessionBefore: 'player' | 'ai';\r\n    possessionAfter?: 'player' | 'ai';\r\n    decision?: 'accept' | 'decline';\r\n    wasFirstDownOnPlay: boolean;\r\n    inTwoMinute: boolean;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: PenaltyAssessedEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'penalty_assessed',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a play resolution event\r\n   */\r\n  recordPlayResolved(params: {\r\n    playLabel: string;\r\n    defenseLabel: string;\r\n    deckName: string;\r\n    gameStateBefore: GameStateSnapshot;\r\n    gameStateAfter: GameStateSnapshot;\r\n    outcome: {\r\n      category: string;\r\n      yards?: number;\r\n      touchdown: boolean;\r\n      safety: boolean;\r\n      possessionChanged: boolean;\r\n    };\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: PlayResolvedEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'play_resolved',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a game state change event\r\n   */\r\n  recordGameStateChange(params: {\r\n    changeType: 'field_position' | 'down_distance' | 'clock' | 'score' | 'possession';\r\n    oldState: GameStateSnapshot;\r\n    newState: GameStateSnapshot;\r\n    reason?: string;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: GameStateChangeEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'game_state_change',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a scoring event\r\n   */\r\n  recordScoringEvent(params: {\r\n    scoringTeam: 'player' | 'ai';\r\n    points: number;\r\n    scoreType: 'TD' | 'XP' | 'TwoPoint' | 'FG' | 'Safety';\r\n    gameStateBefore: GameStateSnapshot;\r\n    gameStateAfter: GameStateSnapshot;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: ScoringEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'scoring_event',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a time update event\r\n   */\r\n  recordTimeUpdate(params: {\r\n    clockBefore: number;\r\n    clockAfter: number;\r\n    timeElapsed: number;\r\n    quarter: number;\r\n    reason?: string;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: TimeUpdateEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'time_update',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Record a possession change event\r\n   */\r\n  recordPossessionChange(params: {\r\n    possessionBefore: 'player' | 'ai';\r\n    possessionAfter: 'player' | 'ai';\r\n    reason: 'turnover' | 'kickoff' | 'punt' | 'touchback' | 'safety';\r\n    spot: number;\r\n    down?: number;\r\n    toGo?: number;\r\n  }): void {\r\n    if (!this.isEnabled) return;\r\n\r\n    // Check max events limit\r\n    if (this.config.getMaxEvents && this.events.length >= this.config.getMaxEvents()) {\r\n      return;\r\n    }\r\n\r\n    const event: PossessionChangeEvent = {\r\n      timestamp: Date.now(),\r\n      eventId: this.generateEventId(),\r\n      sessionId: this.sessionId,\r\n      gameId: this.gameId,\r\n      eventType: 'possession_change',\r\n      ...params\r\n    };\r\n\r\n    this.events.push(event);\r\n  }\r\n\r\n  /**\r\n   * Get current collected events (for debugging/testing)\r\n   */\r\n  getEvents(): TelemetryEvent[] {\r\n    return [...this.events];\r\n  }\r\n\r\n  /**\r\n   * Clear collected events (for testing)\r\n   */\r\n  clearEvents(): void {\r\n    this.events = [];\r\n    this.eventCounter = 0;\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    // Listen for UI dice result events to capture dice rolls\r\n    this.eventBus.on('ui:diceResult', (payload) => {\r\n      this.recordDiceRoll({\r\n        playLabel: payload.outcome?.playLabel || 'unknown',\r\n        defenseLabel: payload.outcome?.defenseLabel || 'unknown',\r\n        deckName: payload.outcome?.deckName || 'unknown',\r\n        diceResult: payload.diceResult,\r\n        chartKey: payload.outcome?.chartKey,\r\n        defenseKey: payload.outcome?.defenseKey\r\n      });\r\n    });\r\n\r\n    // Listen for play resolution events\r\n    this.eventBus.on('playResolved', (payload) => {\r\n      // This would need to be enhanced based on actual play resolution events\r\n      // For now, we'll capture it when we integrate with the resolver\r\n    });\r\n  }\r\n\r\n  private cleanupEventListeners(): void {\r\n    // Event listeners are managed by EventBus, no explicit cleanup needed\r\n    // unless we want to unsubscribe specific listeners\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    // Deterministic, monotonic identifier without Math.random\r\n    return `session_${Date.now()}_${this.eventCounter}`;\r\n  }\r\n\r\n  private generateGameId(): string {\r\n    // Deterministic, monotonic identifier without Math.random\r\n    return `game_${Date.now()}_${this.eventCounter}`;\r\n  }\r\n\r\n  private generateEventId(): string {\r\n    return `evt_${this.eventCounter++}_${Date.now()}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration interface for telemetry system\r\n */\r\nexport interface TelemetryConfig {\r\n  isEnabled(): boolean;\r\n  getLogLevel(): 'off' | 'debug' | 'production';\r\n  getMaxEvents?(): number;\r\n  getBatchSize?(): number;\r\n}\r\n","import type { RNG } from '../sim/RNG';\r\nimport type { OffenseCharts } from '../data/schemas/OffenseCharts';\r\nimport { parseResultStringWithDice } from './ResultParsing';\r\nimport { resolveLongGain as resolveLG } from './LongGain';\r\nimport { globalTelemetryConfig } from '../telemetry/TelemetryConfig';\r\nimport { TelemetryCollector } from '../telemetry/TelemetryCollector';\r\nimport { EventBus } from '../utils/EventBus';\r\n\r\nexport const DEF_NUM_TO_LETTER: Record<number, 'A'|'B'|'C'|'D'|'E'|'F'|'G'|'H'|'I'|'J'> = { 1:'A',2:'B',3:'C',4:'D',5:'E',6:'F',7:'G',8:'H',9:'I',0:'J' };\r\n\r\nexport const DEF_LABEL_TO_NUM: Record<string, number> = {\r\n  'Goal Line': 1,\r\n  'Short Yardage': 2,\r\n  'Inside Blitz': 3,\r\n  'Running': 4,\r\n  'Run & Pass': 5,\r\n  'Pass & Run': 6,\r\n  'Passing': 7,\r\n  'Outside Blitz': 8,\r\n  'Prevent': 9,\r\n  'Prevent Deep': 0,\r\n};\r\n\r\nexport const DECK_NAME_TO_CHART_KEY: Record<string, keyof OffenseCharts> = {\r\n  'Pro Style': 'ProStyle',\r\n  'Ball Control': 'BallControl',\r\n  'Aerial Style': 'AerialStyle',\r\n} as const;\r\n\r\nexport const LABEL_TO_CHART_KEY: Record<string, string> = {\r\n  'Run & Pass Option': 'Run/Pass Option',\r\n  'Sideline Pass': 'Side Line Pass',\r\n};\r\n\r\n// Global telemetry collector instance\r\nlet telemetryCollector: TelemetryCollector | null = null;\r\n\r\n/**\r\n * Initialize telemetry collector with EventBus\r\n */\r\nexport function initializeTelemetry(eventBus: EventBus): void {\r\n  if (globalTelemetryConfig.isEnabled()) {\r\n    telemetryCollector = new TelemetryCollector(eventBus, globalTelemetryConfig);\r\n  }\r\n}\r\n\r\n/**\r\n * Get current telemetry collector instance\r\n */\r\nexport function getTelemetryCollector(): TelemetryCollector | null {\r\n  return telemetryCollector;\r\n}\r\n\r\nexport interface DetermineOutcomeParams {\r\n  deckName: string; // e.g. 'Pro Style'\r\n  playLabel: string; // e.g. 'Power Up Middle'\r\n  defenseLabel: string; // e.g. 'Inside Blitz'\r\n  charts: OffenseCharts;\r\n  rng: RNG;\r\n}\r\n\r\nexport function determineOutcomeFromCharts(params: DetermineOutcomeParams) {\r\n  const { deckName, playLabel, defenseLabel, charts, rng } = params;\r\n  const chartDeckKey = (DECK_NAME_TO_CHART_KEY as any)[deckName] || (deckName as keyof OffenseCharts);\r\n  const chartPlayKey = LABEL_TO_CHART_KEY[playLabel] || playLabel;\r\n  const defNum = DEF_LABEL_TO_NUM[defenseLabel];\r\n  const defLetter = (defNum != null ? DEF_NUM_TO_LETTER[defNum] : undefined) as 'A'|'B'|'C'|'D'|'E'|'F'|'G'|'H'|'I'|'J'|undefined;\r\n  const deck = charts?.[chartDeckKey as keyof OffenseCharts] as any;\r\n  const play = deck ? deck[chartPlayKey] : undefined;\r\n  const resultStr = defLetter && play ? play[defLetter] : null;\r\n\r\n  // Record dice roll if telemetry is enabled\r\n  if (telemetryCollector && resultStr) {\r\n    // Use the new parseResultStringWithDice to capture dice information\r\n    const parseResult = parseResultStringWithDice(resultStr, resolveLG, rng);\r\n\r\n    // Record dice roll if there were any dice rolled\r\n    if (parseResult.diceRolls && parseResult.diceRolls.length > 0) {\r\n      // Convert dice rolls to the expected format (d1, d2, sum, isDoubles)\r\n      const diceRolls = parseResult.diceRolls;\r\n      const d1 = diceRolls[0] || 0;\r\n      const d2 = diceRolls[1] || d1; // Handle single die rolls\r\n      const sum = diceRolls.reduce((acc, roll) => acc + roll, 0);\r\n      const isDoubles = d1 === d2 && diceRolls.length > 1;\r\n\r\n      telemetryCollector.recordDiceRoll({\r\n        playLabel,\r\n        defenseLabel,\r\n        deckName,\r\n        diceResult: { d1, d2, sum, isDoubles },\r\n        chartKey: String(chartDeckKey),\r\n        ...(defLetter ? { defenseKey: defLetter } : {})\r\n      });\r\n    }\r\n\r\n    // Record outcome determination\r\n    telemetryCollector.recordOutcomeDetermined({\r\n      playLabel,\r\n      defenseLabel,\r\n      deckName,\r\n      outcome: {\r\n        category: parseResult.outcome.category || 'other',\r\n        yards: parseResult.outcome.yards,\r\n        penalty: parseResult.outcome.penalty || undefined,\r\n        interceptReturn: parseResult.outcome.interceptReturn,\r\n        resultString: resultStr || undefined\r\n      }\r\n    });\r\n\r\n    return parseResult.outcome;\r\n  }\r\n\r\n  return parseResultStringWithDice(resultStr, resolveLG, rng).outcome;\r\n}\r\n\r\n\r\n","import type { CoachProfile } from './CoachProfiles';\r\nimport type { RNG } from '../sim/RNG';\r\n\r\nexport interface PATContext {\r\n  diff: number; // player - ai after AI touchdown counted\r\n  quarter: number;\r\n  clock: number; // seconds\r\n  coach: CoachProfile;\r\n}\r\n\r\nexport function shouldGoForTwo(ctx: PATContext): boolean {\r\n  const late = ctx.quarter === 4 && ctx.clock <= 5 * 60;\r\n  // Go for two when trailing by 1 or 2\r\n  let go = (ctx.diff > 0 && ctx.diff <= 2);\r\n  // Aggressive coaches may go when leading by 1 very late (diff < 0 means AI leads)\r\n  if (ctx.coach.twoPointAggressiveLate && ctx.diff < 0 && ctx.diff === -1 && late) go = true;\r\n  return go;\r\n}\r\n\r\nexport function performPAT(ctx: PATContext, rng: RNG): { aiPoints: number } {\r\n  if (shouldGoForTwo(ctx)) {\r\n    const success = rng() < 0.5;\r\n    return { aiPoints: success ? 2 : 0 };\r\n  }\r\n  // XP success heuristic aligned with legacy behavior; 98% success when abstracted\r\n  const success = rng() < 0.98;\r\n  return { aiPoints: success ? 1 : 0 };\r\n}\r\n","import type { PlaybookName } from '../types/dice';\r\n\r\nexport interface CoachProfile {\r\n  name: string;\r\n  aggression: number;\r\n  fourthDownBoost: number;\r\n  passBias: number; // positive => pass leaning, negative => run leaning\r\n  twoPointAggressiveLate: boolean;\r\n  onsideAggressive: boolean;\r\n  // New playbook system preferences\r\n  playbookPreferences: Record<PlaybookName, number>; // 0-1 preference weights\r\n  riskTolerance: number; // How willing to take risks with EV calculations\r\n  clockManagementAggression: number; // How aggressive with clock in late game\r\n}\r\n\r\nexport const COACH_PROFILES: Record<string, CoachProfile> = {\r\n  'Andy Reid': {\r\n    name: 'Andy Reid',\r\n    aggression: 0.9,\r\n    fourthDownBoost: 0.15,\r\n    passBias: 0.15,\r\n    twoPointAggressiveLate: true,\r\n    onsideAggressive: true,\r\n    // Reid → Air Raid/Spread bias (as per Phase C requirements)\r\n    playbookPreferences: {\r\n      'West Coast': 0.6,    // Secondary option\r\n      'Spread': 0.95,       // Primary - high tempo, explosive\r\n      'Air Raid': 0.9,      // Primary - deep shots, aggression\r\n      'Smashmouth': 0.3,    // Minimal ground game focus\r\n      'Wide Zone': 0.7      // Secondary zone option\r\n    },\r\n    riskTolerance: 0.8,    // High risk tolerance - willing to go for big plays\r\n    clockManagementAggression: 0.9  // Very aggressive clock management\r\n  },\r\n  'John Madden': {\r\n    name: 'John Madden',\r\n    aggression: 0.6,\r\n    fourthDownBoost: 0.08,\r\n    passBias: 0.05,\r\n    twoPointAggressiveLate: false,\r\n    onsideAggressive: false,\r\n    // Madden → West Coast/Smashmouth balance (as per Phase C requirements)\r\n    playbookPreferences: {\r\n      'West Coast': 0.9,    // Primary - classic balanced offense\r\n      'Spread': 0.5,        // Moderate tempo\r\n      'Air Raid': 0.4,      // Conservative on deep shots\r\n      'Smashmouth': 0.85,   // Primary - strong running game focus\r\n      'Wide Zone': 0.8      // Secondary zone scheme with balance\r\n    },\r\n    riskTolerance: 0.5,    // Moderate risk tolerance\r\n    clockManagementAggression: 0.5  // Balanced clock management\r\n  },\r\n  'Bill Belichick': {\r\n    name: 'Bill Belichick',\r\n    aggression: 0.35,\r\n    fourthDownBoost: 0.0,\r\n    passBias: -0.05,\r\n    twoPointAggressiveLate: false,\r\n    onsideAggressive: false,\r\n    // Belichick → Wide Zone/Smashmouth bias (as per Phase C requirements)\r\n    playbookPreferences: {\r\n      'West Coast': 0.8,    // Primary - efficient, low-risk passing\r\n      'Spread': 0.2,        // Minimal tempo\r\n      'Air Raid': 0.1,      // Minimal deep shots\r\n      'Smashmouth': 0.9,    // Primary - strong running focus\r\n      'Wide Zone': 0.95     // Primary - zone running for efficiency\r\n    },\r\n    riskTolerance: 0.2,    // Low risk tolerance - conservative decisions\r\n    clockManagementAggression: 0.3  // Conservative clock management\r\n  },\r\n};\r\n","import type { GameState } from '../../domain/GameState';\n\nexport type TeamArchetype = 'Pro'|'Aerial'|'BallControl';\n\nexport interface PolicyInputs {\n  quarter: number; // 1..4\n  time_remaining_sec: number; // in current quarter\n  half: 1|2;\n  score_diff: number; // offense - defense\n  down: 1|2|3|4;\n  distance_to_go_yd: number;\n  yardline_100: number; // 1..99 from offense goal\n  has_two_minute_warning: boolean;\n  wind_mph?: number;\n  roof?: 'open'|'closed'|'retractable';\n  surface?: 'grass'|'turf';\n  kicker_make_table?: Array<{ max_yd: number; p_make: number }>;\n  team_archetype: TeamArchetype;\n  home_or_road: 'home'|'road';\n  underdog: boolean;\n  possession_after_score_pref: 'normal'|'want_OT';\n}\n\nexport interface FGEnvAdjust {\n  wind_head_per_10mph: number;\n  wind_tail_per_10mph: number;\n  altitude_high: number;\n  wet_surface: number;\n  elite_kicker_bonus: number;\n  weak_kicker_malus: number;\n}\n\nexport interface FGModelConfig {\n  baseline: Array<{ max_yd: number; p_make: number }>;\n  adjustments: FGEnvAdjust;\n}\n\nexport interface FGModel {\n  makeProb(attemptYards: number, ctx: { wind_mph?: number; roof?: string; surface?: string; kicker?: 'elite'|'weak'|'avg' }): number;\n}\n\nfunction pickBucketProb(ay: number, table: Array<{ max_yd: number; p_make: number }>): number {\n  for (const row of table) {\n    if (ay <= row.max_yd) return row.p_make;\n  }\n  return 0.0;\n}\n\nexport function createFGModel(cfg: FGModelConfig, overrides?: Array<{ max_yd: number; p_make: number }>): FGModel {\n  const table = overrides && overrides.length ? overrides : cfg.baseline;\n  return {\n    makeProb(attemptYards, ctx) {\n      let p = pickBucketProb(Math.round(attemptYards), table);\n      // Simple environment adjustments\n      const wind = Math.abs(ctx.wind_mph ?? 0);\n      const head = (ctx.wind_mph ?? 0) > 0 ? 1 : (ctx.wind_mph ?? 0) < 0 ? -1 : 0; // positive means headwind\n      if (head > 0) p += cfg.adjustments.wind_head_per_10mph * (wind / 10);\n      if (head < 0) p += cfg.adjustments.wind_tail_per_10mph * (wind / 10);\n      if (ctx.surface === 'grass') p += 0; // neutral default; could tune per JSON\n      // Kicker quality\n      const k = ctx.kicker ?? 'avg';\n      if (k === 'elite') p += cfg.adjustments.elite_kicker_bonus;\n      if (k === 'weak') p += cfg.adjustments.weak_kicker_malus;\n      return Math.max(0, Math.min(1, p));\n    },\n  };\n}\n\nexport type SpecialDecision = 'field_goal'|'punt'|'go_for_it'|'qb_kneel'|'spike'|'hail_mary'|'normal_play';\nexport type Tempo = 'normal'|'hurry_up'|'burn_clock'|'no_huddle';\n\nexport interface PolicyOutputs {\n  playcall_weights?: Record<string, number>;\n  tempo: Tempo;\n  special: SpecialDecision;\n  explanations: string[];\n}\n\nexport interface PolicyAPI {\n  chooseFourthDown(ctx: PolicyInputs & { fgModel: FGModel }): SpecialDecision;\n  choosePAT(ctx: { quarter: number; time_remaining_sec: number; score_diff: number }): 'kick'|'two';\n  chooseTempo(ctx: PolicyInputs): { tempo: Tempo };\n}\n\nexport function buildPolicy(): PolicyAPI {\n  // Constants from JSON\n  const fgConfig: FGModelConfig = {\n    baseline: [\n      { max_yd: 29, p_make: 0.97 },\n      { max_yd: 39, p_make: 0.92 },\n      { max_yd: 49, p_make: 0.82 },\n      { max_yd: 55, p_make: 0.68 },\n      { max_yd: 60, p_make: 0.50 },\n      { max_yd: 66, p_make: 0.32 },\n    ],\n    adjustments: {\n      wind_head_per_10mph: -0.05,\n      wind_tail_per_10mph: +0.03,\n      altitude_high: +0.03,\n      wet_surface: -0.03,\n      elite_kicker_bonus: +0.04,\n      weak_kicker_malus: -0.04,\n    },\n  };\n\n  const fgModel = createFGModel(fgConfig);\n\n  function chooseFourthDown(ctx: PolicyInputs & { fgModel?: FGModel }): SpecialDecision {\n    const fg = ctx.fgModel || fgModel;\n    // Quick field zones\n    const yl = ctx.yardline_100;\n    const toGo = ctx.distance_to_go_yd;\n    // NFL-style thresholds per JSON matrices (simplified)\n    // Compute kick distance\n    const kickDistance = (100 - yl) + 17;\n    const pMake = fg.makeProb(kickDistance, {} as any);\n\n    // Basic neutral early matrix\n    const early = (ctx.quarter === 1 || (ctx.quarter === 2 && ctx.time_remaining_sec > 300) || (ctx.quarter === 3 && ctx.time_remaining_sec > 300));\n    const late = (ctx.quarter === 2 || ctx.quarter === 4) && ctx.time_remaining_sec <= 300;\n    const twoMin = ctx.time_remaining_sec <= 120;\n    const trailing = ctx.score_diff < 0;\n\n    if (early) {\n      if (yl <= 40) {\n        if (toGo <= 1) return 'punt';\n        if (toGo <= 2 && yl >= 35) return pMake >= 0.75 ? 'field_goal' : 'punt';\n        return 'punt';\n      }\n      if (yl >= 41 && yl <= 59) {\n        if (toGo <= 2) return 'go_for_it';\n        if (toGo <= 4) return 'go_for_it'; // consider_go → go_for_it in simplified model\n        return 'punt';\n      }\n      if (yl >= 60 && yl <= 69) {\n        if (toGo <= 2) return 'go_for_it';\n        if (toGo <= 5) return 'go_for_it';\n        return pMake >= 0.75 ? 'field_goal' : 'punt';\n      }\n      if (yl >= 70) {\n        if (toGo <= 2) return 'go_for_it';\n        if (toGo <= 5) return 'go_for_it';\n        return pMake >= 0.7 ? 'field_goal' : (pMake >= 0.5 ? 'field_goal' : 'go_for_it');\n      }\n    }\n\n    if (late && trailing) {\n      if (yl >= 50 && toGo <= 5) return 'go_for_it';\n      if (yl >= 60 && toGo <= 7) return 'go_for_it';\n      if (yl >= 70 && toGo <= 10) return 'go_for_it';\n      if (yl < 40 && twoMin && toGo <= 2) return 'go_for_it';\n    }\n\n    if (late && !trailing) {\n      if (yl >= 80 && toGo <= 1) return 'go_for_it';\n      if (yl >= 57 && (ctx.down >= 2 || ctx.time_remaining_sec <= 30)) return pMake >= 0.55 ? 'field_goal' : 'punt';\n      return pMake >= 0.62 && yl >= 60 ? 'field_goal' : 'punt';\n    }\n\n    // Default punt rule\n    if (yl <= 59) return 'punt';\n    // Fringe\n    return pMake >= 0.62 ? 'field_goal' : (toGo <= 2 ? 'go_for_it' : 'punt');\n  }\n\n  function choosePAT(ctx: { quarter: number; time_remaining_sec: number; score_diff: number }): 'kick'|'two' {\n    if (ctx.quarter < 4 || ctx.time_remaining_sec > 300) {\n      // Kick unless trailing big\n      if (ctx.score_diff <= -9) return 'two';\n      return 'kick';\n    }\n    if (ctx.score_diff === -8) return 'two';\n    if (ctx.score_diff === -5) return 'kick';\n    if (ctx.score_diff === -4) return 'two';\n    return 'kick';\n  }\n\n  function chooseTempo(ctx: PolicyInputs): { tempo: Tempo } {\n    const trailing = ctx.score_diff < 0;\n    const lead9 = ctx.score_diff >= 9;\n    const late = (ctx.quarter === 2 || ctx.quarter === 4) && ctx.time_remaining_sec <= 300;\n    const twoMin = ctx.time_remaining_sec <= 120;\n    if ((late || twoMin) && trailing) return { tempo: 'hurry_up' };\n    if ((late || twoMin) && lead9) return { tempo: 'burn_clock' };\n    return { tempo: 'normal' };\n  }\n\n  return { chooseFourthDown, choosePAT, chooseTempo };\n}\n\n// Helpers to convert engine GameState to PolicyInputs for offense side\nexport function toPolicyInputsFromState(st: GameState, offenseIsHome: boolean): PolicyInputs {\n  const offenseIsPlayer = st.possession === 'player';\n  const offenseScore = st.score[offenseIsPlayer ? 'player' : 'ai'];\n  const defenseScore = st.score[offenseIsPlayer ? 'ai' : 'player'];\n  const score_diff = offenseScore - defenseScore;\n  const quarter = st.quarter;\n  const time_remaining_sec = st.clock;\n  const half: 1|2 = quarter <= 2 ? 1 : 2;\n  const down = st.down as 1|2|3|4;\n  const distance_to_go_yd = st.toGo;\n  const yardline_from_home = st.ballOn;\n  const yardline_100 = offenseIsHome ? yardline_from_home : (100 - yardline_from_home);\n  const has_two_minute_warning = (quarter === 2 || quarter === 4) && time_remaining_sec > 0 && time_remaining_sec > 120;\n  return {\n    quarter,\n    time_remaining_sec,\n    half,\n    score_diff,\n    down,\n    distance_to_go_yd,\n    yardline_100,\n    has_two_minute_warning,\n    team_archetype: 'Pro',\n    home_or_road: offenseIsHome ? 'home' : 'road',\n    underdog: false,\n    possession_after_score_pref: 'normal',\n  };\n}\n\n\n","// Move utility functions here to break circular dependency\r\nfunction clamp(n: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, n));\r\n}\r\n\r\nfunction isRedZone(ballOnFromHome: number, playerIsHome: boolean, possession: 'player'|'ai'): boolean {\r\n  const offenseIsHomeFlag = (possession === 'player') === playerIsHome;\r\n  const yardsToOppGoal = offenseIsHomeFlag ? (100 - ballOnFromHome) : ballOnFromHome;\r\n  return yardsToOppGoal < 20;\r\n}\r\n\r\nexport type TendencyDistanceBucket = 'short'|'medium'|'long';\r\n\r\nfunction toDistanceBucket(toGo: number): TendencyDistanceBucket {\r\n\tif (toGo <= 2) return 'short';\r\n\tif (toGo >= 8) return 'long';\r\n\treturn 'medium';\r\n}\r\n\r\nfunction keyForSituation(down: number, dist: TendencyDistanceBucket, inRedZone: boolean): string {\r\n\tconst d = Math.max(1, Math.min(4, down));\r\n\treturn `${d}:${dist}:${inRedZone ? 'RZ' : 'FG'}`;\r\n}\r\n\r\nexport class PlayerTendenciesMemory {\r\n\tprivate countsByKey: Record<string, { run: number; pass: number }> = Object.create(null);\r\n\tprivate global: { run: number; pass: number } = { run: 0, pass: 0 };\r\n\r\n\trecord(side: 'player'|'ai', playType: 'run'|'pass', ctx: { down: number; toGo: number; ballOnFromHome: number; playerIsHome: boolean; possessing: 'player'|'ai' }): void {\r\n\t\t// Only learn the HUMAN player's offense tendencies\r\n\t\tif (side !== 'player' || ctx.possessing !== 'player') return;\r\n\t\tconst inRed = isRedZone(ctx.ballOnFromHome, ctx.playerIsHome, ctx.possessing);\r\n\t\tconst k = keyForSituation(ctx.down, toDistanceBucket(ctx.toGo), inRed);\r\n\t\tif (!this.countsByKey[k]) this.countsByKey[k] = { run: 0, pass: 0 };\r\n\t\tthis.countsByKey[k]![playType] += 1;\r\n\t\tthis.global[playType] += 1;\r\n\t}\r\n\r\n\t// Predict run probability for the player's next play without peeking current selection\r\n\tpredictRunProbabilityForPlayer(input: { down: number; toGo: number; ballOnFromHome: number; playerIsHome: boolean }): number {\r\n\t\tconst inRed = isRedZone(input.ballOnFromHome, input.playerIsHome, 'player');\r\n\t\tconst k = keyForSituation(input.down, toDistanceBucket(input.toGo), inRed);\r\n\t\tconst counts = this.countsByKey[k] || { run: 0, pass: 0 };\r\n\t\tconst g = this.global;\r\n\t\t// Laplace smoothing with small prior; blend bucket with global if sparse\r\n\t\tconst bucketN = counts.run + counts.pass;\r\n\t\tconst globalN = g.run + g.pass;\r\n\t\tconst bucketRun = (counts.run + 1) / (bucketN + 2);\r\n\t\tconst globalRun = globalN > 0 ? (g.run / globalN) : 0.5;\r\n\t\tconst w = Math.max(0, Math.min(1, bucketN / 6)); // need about 6 samples to fully trust bucket\r\n\t\treturn clamp(bucketRun * w + globalRun * (1 - w), 0.1, 0.9);\r\n\t}\r\n}\r\n\r\nexport type PlayerTendenciesMemoryConstructor = typeof PlayerTendenciesMemory;\r\n\r\n\r\n","export type RNG = () => number;\r\n\r\nexport function createLCG(seed: number): RNG {\r\n  let s = seed % 2147483647;\r\n  if (s <= 0) s += 2147483646;\r\n  return function next(): number {\r\n    s = (s * 16807) % 2147483647;\r\n    return (s - 1) / 2147483646;\r\n  };\r\n}\r\n\r\nexport function rollD6(rng: RNG): number {\r\n  return Math.floor(rng() * 6) + 1;\r\n}\r\n\r\n// New LCG for dice, per spec: s_{n+1} = (1103515245 * s_n + 12345) mod 2^31\r\n// Seed: s_0 = seed; next() returns r = s / 2^31\r\nexport function createDiceLCG(seed: number): RNG {\r\n  const MOD = 2 ** 31; // 2147483648\r\n  const A = 1103515245;\r\n  const C = 12345;\r\n  let s = (seed >>> 0) % MOD;\r\n  return function next(): number {\r\n    s = (A * s + C) % MOD;\r\n    return s / MOD;\r\n  };\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\n\r\nexport type OffenseBucket = 'run_mid'|'run_edge'|'pass_short'|'pass_deep'|'gadget';\r\nexport type DefenseBucket = 'goal_line'|'short_yd'|'inside_blitz'|'outside_blitz'|'balanced'|'passing'|'prevent'|'prevent_deep';\r\n\r\nexport type ClockPhase = 'Q1'|'Q2'|'Q3'|'Q4-early'|'Q4-late'|'two_min';\r\nexport type DistanceBucket = 1|'2-3'|'4-6'|'7-10'|'11-15'|'16+';\r\nexport type FieldZone = 'own_gl'|'backed'|'own'|'mid'|'plus'|'red';\r\nexport type ScoreMargin = 1|'2-3'|'4-7'|'8-14'|'15+';\r\nexport type ScoreState = `lead:${ScoreMargin}`|`trail:${ScoreMargin}`|'tied';\r\n\r\nexport interface ModelCtxKey {\r\n  down: 1|2|3|4;\r\n  dist: DistanceBucket;\r\n  zone: FieldZone;\r\n  score: ScoreState;\r\n  clock: ClockPhase;\r\n}\r\n\r\nfunction clamp<T>(n: number, lo: number, hi: number): number { return Math.max(lo, Math.min(hi, n)); }\r\n\r\nexport function toDistanceBucket(toGo: number): DistanceBucket {\r\n  if (toGo <= 1) return 1;\r\n  if (toGo <= 3) return '2-3';\r\n  if (toGo <= 6) return '4-6';\r\n  if (toGo <= 10) return '7-10';\r\n  if (toGo <= 15) return '11-15';\r\n  return '16+';\r\n}\r\n\r\nexport function toFieldZone(ballOnFromHome: number, offenseIsHome: boolean): FieldZone {\r\n  const abs = offenseIsHome ? ballOnFromHome : (100 - ballOnFromHome);\r\n  if (abs <= 5) return 'own_gl';\r\n  if (abs <= 19) return 'backed';\r\n  if (abs <= 39) return 'own';\r\n  if (abs <= 59) return 'mid';\r\n  if (abs <= 79) return 'plus';\r\n  return 'red';\r\n}\r\n\r\nexport function toClockPhase(quarter: number, clock: number): ClockPhase {\r\n  if (clock <= 120) return 'two_min';\r\n  if (quarter === 4 && clock <= 6 * 60) return 'Q4-late';\r\n  if (quarter === 4) return 'Q4-early';\r\n  if (quarter === 3) return 'Q3';\r\n  if (quarter === 2) return 'Q2';\r\n  return 'Q1';\r\n}\r\n\r\nexport function toScoreState(offenseScore: number, defenseScore: number): ScoreState {\r\n  const diff = offenseScore - defenseScore;\r\n  if (diff === 0) return 'tied';\r\n  const margin = Math.abs(diff);\r\n  const bucket: ScoreMargin = ((): ScoreMargin => {\r\n    if (margin <= 1) return 1;\r\n    if (margin <= 3) return '2-3';\r\n    if (margin <= 7) return '4-7';\r\n    if (margin <= 14) return '8-14';\r\n    return '15+';\r\n  })();\r\n  return (diff > 0 ? `lead:${bucket}` : `trail:${bucket}`);\r\n}\r\n\r\nfunction keyString(k: ModelCtxKey): string {\r\n  return `${k.down}|${k.dist}|${k.zone}|${k.score}|${k.clock}`;\r\n}\r\n\r\ntype CountMap = Record<string, number>;\r\n\r\nexport interface Prediction<T extends string> {\r\n  probs: Record<T, number>;\r\n  uncertainty: number; // 0..1 where higher means more uncertain\r\n}\r\n\r\nexport class OpponentModel {\r\n  private offenseCounts: Map<string, CountMap> = new Map();\r\n  private defenseCounts: Map<string, CountMap> = new Map();\r\n  private decay: number;\r\n  private alpha: number;\r\n\r\n  constructor(opts?: { halfLife?: number; alpha?: number }) {\r\n    const halfLife = Math.max(1, Math.floor(opts?.halfLife ?? 12));\r\n    // Convert half-life to per-update decay factor d where weight *= d per play\r\n    // After H plays, weight halves => d^H = 0.5 => d = 0.5^(1/H)\r\n    this.decay = Math.pow(0.5, 1 / halfLife);\r\n    this.alpha = opts?.alpha ?? 0.5;\r\n  }\r\n\r\n  reset(): void {\r\n    this.offenseCounts.clear();\r\n    this.defenseCounts.clear();\r\n  }\r\n\r\n  private decayAll(m: Map<string, CountMap>): void {\r\n    for (const [k, counts] of m) {\r\n      let total = 0;\r\n      for (const c of Object.keys(counts)) {\r\n        const current = counts[c] ?? 0;\r\n        const decayed = current * this.decay;\r\n        counts[c] = decayed;\r\n        total += decayed;\r\n      }\r\n      // Drop tiny entries to keep map small\r\n      if (total < 1e-3) m.delete(k);\r\n    }\r\n  }\r\n\r\n  stepDecay(): void {\r\n    this.decayAll(this.offenseCounts);\r\n    this.decayAll(this.defenseCounts);\r\n  }\r\n\r\n  recordOffense(k: ModelCtxKey, bucket: OffenseBucket): void {\r\n    const ks = keyString(k);\r\n    const row = this.offenseCounts.get(ks) || Object.create(null);\r\n    row[bucket] = (row[bucket] || 0) + 1;\r\n    this.offenseCounts.set(ks, row);\r\n  }\r\n\r\n  recordDefense(k: ModelCtxKey, bucket: DefenseBucket): void {\r\n    const ks = keyString(k);\r\n    const row = this.defenseCounts.get(ks) || Object.create(null);\r\n    row[bucket] = (row[bucket] || 0) + 1;\r\n    this.defenseCounts.set(ks, row);\r\n  }\r\n\r\n  predictOffense(k: ModelCtxKey): Prediction<OffenseBucket> {\r\n    const ks = keyString(k);\r\n    const counts = this.offenseCounts.get(ks) || {};\r\n    const cats: OffenseBucket[] = ['run_mid','run_edge','pass_short','pass_deep','gadget'];\r\n    let total = 0;\r\n    const smoothed: Record<OffenseBucket, number> = {\r\n      run_mid: this.alpha,\r\n      run_edge: this.alpha,\r\n      pass_short: this.alpha,\r\n      pass_deep: this.alpha,\r\n      gadget: this.alpha,\r\n    };\r\n    for (const c of cats) { smoothed[c] += counts[c] || 0; total += smoothed[c]; }\r\n    const probs = Object.fromEntries(cats.map(c => [c, (smoothed[c] || 0) / (total || 1)])) as Record<OffenseBucket, number>;\r\n    const ess = Object.values(counts).reduce((s, n) => s + (n || 0), 0);\r\n    const uncertainty = 1 / (1 + ess);\r\n    return { probs, uncertainty };\r\n  }\r\n\r\n  predictDefense(k: ModelCtxKey): Prediction<DefenseBucket> {\r\n    const ks = keyString(k);\r\n    const counts = this.defenseCounts.get(ks) || {};\r\n    const cats: DefenseBucket[] = ['goal_line','short_yd','inside_blitz','outside_blitz','balanced','passing','prevent','prevent_deep'];\r\n    let total = 0;\r\n    const smoothed: Record<DefenseBucket, number> = Object.create(null);\r\n    for (const c of cats) { smoothed[c] = (counts[c] || 0) + this.alpha; total += smoothed[c]; }\r\n    const probs = Object.fromEntries(cats.map(c => [c, (smoothed[c] || 0) / (total || 1)])) as Record<DefenseBucket, number>;\r\n    const ess = Object.values(counts).reduce((s, n) => s + (n || 0), 0);\r\n    const uncertainty = 1 / (1 + ess);\r\n    return { probs, uncertainty };\r\n  }\r\n\r\n  // Utility helpers to build model keys from state and perspective\r\n  buildKeyFromState(st: GameState, offenseIsHome: boolean): ModelCtxKey {\r\n    const down = (clamp(st.down, 1, 4) as 1|2|3|4);\r\n    const dist = toDistanceBucket(st.toGo);\r\n    const zone = toFieldZone(st.ballOn, offenseIsHome);\r\n    const clock = toClockPhase(st.quarter, st.clock);\r\n    const offScore = st.score[(st.possession === 'player') ? 'player' : 'ai'];\r\n    const defScore = st.score[(st.possession === 'player') ? 'ai' : 'player'];\r\n    const score = toScoreState(offScore, defScore);\r\n    return { down, dist, zone, score, clock };\r\n  }\r\n}\r\n\r\nexport function categorizeOffenseLabel(label: string): OffenseBucket {\r\n  const l = label.toLowerCase();\r\n  if (/reverse|razzle|flea|double pass|end around/.test(l)) return 'gadget';\r\n  if (/end run|outside|sweep|toss/.test(l)) return 'run_edge';\r\n  if (/long bomb|deep|post|corner|stop & go|streak/.test(l)) return 'pass_deep';\r\n  if (/pass|hook|look in|sideline|flair|flare|pop|button|down & (in|out)|screen|quick|slant/.test(l)) return 'pass_short';\r\n  return 'run_mid';\r\n}\r\n\r\nexport function categorizeDefenseLabel(label: string): DefenseBucket {\r\n  const l = label.toLowerCase();\r\n  if (/goal line/.test(l)) return 'goal_line';\r\n  if (/short yardage/.test(l)) return 'short_yd';\r\n  if (/inside blitz/.test(l)) return 'inside_blitz';\r\n  if (/outside blitz/.test(l)) return 'outside_blitz';\r\n  if (/prevent deep/.test(l)) return 'prevent_deep';\r\n  if (/prevent/.test(l)) return 'prevent';\r\n  if (/passing/.test(l)) return 'passing';\r\n  return 'balanced';\r\n}\r\n\r\n\r\n","import type { RNG } from '../sim/RNG';\r\nimport { createLCG } from '../sim/RNG';\r\nimport type { GameState } from '../domain/GameState';\r\nimport type { OffenseCharts } from '../data/schemas/OffenseCharts';\r\nimport { OpponentModel, categorizeDefenseLabel, categorizeOffenseLabel, toClockPhase, toFieldZone } from './OpponentModel';\r\n\r\nexport type OffenseCall = { deckName: string; playLabel: string };\r\nexport type DefenseCall = { label: string };\r\n\r\nexport interface PersonalityConfig {\r\n  aggressiveness_offense: number;\r\n  aggressiveness_defense: number;\r\n  trick_play_rate: number;\r\n  blitz_rate_base: number;\r\n  deception_bias: number;\r\n  tempo_preference: 'normal'|'hurry'|'chew';\r\n  risk_tolerance_late: number;\r\n}\r\n\r\nexport interface PlayCallerDeps {\r\n  charts: OffenseCharts;\r\n  getOffenseHand(): Array<{ id: string; label: string; type: 'run'|'pass'|'punt'|'field-goal' }>;\r\n  getDefenseOptions(): string[];\r\n  getWhiteSignRestriction(playLabel: string): number | null;\r\n}\r\n\r\nfunction clamp(n: number, lo: number, hi: number): number { return Math.max(lo, Math.min(hi, n)); }\r\n\r\nfunction isLegal(playLabel: string, deps: PlayCallerDeps, st: GameState, playerIsHome: boolean): boolean {\r\n  const r = deps.getWhiteSignRestriction(playLabel);\r\n  if (r == null) return true;\r\n  const offenseIsHome = (st.possession === 'player') === playerIsHome;\r\n  const yardsToOpp = offenseIsHome ? (100 - st.ballOn) : st.ballOn;\r\n  return yardsToOpp > r;\r\n}\r\n\r\nfunction softmaxPick<T>(rng: RNG, items: Array<{ item: T; util: number }>, temp: number): T {\r\n  const T = Math.max(0.05, temp);\r\n  const weights = items.map(it => Math.exp(clamp(it.util, -1, 1) / T));\r\n  const sum = weights.reduce((s, x) => s + x, 0) || 1;\r\n  const r = rng() * sum;\r\n  let acc = 0;\r\n  for (let i = 0; i < items.length; i++) {\r\n    const w = weights[i] || 0;\r\n    if (r >= acc && r < acc + w) return items[i]!.item;\r\n    acc += w;\r\n  }\r\n  return items[items.length - 1]!.item;\r\n}\r\n\r\nfunction yardlineText(st: GameState, offenseIsHome: boolean): string {\r\n  const abs = st.ballOn;\r\n  if (offenseIsHome) {\r\n    if (abs <= 50) return `OWN ${Math.max(1, abs)}`;\r\n    return `OPP ${Math.max(1, 100 - abs)}`;\r\n  } else {\r\n    if (abs >= 50) return `OWN ${Math.max(1, 100 - abs)}`;\r\n    return `OPP ${Math.max(1, abs)}`;\r\n  }\r\n}\r\n\r\nexport class PlayCaller {\r\n  private rng: RNG = createLCG(123456789);\r\n  private model = new OpponentModel({ halfLife: 12, alpha: 0.5 });\r\n  private lastOffenseCalls: string[] = [];\r\n  private lastDefenseCalls: string[] = [];\r\n  private personality: PersonalityConfig = {\r\n    aggressiveness_offense: 0.5,\r\n    aggressiveness_defense: 0.5,\r\n    trick_play_rate: 0.02,\r\n    blitz_rate_base: 0.18,\r\n    deception_bias: 0.25,\r\n    tempo_preference: 'normal',\r\n    risk_tolerance_late: 0.6,\r\n  };\r\n\r\n  constructor(private deps: PlayCallerDeps, private playerIsHome: boolean) {}\r\n\r\n  async loadPersonality(cfg?: Partial<PersonalityConfig>): Promise<void> {\r\n    try {\r\n      // Attempt to load JSON config if available at runtime path (bundlers may inline or fail gracefully)\r\n      let fromFile: Partial<PersonalityConfig> = {};\r\n      try {\r\n        const mod: any = await import('./playcaller.config.json').catch(() => null);\r\n        fromFile = (mod && (mod.default || mod)) || {};\r\n      } catch {}\r\n      this.personality = { ...this.personality, ...fromFile } as PersonalityConfig;\r\n    } catch {}\r\n    if (cfg) this.personality = { ...this.personality, ...cfg } as PersonalityConfig;\r\n  }\r\n\r\n  reset(seed: number): void {\r\n    this.rng = createLCG(seed);\r\n    this.model.reset();\r\n    this.lastOffenseCalls = [];\r\n    this.lastDefenseCalls = [];\r\n  }\r\n\r\n  stepDecay(): void {\r\n    this.model.stepDecay();\r\n  }\r\n\r\n  add_observation(pre: GameState, offenseLabel: string, defenseLabel: string): void {\r\n    const offenseIsHome = (pre.possession === 'player') === this.playerIsHome;\r\n    const key = this.model.buildKeyFromState(pre, offenseIsHome);\r\n    this.model.recordOffense(key, categorizeOffenseLabel(offenseLabel));\r\n    this.model.recordDefense(key, categorizeDefenseLabel(defenseLabel));\r\n  }\r\n\r\n  choose_offense_play(state: GameState, deckName: string): OffenseCall {\r\n    const hand = this.deps.getOffenseHand().filter(c => (c.type === 'run' || c.type === 'pass') && isLegal(c.label, this.deps, state, this.playerIsHome));\r\n    const offenseIsHome = (state.possession === 'player') === this.playerIsHome;\r\n    const key = this.model.buildKeyFromState(state, offenseIsHome);\r\n    const predDef = this.model.predictDefense(key);\r\n    const phase = toClockPhase(state.quarter, state.clock);\r\n    const fieldZone = toFieldZone(state.ballOn, offenseIsHome);\r\n\r\n    // Temperature schedule\r\n    const critical = (state.down === 3 && state.toGo >= 6) || state.down === 4 || (state.quarter === 4 && state.clock <= 6 * 60);\r\n    const baseT = this.personality.tempo_preference === 'hurry' ? 0.7 : this.personality.tempo_preference === 'chew' ? 0.5 : 0.6;\r\n    const temp = clamp(baseT * (critical ? 0.6 : 1.0), 0.2, 1.2);\r\n    const epsilon = 0.03;\r\n\r\n    const candidates = hand.map(card => {\r\n      const cat = categorizeOffenseLabel(card.label);\r\n      // Matchup score crude matrix vs predicted defense buckets\r\n      const d = predDef.probs;\r\n      let matchup = 0;\r\n      if (cat === 'run_mid') matchup = (+0.2)*(d.passing + d.prevent + d.prevent_deep) + (-0.3)*(d.goal_line + d.short_yd + d.inside_blitz);\r\n      else if (cat === 'run_edge') matchup = (+0.15)*(d.passing + d.balanced) + (-0.25)*(d.short_yd + d.outside_blitz);\r\n      else if (cat === 'pass_short') matchup = (+0.25)*(d.balanced + d.passing) + (-0.25)*(d.inside_blitz + d.outside_blitz + d.goal_line);\r\n      else if (cat === 'pass_deep') matchup = (+0.35)*d.passing + (-0.5)*(d.prevent + d.prevent_deep);\r\n      else if (cat === 'gadget') matchup = (+0.15)*(1 - d.short_yd) + (-0.2)*d.goal_line;\r\n\r\n      // Context score: field position and down-distance\r\n      let context = 0;\r\n      const short = state.toGo <= 2;\r\n      const long = state.toGo >= 8;\r\n      if (short && (cat === 'run_mid' || cat === 'run_edge' || /keeper|slant|off tackle/i.test(card.label))) context += 0.25;\r\n      if (long && (cat === 'pass_short' || cat === 'pass_deep')) context += 0.2;\r\n      if (fieldZone === 'own_gl' || fieldZone === 'backed') {\r\n        if (cat === 'pass_deep' || cat === 'gadget') context -= 0.3;\r\n      }\r\n      if (fieldZone === 'red' && state.down === 1 && cat === 'run_mid') context += 0.05; // diversify but keep base viable\r\n\r\n      // Anti-repeat penalty\r\n      const recentRepeats = this.lastOffenseCalls.slice(-2).filter(x => x === card.label).length;\r\n      const antiRepeat = recentRepeats >= 2 ? -0.5 : (recentRepeats === 1 ? -0.2 : 0);\r\n\r\n      // Deception: if model is confident (low uncertainty), small boost to off-tendency picks\r\n      const surprise = (1 - predDef.uncertainty) * this.personality.deception_bias * (this.rng() < 0.5 ? 1 : -1) * 0.1;\r\n\r\n      // Risk penalty for deep/gadget when leading late\r\n      const offScore = state.score[(state.possession === 'player') ? 'player' : 'ai'];\r\n      const defScore = state.score[(state.possession === 'player') ? 'ai' : 'player'];\r\n      const leadingLate = (state.quarter === 4 && state.clock <= 5 * 60 && offScore > defScore);\r\n      const riskPenalty = leadingLate && (cat === 'pass_deep' || cat === 'gadget') ? 0.25 : 0;\r\n\r\n      const w_matchup = 0.45;\r\n      const w_context = 0.30;\r\n      const w_var = 0.15;\r\n      const w_deception = 0.10;\r\n      const w_risk = 0.40;\r\n      const util = clamp(w_matchup*matchup + w_context*context + w_var*antiRepeat + w_deception*surprise - w_risk*riskPenalty, -1, 1);\r\n      return { item: { deckName, playLabel: card.label }, util } as { item: OffenseCall; util: number };\r\n    });\r\n\r\n    let chosen: OffenseCall;\r\n    if (this.rng() < epsilon) {\r\n      const idx = Math.floor(this.rng() * Math.max(1, candidates.length));\r\n      chosen = candidates[Math.min(idx, candidates.length - 1)]!.item;\r\n    } else {\r\n      chosen = softmaxPick(this.rng, candidates, temp);\r\n    }\r\n\r\n    // Keep short memory for anti-repeat\r\n    this.lastOffenseCalls.push(chosen.playLabel);\r\n    if (this.lastOffenseCalls.length > 8) this.lastOffenseCalls.shift();\r\n\r\n    // Telemetry (dev mode only)\r\n    try {\r\n      const isDev = (() => {\r\n        try { if (typeof localStorage !== 'undefined') return localStorage.getItem('gs_dev_mode') === '1'; } catch {}\r\n        try { return !!(globalThis as any).GS?.__devMode?.enabled; } catch {}\r\n        return false;\r\n      })();\r\n      if (isDev) {\r\n        const offenseIsHome2 = (state.possession === 'player') === this.playerIsHome;\r\n        const telem = {\r\n          drive: undefined,\r\n          quarter: state.quarter,\r\n          clock: `${String(Math.floor(state.clock/60)).padStart(1,'0')}:${String(state.clock%60).padStart(2,'0')}`,\r\n          score: { us: state.score[(state.possession==='player')?'player':'ai'], them: state.score[(state.possession==='player')?'ai':'player'] },\r\n          down: state.down, to_go: state.toGo, yardline: yardlineText(state, offenseIsHome2),\r\n          phase,\r\n          field_zone: fieldZone,\r\n          opponent_pred: predDef.probs,\r\n          uncertainty: predDef.uncertainty,\r\n          candidates: candidates.map(c => ({ call: c.item.playLabel, utility: Number(c.util.toFixed(3)) })),\r\n          temp, epsilon,\r\n          chosen: chosen.playLabel,\r\n          personality: {\r\n            agg_off: this.personality.aggressiveness_offense,\r\n            deception: this.personality.deception_bias,\r\n            trick_rate: this.personality.trick_play_rate,\r\n          },\r\n        } as const;\r\n        (globalThis as any).GS?.bus?.emit?.('qa:debug', { text: JSON.stringify(telem) });\r\n      }\r\n    } catch {}\r\n\r\n    return chosen;\r\n  }\r\n\r\n  choose_defense_play(state: GameState): DefenseCall {\r\n    const options = this.deps.getDefenseOptions();\r\n    const offenseIsHome = (state.possession === 'player') === this.playerIsHome;\r\n    const key = this.model.buildKeyFromState(state, offenseIsHome);\r\n    const predOff = this.model.predictOffense(key);\r\n    const phase = toClockPhase(state.quarter, state.clock);\r\n    const fieldZone = toFieldZone(state.ballOn, offenseIsHome);\r\n\r\n    // Build utilities\r\n    const candidates = options.map(label => {\r\n      const cat = categorizeDefenseLabel(label);\r\n      const o = predOff.probs;\r\n      let matchup = 0;\r\n      if (cat === 'goal_line' || cat === 'short_yd') matchup = (+0.35)*(o.run_mid + o.run_edge) + (-0.25)*o.pass_deep;\r\n      else if (cat === 'inside_blitz' || cat === 'outside_blitz') matchup = (+0.25)*(o.pass_short) + (-0.25)*o.gadget;\r\n      else if (cat === 'passing') matchup = (+0.35)*(o.pass_short + o.pass_deep) + (-0.2)*(o.run_mid);\r\n      else if (cat === 'prevent_deep') matchup = (+0.5)*o.pass_deep + (-0.35)*(o.run_mid + o.run_edge);\r\n      else if (cat === 'prevent') matchup = (+0.35)*o.pass_deep + (-0.2)*o.run_mid;\r\n      else matchup = (+0.2)*(o.run_mid + o.run_edge + o.pass_short) - 0.05*o.gadget;\r\n\r\n      let context = 0;\r\n      const short = state.toGo <= 2;\r\n      if (short && (cat === 'goal_line' || cat === 'short_yd' || cat === 'inside_blitz')) context += 0.2;\r\n      if (fieldZone === 'red' && (cat === 'goal_line' || cat === 'short_yd')) context += 0.1;\r\n      if (state.quarter === 4 && state.clock <= 2*60 && cat === 'prevent_deep') context += 0.25;\r\n\r\n      const recentRepeats = this.lastDefenseCalls.slice(-2).filter(x => x === label).length;\r\n      const antiRepeat = recentRepeats >= 2 ? -0.4 : (recentRepeats === 1 ? -0.15 : 0);\r\n\r\n      const util = clamp(0.6*matchup + 0.3*context + 0.1*antiRepeat, -1, 1);\r\n      return { item: { label }, util } as { item: DefenseCall; util: number };\r\n    });\r\n\r\n    const critical = (state.down === 3 && state.toGo >= 8) || (state.quarter === 4 && state.clock <= 120);\r\n    const temp = critical ? 0.45 : 0.65;\r\n    const epsilon = 0.02 + 0.1*predOff.uncertainty; // widen when uncertain\r\n\r\n    let chosen: DefenseCall;\r\n    if (this.rng() < epsilon) {\r\n      const idx = Math.floor(this.rng() * Math.max(1, candidates.length));\r\n      chosen = candidates[Math.min(idx, candidates.length - 1)]!.item;\r\n    } else {\r\n      chosen = softmaxPick(this.rng, candidates, temp);\r\n    }\r\n\r\n    this.lastDefenseCalls.push(chosen.label);\r\n    if (this.lastDefenseCalls.length > 8) this.lastDefenseCalls.shift();\r\n\r\n    try {\r\n      const isDev = (() => {\r\n        try { if (typeof localStorage !== 'undefined') return localStorage.getItem('gs_dev_mode') === '1'; } catch {}\r\n        try { return !!(globalThis as any).GS?.__devMode?.enabled; } catch {}\r\n        return false;\r\n      })();\r\n      if (isDev) {\r\n        const offenseIsHome2 = (state.possession === 'player') === this.playerIsHome;\r\n        const telem = {\r\n          quarter: state.quarter,\r\n          clock: `${String(Math.floor(state.clock/60)).padStart(1,'0')}:${String(state.clock%60).padStart(2,'0')}`,\r\n          score: { us: state.score[(state.possession==='player')?'player':'ai'], them: state.score[(state.possession==='player')?'ai':'player'] },\r\n          down: state.down, to_go: state.toGo, yardline: yardlineText(state, offenseIsHome2),\r\n          phase,\r\n          field_zone: fieldZone,\r\n          opponent_pred: predOff.probs,\r\n          uncertainty: predOff.uncertainty,\r\n          candidates: candidates.map(c => ({ call: c.item.label, utility: Number(c.util.toFixed(3)) })),\r\n          temp, epsilon,\r\n          chosen: chosen.label,\r\n          personality: { agg_def: this.personality.aggressiveness_defense },\r\n        } as const;\r\n        (globalThis as any).GS?.bus?.emit?.('qa:debug', { text: JSON.stringify(telem) });\r\n      }\r\n    } catch {}\r\n\r\n    return chosen;\r\n  }\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\nimport type { Outcome, PenaltyInfo } from './ResultParsing';\r\nimport { DEFAULT_TIME_KEEPING } from './ResultParsing';\r\n\r\nexport interface PenaltyContext {\r\n  prePlayState: GameState; // state at snap\r\n  postPlayState: GameState; // state after play, before penalty\r\n  offenseGainedYards: number; // signed yards from snap relative to offense direction (0 if non-yardage)\r\n  outcome: Outcome; // contains penalty info, category, outOfBounds, etc.\r\n  inTwoMinute: boolean; // true if two-minute rules active\r\n  wasFirstDownOnPlay: boolean; // true if play gained/converted independent of penalty\r\n}\r\n\r\nexport interface AdminResult {\r\n  accepted: GameState;\r\n  declined: GameState;\r\n  decisionHint: 'accept' | 'decline' | 'neutral';\r\n  adminMeta: {\r\n    automaticFirstDownApplied: boolean;\r\n    halfDistanceCapped: boolean;\r\n    measuredFromMidfieldForLG: boolean;\r\n    spotBasis: 'previous' | 'spot-of-foul' | 'midfield';\r\n    untimedDownScheduled: boolean;\r\n  };\r\n}\r\n\r\nfunction clampBallOn(v: number): number {\r\n  return Math.max(0, Math.min(100, v));\r\n}\r\n\r\nfunction yardsTowardsOffense(pre: GameState, yards: number): number {\r\n  return pre.possession === 'player' ? yards : -yards;\r\n}\r\n\r\nfunction applyFromAbsolute(prevAbs: number, yardsTowardsOff: number): number {\r\n  return clampBallOn(prevAbs + yardsTowardsOff);\r\n}\r\n\r\nfunction distanceToOffenseGoal(pre: GameState, ballOnAbs: number): number {\r\n  // Distance from current spot to offense goal line along offense direction\r\n  return pre.possession === 'player' ? (100 - ballOnAbs) : ballOnAbs;\r\n}\r\n\r\nfunction distanceToDefenseGoal(pre: GameState, ballOnAbs: number): number {\r\n  // Distance from current spot to defense goal line (opposite of offense goal)\r\n  return pre.possession === 'player' ? ballOnAbs : (100 - ballOnAbs);\r\n}\r\n\r\nfunction capHalfDistance(amount: number, capDistance: number): { applied: number; capped: boolean } {\r\n  const cap = Math.floor(capDistance / 2);\r\n  if (amount > cap) return { applied: cap, capped: true };\r\n  return { applied: amount, capped: false };\r\n}\r\n\r\nfunction recomputeDownAndDistance(pre: GameState, newBallOn: number, resetFirstDown: boolean): { down: number; toGo: number } {\r\n  if (resetFirstDown) {\r\n    const yardsToGoal = pre.possession === 'player' ? (100 - newBallOn) : newBallOn;\r\n    const toGo = Math.min(10, yardsToGoal);\r\n    return { down: 1, toGo };\r\n  }\r\n  // No reset: repeat down on accepted penalty administered from previous spot\r\n  // (Standard scrimmage penalties replay the down)\r\n  const yardsToGoal = pre.possession === 'player' ? (100 - newBallOn) : newBallOn;\r\n  const lineToGainRemaining = Math.min(10, yardsToGoal); // assume fresh series retained at pre snap\r\n  return { down: Math.max(1, pre.down), toGo: Math.max(1, lineToGainRemaining) };\r\n}\r\n\r\nfunction isLongGain(outcome: Outcome): boolean {\r\n  if (!outcome) return false;\r\n  if (outcome.raw && /\\bLG\\b/i.test(outcome.raw)) return true;\r\n  return false;\r\n}\r\n\r\nfunction computeTimeOff(inTwoMinute: boolean, untimed: boolean): number {\r\n  if (untimed) return 0;\r\n  // Use penalty time from defaults\r\n  return DEFAULT_TIME_KEEPING.penalty;\r\n}\r\n\r\nfunction makeBase(state: GameState): GameState {\r\n  return { ...state, score: { ...state.score } };\r\n}\r\n\r\nfunction marchPenalty(pre: GameState, basisAbs: number, pen: PenaltyInfo, lgMidfield: boolean): { ballOn: number; capped: boolean; spotBasis: 'previous' | 'midfield' } {\r\n  const measuredFromMidfieldForLG = lgMidfield && pen.on === 'defense';\r\n  const spotBasis: 'previous' | 'midfield' = measuredFromMidfieldForLG ? 'midfield' : 'previous';\r\n  const startAbs = measuredFromMidfieldForLG ? 50 : basisAbs;\r\n  if (pen.on === 'defense') {\r\n    // March towards offense goal line; cap at half distance to offense goal from start\r\n    const distToGoal = distanceToOffenseGoal(pre, startAbs);\r\n    const { applied, capped } = capHalfDistance(pen.yards, distToGoal);\r\n    const newAbs = applyFromAbsolute(startAbs, yardsTowardsOffense(pre, applied));\r\n    return { ballOn: newAbs, capped, spotBasis };\r\n  } else {\r\n    // Against offense: march away from offense goal (towards defense goal) from previous spot\r\n    const distToDefGoal = distanceToDefenseGoal(pre, startAbs);\r\n    const { applied, capped } = capHalfDistance(pen.yards, distToDefGoal);\r\n    const newAbs = applyFromAbsolute(startAbs, yardsTowardsOffense(pre, -applied));\r\n    return { ballOn: newAbs, capped, spotBasis };\r\n  }\r\n}\r\n\r\nexport function administerPenalty(ctx: PenaltyContext): AdminResult {\r\n  const { prePlayState: pre, postPlayState: post, outcome, inTwoMinute } = ctx;\r\n  const pen = outcome.penalty!;\r\n  const lg = isLongGain(outcome);\r\n  const measuredFromMidfieldForLG = lg && pen.on === 'defense';\r\n\r\n  // Declined always keeps post-play state and normal clock off already applied later by caller\r\n  const declined = makeBase(post);\r\n\r\n  // Accepted: administered from previous spot by default, special LG from midfield\r\n  const march = marchPenalty(pre, pre.ballOn, pen, measuredFromMidfieldForLG);\r\n  const autoFD = !!pen.firstDown && pen.on === 'defense';\r\n  const dd = recomputeDownAndDistance(pre, march.ballOn, autoFD);\r\n\r\n  const acceptedBase: GameState = makeBase(pre);\r\n  let accepted: GameState = { ...acceptedBase, ballOn: march.ballOn, down: dd.down, toGo: dd.toGo };\r\n\r\n  // Timekeeping & untimed down rule: defensive penalty at 0:00 in regulation → untimed down\r\n  const isRegulation = pre.quarter <= 4;\r\n  const atZero = pre.clock === 0 || accepted.clock === 0;\r\n  const defensive = pen.on === 'defense';\r\n  const untimedDownScheduled = defensive && isRegulation && atZero;\r\n  const timeOff = computeTimeOff(inTwoMinute, untimedDownScheduled);\r\n  accepted.clock = Math.max(0, pre.clock - timeOff);\r\n\r\n  const adminMeta = {\r\n    automaticFirstDownApplied: autoFD,\r\n    halfDistanceCapped: march.capped,\r\n    measuredFromMidfieldForLG,\r\n    spotBasis: march.spotBasis,\r\n    untimedDownScheduled,\r\n  } as const;\r\n\r\n  // Decision heuristic\r\n  function valueOf(st: GameState): number {\r\n    // Higher is better for offense: consider yards gained towards offense goal and down/toGo\r\n    const yardsToOffGoal = distanceToOffenseGoal(pre, st.ballOn);\r\n    const yardsAdv = -(yardsToOffGoal) + distanceToOffenseGoal(pre, pre.ballOn);\r\n    const downValue = st.down === 1 ? 5 : (st.down === 2 ? 2 : (st.down === 3 ? 0 : -3));\r\n    const toGoValue = Math.max(0, 10 - st.toGo) * 0.2;\r\n    return yardsAdv + downValue + toGoValue;\r\n  }\r\n  const vAccept = valueOf(accepted);\r\n  const vDecline = valueOf(declined);\r\n  let decisionHint: 'accept' | 'decline' | 'neutral' = 'neutral';\r\n  if (vAccept > vDecline + 0.5) decisionHint = 'accept';\r\n  else if (vDecline > vAccept + 0.5) decisionHint = 'decline';\r\n\r\n  return { accepted, declined, decisionHint, adminMeta };\r\n}\r\n\r\n\r\n","export interface SpotContext {\r\n  ballOn: number; // 0..100, HOME perspective\r\n  possessing: 'player' | 'ai';\r\n}\r\n\r\nfunction clampYard(n: number): number {\r\n  return Math.max(0, Math.min(100, Math.round(n)));\r\n}\r\n\r\nexport function isInEndZone(absYard: number): boolean {\r\n  return absYard === 0 || absYard === 100;\r\n}\r\n\r\nexport function isThroughEndZone(absYard: number): boolean {\r\n  return absYard < 0 || absYard > 100;\r\n}\r\n\r\nexport function touchbackSpot(forReceiving: 'player' | 'ai'): number {\r\n  return forReceiving === 'player' ? 20 : 80;\r\n}\r\n\r\nexport function interceptionTouchback(ctx: SpotContext): { ballOn: number; possession: 'player' | 'ai' } {\r\n  const ballOn = touchbackSpot(ctx.possessing);\r\n  return { ballOn, possession: ctx.possessing };\r\n}\r\n\r\nexport function kickoffTouchback(forReceiving: 'player' | 'ai'): { ballOn: number; possession: 'player' | 'ai' } {\r\n  return { ballOn: touchbackSpot(forReceiving), possession: forReceiving };\r\n}\r\n\r\nexport function puntTouchback(forReceiving: 'player' | 'ai'): { ballOn: number; possession: 'player' | 'ai' } {\r\n  return { ballOn: touchbackSpot(forReceiving), possession: forReceiving };\r\n}\r\n\r\n// Apply “spot of kick or 20”: if the kick spot is beyond the 20 (closer to opponent),\r\n// take over at the spot; otherwise take at the 20.\r\nexport function missedFieldGoalSpot(state: SpotContext, attemptYards: number): { ballOn: number; possession: 'player' | 'ai' } {\r\n  const receiving: 'player' | 'ai' = state.possessing === 'player' ? 'ai' : 'player';\r\n  const spotOfKickAbs = clampYard(state.possessing === 'player' ? state.ballOn - 7 : state.ballOn + 7);\r\n  // Apply spot-of-kick or 20: for HOME (player) receiving, take max(20, spot); for AWAY (ai) receiving, take min(80, spot)\r\n  let newAbs: number;\r\n  if (receiving === 'player') newAbs = Math.max(20, spotOfKickAbs);\r\n  else newAbs = Math.min(80, spotOfKickAbs);\r\n  return { ballOn: clampYard(newAbs), possession: receiving };\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\nimport type { RNG } from '../sim/RNG';\r\nimport { determineOutcomeFromCharts, getTelemetryCollector } from './Charts';\r\nimport type { Outcome } from './ResultParsing';\r\n// import { parseResultString } from './ResultParsing';\r\nimport { timeOffWithTwoMinute } from './Timekeeping';\r\nimport { administerPenalty } from './PenaltyAdmin';\r\nimport { isInEndZone, isThroughEndZone, interceptionTouchback } from './Spots';\r\nimport type { OffenseCharts } from '../data/schemas/OffenseCharts';\r\n\r\nexport interface ResolveInput {\r\n  state: GameState;\r\n  charts: OffenseCharts;\r\n  deckName: string;\r\n  playLabel: string;\r\n  defenseLabel: string;\r\n  rng: RNG;\r\n}\r\n\r\nexport interface ResolveResult {\r\n  state: GameState;\r\n  outcome: Outcome;\r\n  touchdown: boolean;\r\n  safety: boolean;\r\n  possessionChanged: boolean;\r\n}\r\n\r\nexport function applyYards(state: GameState, yards: number): GameState {\r\n  const next = { ...state };\r\n  if (state.possession === 'player') next.ballOn = Math.max(0, Math.min(100, state.ballOn + yards));\r\n  else next.ballOn = Math.max(0, Math.min(100, state.ballOn - yards));\r\n  return next;\r\n}\r\n\r\nfunction handleScoring(state: GameState): { state: GameState; touchdown: boolean; safety: boolean } {\r\n  const next = { ...state, score: { ...state.score } };\r\n  let touchdown = false;\r\n  let safety = false;\r\n  if (state.possession === 'player') {\r\n    if (state.ballOn >= 100) { next.score.player += 6; touchdown = true; }\r\n    if (state.ballOn <= 0) { next.score.ai += 2; safety = true; }\r\n  } else {\r\n    if (state.ballOn <= 0) { next.score.ai += 6; touchdown = true; }\r\n    if (state.ballOn >= 100) { next.score.player += 2; safety = true; }\r\n  }\r\n  return { state: next, touchdown, safety };\r\n}\r\n\r\nexport function resolvePlayCore(input: ResolveInput): ResolveResult {\r\n  let { state } = input;\r\n\r\n  // Capture game state before play resolution for telemetry\r\n  const gameStateBefore = {\r\n    quarter: state.quarter,\r\n    clock: state.clock,\r\n    down: state.down,\r\n    toGo: state.toGo,\r\n    ballOn: state.ballOn,\r\n    possession: state.possession,\r\n    score: { ...state.score }\r\n  };\r\n\r\n  const outcome = determineOutcomeFromCharts({\r\n    deckName: input.deckName,\r\n    playLabel: input.playLabel,\r\n    defenseLabel: input.defenseLabel,\r\n    charts: input.charts,\r\n    rng: input.rng,\r\n  });\r\n  // Penalty administration\r\n  if (outcome.category === 'penalty' && outcome.penalty) {\r\n    const pre = state;\r\n    // In penalty path, the post-play equals pre because we short-circuit before applying yards\r\n    const post = state;\r\n    const offenseGainedYards = 0;\r\n    const wasFirstDownOnPlay = false;\r\n    const admin = administerPenalty({\r\n      prePlayState: pre,\r\n      postPlayState: post,\r\n      offenseGainedYards,\r\n      outcome,\r\n      inTwoMinute: false,\r\n      wasFirstDownOnPlay,\r\n    });\r\n    const next = admin.decisionHint === 'decline' ? admin.declined : admin.accepted;\r\n    return { state: next, outcome, touchdown: false, safety: false, possessionChanged: false };\r\n  }\r\n  // Apply yards or category effects\r\n  let next = { ...state };\r\n  let possessionChanged = false;\r\n  if (outcome.category === 'gain' || outcome.category === 'loss') {\r\n    next = applyYards(state, outcome.yards);\r\n  } else if (outcome.category === 'incomplete') {\r\n    // no yard change\r\n  } else if (outcome.category === 'interception') {\r\n    // Flip possession and apply return yards relative to new offense direction\r\n    next.possession = state.possession === 'player' ? 'ai' : 'player';\r\n    possessionChanged = true;\r\n    // Spot at current LOS, then apply return towards new offense goal\r\n    const ret = outcome.interceptReturn || 0;\r\n    if (next.possession === 'player') next.ballOn = Math.max(0, Math.min(100, state.ballOn + ret));\r\n    else next.ballOn = Math.max(0, Math.min(100, state.ballOn - ret));\r\n    // End-zone handling after interception return movement\r\n    if (isThroughEndZone(next.ballOn)) {\r\n      const tb = interceptionTouchback({ ballOn: next.ballOn, possessing: next.possession });\r\n      next.ballOn = tb.ballOn;\r\n    } else if (isInEndZone(next.ballOn)) {\r\n      // By legacy behavior: touchback if downed in end zone; TD only if return legitimately crosses opposite goal in-bounds\r\n      const tb = interceptionTouchback({ ballOn: next.ballOn, possessing: next.possession });\r\n      next.ballOn = tb.ballOn;\r\n    }\r\n    // Reset downs\r\n    next.down = 1; next.toGo = 10;\r\n  } else if (outcome.category === 'fumble') {\r\n    // Simple turnover with no return\r\n    next.possession = state.possession === 'player' ? 'ai' : 'player';\r\n    possessionChanged = true;\r\n    next.down = 1; next.toGo = 10;\r\n  }\r\n  // First down logic only if we didn't already reset downs due to turnover\r\n  if (!possessionChanged && (outcome.category === 'gain' || outcome.category === 'loss')) {\r\n    const gained = Math.abs(outcome.yards);\r\n    const madeLine = gained >= state.toGo && outcome.yards > 0;\r\n    if (madeLine) {\r\n      next.down = 1;\r\n      next.toGo = 10;\r\n    } else {\r\n      next.down = Math.min(4, state.down + 1);\r\n      next.toGo = Math.max(1, madeLine ? 10 : state.toGo - Math.max(0, outcome.yards));\r\n    }\r\n  } else if (!possessionChanged && outcome.category === 'incomplete') {\r\n    next.down = Math.min(4, state.down + 1);\r\n  }\r\n  // Timekeeping\r\n  const wasFirstDown = !possessionChanged && (outcome.category === 'gain' && outcome.yards > 0 && outcome.yards >= state.toGo);\r\n  const timeOff = timeOffWithTwoMinute(outcome, false /* caller should pass real two-minute later */, wasFirstDown);\r\n  next.clock = Math.max(0, state.clock - timeOff);\r\n\r\n  // Capture game state after play resolution for telemetry\r\n  const gameStateAfter = {\r\n    quarter: next.quarter,\r\n    clock: next.clock,\r\n    down: next.down,\r\n    toGo: next.toGo,\r\n    ballOn: next.ballOn,\r\n    possession: next.possession,\r\n    score: { ...next.score }\r\n  };\r\n\r\n  // Scoring check\r\n  const scoreRes = handleScoring(next);\r\n  next = scoreRes.state;\r\n\r\n  // Update gameStateAfter with final state after scoring\r\n  gameStateAfter.quarter = next.quarter;\r\n  gameStateAfter.score.player = next.score.player;\r\n  gameStateAfter.score.ai = next.score.ai;\r\n\r\n  // Record telemetry events if collector is available\r\n  const telemetryCollector = getTelemetryCollector();\r\n  if (telemetryCollector) {\r\n    // Record play resolution event\r\n    telemetryCollector.recordPlayResolved({\r\n      playLabel: input.playLabel,\r\n      defenseLabel: input.defenseLabel,\r\n      deckName: input.deckName,\r\n      gameStateBefore,\r\n      gameStateAfter,\r\n      outcome: {\r\n        category: outcome.category || 'other',\r\n        yards: outcome.yards,\r\n        touchdown: scoreRes.touchdown,\r\n        safety: scoreRes.safety,\r\n        possessionChanged\r\n      }\r\n    });\r\n\r\n    // Record game state change if state changed significantly\r\n    if (gameStateBefore.ballOn !== gameStateAfter.ballOn ||\r\n        gameStateBefore.down !== gameStateAfter.down ||\r\n        gameStateBefore.possession !== gameStateAfter.possession) {\r\n      telemetryCollector.recordGameStateChange({\r\n        changeType: 'field_position',\r\n        oldState: gameStateBefore,\r\n        newState: gameStateAfter,\r\n        reason: 'play_resolution'\r\n      });\r\n    }\r\n\r\n    // Record time update\r\n    if (gameStateBefore.clock !== gameStateAfter.clock) {\r\n      telemetryCollector.recordTimeUpdate({\r\n        clockBefore: gameStateBefore.clock,\r\n        clockAfter: gameStateAfter.clock,\r\n        timeElapsed: gameStateBefore.clock - gameStateAfter.clock,\r\n        quarter: gameStateBefore.quarter,\r\n        reason: 'play_resolution'\r\n      });\r\n    }\r\n\r\n    // Record possession change if possession changed\r\n    if (possessionChanged && gameStateBefore.possession !== gameStateAfter.possession) {\r\n      telemetryCollector.recordPossessionChange({\r\n        possessionBefore: gameStateBefore.possession,\r\n        possessionAfter: gameStateAfter.possession,\r\n        reason: 'turnover',\r\n        spot: gameStateAfter.ballOn,\r\n        down: gameStateAfter.down,\r\n        toGo: gameStateAfter.toGo\r\n      });\r\n    }\r\n\r\n    // Record scoring event if touchdown or safety\r\n    if (scoreRes.touchdown || scoreRes.safety) {\r\n      const scoringTeam = scoreRes.touchdown ?\r\n        (gameStateBefore.possession === 'player' ? 'player' : 'ai') :\r\n        (gameStateBefore.possession === 'player' ? 'ai' : 'player');\r\n\r\n      telemetryCollector.recordScoringEvent({\r\n        scoringTeam,\r\n        points: scoreRes.touchdown ? 6 : 2,\r\n        scoreType: scoreRes.touchdown ? 'TD' : 'Safety',\r\n        gameStateBefore,\r\n        gameStateAfter\r\n      });\r\n    }\r\n  }\r\n\r\n  return { state: next, outcome, touchdown: scoreRes.touchdown, safety: scoreRes.safety, possessionChanged };\r\n}\r\n","/**\r\n * Feature flag system for controlling engine selection and other experimental features\r\n */\r\n\r\nexport type EngineType = 'deterministic' | 'dice';\r\n\r\nexport interface FeatureFlags {\r\n  // Engine selection\r\n  engine: EngineType;\r\n\r\n  // New engine features\r\n  NEW_ENGINE_V1: boolean;\r\n\r\n  // Additional flags can be added here as needed\r\n  [key: string]: boolean | string | number;\r\n}\r\n\r\n/**\r\n * Default feature flag configuration\r\n */\r\nconst DEFAULT_FLAGS: FeatureFlags = {\r\n  engine: 'deterministic', // Default to deterministic for safety\r\n  NEW_ENGINE_V1: true, // Enable new dice engine by default in dev\r\n};\r\n\r\n/**\r\n * Get feature flag value from localStorage, then environment, then default\r\n */\r\nexport function getFeatureFlag<T extends keyof FeatureFlags>(key: T): FeatureFlags[T] {\r\n  // Check environment variables first (for CI/deployment control)\r\n  // Note: process is only available in Node.js, not in browsers\r\n  const envKey = `GRIDIRON_${String(key).toUpperCase()}`;\r\n  const envValue = (typeof process !== 'undefined' && process.env) ? process.env[envKey] : undefined;\r\n\r\n  if (envValue !== undefined) {\r\n    if (key === 'engine') {\r\n      return (envValue === 'dice' ? 'dice' : 'deterministic') as FeatureFlags[T];\r\n    }\r\n    if (typeof DEFAULT_FLAGS[key] === 'boolean') {\r\n      return (envValue.toLowerCase() === 'true') as FeatureFlags[T];\r\n    }\r\n    return envValue as FeatureFlags[T];\r\n  }\r\n\r\n  // Check localStorage (for user preference)\r\n  try {\r\n    const stored = localStorage.getItem(`gridiron_feature_${key}`);\r\n    if (stored !== null) {\r\n      if (key === 'engine') {\r\n        return (stored === 'dice' ? 'dice' : 'deterministic') as FeatureFlags[T];\r\n      }\r\n      if (typeof DEFAULT_FLAGS[key] === 'boolean') {\r\n        return (stored === 'true') as FeatureFlags[T];\r\n      }\r\n      return stored as FeatureFlags[T];\r\n    }\r\n  } catch (error) {\r\n    // localStorage not available, fall back to default\r\n    console.warn('localStorage not available, using default feature flags');\r\n  }\r\n\r\n  return DEFAULT_FLAGS[key];\r\n}\r\n\r\n/**\r\n * Set feature flag value in localStorage\r\n */\r\nexport function setFeatureFlag<T extends keyof FeatureFlags>(key: T, value: FeatureFlags[T]): void {\r\n  try {\r\n    if (key === 'engine') {\r\n      localStorage.setItem(`gridiron_feature_${key}`, value as string);\r\n    } else if (typeof value === 'boolean') {\r\n      localStorage.setItem(`gridiron_feature_${key}`, value.toString());\r\n    } else {\r\n      localStorage.setItem(`gridiron_feature_${key}`, String(value));\r\n    }\r\n  } catch (error) {\r\n    console.warn('Failed to save feature flag to localStorage:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Get current feature flags configuration\r\n */\r\nexport function getFeatureFlags(): FeatureFlags {\r\n  const flags: FeatureFlags = { ...DEFAULT_FLAGS };\r\n\r\n  for (const key of Object.keys(DEFAULT_FLAGS) as Array<keyof FeatureFlags>) {\r\n    flags[key] = getFeatureFlag(key);\r\n  }\r\n\r\n  return flags;\r\n}\r\n\r\n/**\r\n * Check if a feature flag is enabled\r\n */\r\nexport function isFeatureEnabled(flag: keyof FeatureFlags): boolean {\r\n  const value = getFeatureFlag(flag);\r\n  return typeof value === 'boolean' ? value : false;\r\n}\r\n\r\n/**\r\n * Get the current engine type\r\n */\r\nexport function getCurrentEngine(): EngineType {\r\n  return getFeatureFlag('engine');\r\n}\r\n\r\n/**\r\n * Get information about the current engine\r\n */\r\nexport function getCurrentEngineInfo(): { type: EngineType; name: string; description: string } {\r\n  const type = getCurrentEngine();\r\n\r\n  const info = {\r\n    deterministic: {\r\n      name: 'Deterministic Engine',\r\n      description: 'Legacy card-based resolution system'\r\n    },\r\n    dice: {\r\n      name: 'Dice Engine',\r\n      description: 'New 2d20 dice-based resolution system'\r\n    }\r\n  };\r\n\r\n  return {\r\n    type,\r\n    ...info[type]\r\n  };\r\n}\r\n\r\n/**\r\n * Set the engine type\r\n */\r\nexport function setEngine(engine: EngineType): void {\r\n  setFeatureFlag('engine', engine);\r\n}\r\n\r\n/**\r\n * Check if new dice engine is enabled\r\n */\r\nexport function isNewEngineEnabled(): boolean {\r\n  return isFeatureEnabled('NEW_ENGINE_V1') && getCurrentEngine() === 'dice';\r\n}\r\n\r\n/**\r\n * Reset all feature flags to defaults\r\n */\r\nexport function resetFeatureFlags(): void {\r\n  try {\r\n    const keys = Object.keys(DEFAULT_FLAGS);\r\n    for (const key of keys) {\r\n      localStorage.removeItem(`gridiron_feature_${key}`);\r\n    }\r\n  } catch (error) {\r\n    console.warn('Failed to reset feature flags:', error);\r\n  }\r\n}\r\n","export type DeckName = 'Pro Style'|'Ball Control'|'Aerial Style';\r\nexport type CardType = 'run'|'pass'|'punt'|'field-goal';\r\n\r\nexport interface OffenseCardDef {\r\n\tid: string;\r\n\tdeck: DeckName;\r\n\tlabel: string;\r\n\ttype: CardType;\r\n\tart: string;\r\n}\r\n\r\nexport interface DefenseCardDef {\r\n\tid: string;\r\n\tlabel:\r\n\t\t| 'Goal Line'|'Short Yardage'|'Inside Blitz'|'Running'|'Run & Pass'\r\n\t\t| 'Pass & Run'|'Passing'|'Outside Blitz'|'Prevent'|'Prevent Deep';\r\n}\r\n\r\nconst LABEL_TO_CHART_KEY_LOCAL: Record<string, string> = {\r\n\t'Sideline Pass': 'Side Line Pass',\r\n\t'Run & Pass Option': 'Run/Pass Option',\r\n};\r\n\r\nconst OFFENSE_BASE_LABELS: readonly string[] = [\r\n\t'Power Up Middle',\r\n\t'Power Off Tackle',\r\n\t'QB Keeper',\r\n\t'Slant Run',\r\n\t'End Run',\r\n\t'Reverse',\r\n\t'Draw',\r\n\t'Trap',\r\n\t'Run & Pass Option',\r\n\t'Flair Pass',\r\n\t'Sideline Pass',\r\n\t'Look In Pass',\r\n\t'Screen Pass',\r\n\t'Pop Pass',\r\n\t'Button Hook Pass',\r\n\t'Razzle Dazzle',\r\n\t'Down & Out Pass',\r\n\t'Down & In Pass',\r\n\t'Long Bomb',\r\n\t'Stop & Go Pass',\r\n] as const;\r\n\r\nfunction makeCardId(deck: DeckName, label: string): string {\r\n\tconst deckKey = deck.replace(/\\s+/g, '_');\r\n\tconst labelKey = label\r\n\t\t.replace(/\\s+/g, '')\r\n\t\t.replace(/[()&]/g, '')\r\n\t\t.replace(/\\/+/, '');\r\n\treturn `${deckKey}_${labelKey}`;\r\n}\r\n\r\nfunction makeArtPath(deck: DeckName, label: string): string {\r\n\treturn `assets/cards/${deck}/${label}.jpg`;\r\n}\r\n\r\nfunction inferTypeFromLabel(label: string): CardType {\r\n\tif (label.startsWith('Punt')) return 'punt';\r\n\tconst lowered = label.toLowerCase();\r\n\tif (lowered.includes('pass')) return 'pass';\r\n\tif (['Run & Pass Option'].includes(label)) return 'run';\r\n\treturn 'run';\r\n}\r\n\r\nfunction buildOffenseDeck(deck: DeckName): OffenseCardDef[] {\r\n\t// Base 20 offense plays\r\n\tconst base: OffenseCardDef[] = OFFENSE_BASE_LABELS.map((label) => ({\r\n\t\tid: makeCardId(deck, label),\r\n\t\tdeck,\r\n\t\tlabel,\r\n\t\ttype: inferTypeFromLabel(label),\r\n\t\tart: makeArtPath(deck, label),\r\n\t}));\r\n\t// Include one 4th-down-only punt card per deck\r\n\tconst puntLabel = 'Punt (4th Down Only)';\r\n\tconst punt: OffenseCardDef = {\r\n\t\tid: makeCardId(deck, puntLabel),\r\n\t\tdeck,\r\n\t\tlabel: puntLabel,\r\n\t\ttype: 'punt',\r\n\t\tart: makeArtPath(deck, puntLabel),\r\n\t};\r\n\t// Exclude Field Goal from deck (handled by controls elsewhere)\r\n\t// Ensure final count is exactly 20 by removing one duplicate-type label if needed\r\n\t// The base list already has 20. Replace one low-importance card with Punt to keep 20.\r\n\tconst filtered = base.filter((c) => c.label !== 'Trap');\r\n\treturn [...filtered, punt];\r\n}\r\n\r\nexport const OFFENSE_DECKS: Record<DeckName, OffenseCardDef[]> = {\r\n\t'Pro Style': buildOffenseDeck('Pro Style'),\r\n\t'Ball Control': buildOffenseDeck('Ball Control'),\r\n\t'Aerial Style': buildOffenseDeck('Aerial Style'),\r\n};\r\n\r\nexport const DEFENSE_DECK: DefenseCardDef[] = [\r\n\t{ id: 'Defense_GoalLine', label: 'Goal Line' },\r\n\t{ id: 'Defense_ShortYardage', label: 'Short Yardage' },\r\n\t{ id: 'Defense_InsideBlitz', label: 'Inside Blitz' },\r\n\t{ id: 'Defense_Running', label: 'Running' },\r\n\t{ id: 'Defense_RunAndPass', label: 'Run & Pass' },\r\n\t{ id: 'Defense_PassAndRun', label: 'Pass & Run' },\r\n\t{ id: 'Defense_Passing', label: 'Passing' },\r\n\t{ id: 'Defense_OutsideBlitz', label: 'Outside Blitz' },\r\n\t{ id: 'Defense_Prevent', label: 'Prevent' },\r\n\t{ id: 'Defense_PreventDeep', label: 'Prevent Deep' },\r\n];\r\n\r\n// White-sign (goal-line) restrictions; populate known restricted plays\r\n// Keyed by play label, value is max distance (yards to opponent goal) where play is restricted\r\nexport const WHITE_SIGN_RESTRICTIONS: Record<string, number> = {\r\n\t// Example restrictions; tune when canonical list available\r\n\t'Long Bomb': 5,\r\n\t'Run & Pass Option': 2,\r\n\t'Razzle Dazzle': 5,\r\n\t'Stop & Go Pass': 5,\r\n};\r\n\r\n// Utility for tests: ensure labels align via LABEL_TO_CHART_KEY elsewhere\r\nexport const __LABEL_MAP = LABEL_TO_CHART_KEY_LOCAL;\r\n","import { getCurrentEngine, getFeatureFlags, type EngineType } from './FeatureFlags';\r\nimport type { GameState } from '../domain/GameState';\r\nimport type { RNG } from '../sim/RNG';\r\nimport { OFFENSE_DECKS, DEFENSE_DECK, type DeckName } from '../data/decks';\r\n\r\n/**\r\n * Engine interface for consistent API across different resolution engines\r\n */\r\nexport interface Engine {\r\n  initialize(): Promise<void>;\r\n  resolvePlay(\r\n    offCardId: string,\r\n    defCardId: string,\r\n    state: GameState,\r\n    rng: RNG\r\n  ): ResolveResult;\r\n}\r\n\r\n/**\r\n * Result type for engine resolution\r\n */\r\nexport interface ResolveResult {\r\n  yards: number;\r\n  turnover?: boolean | { type: 'INT' | 'FUM'; return_yards?: number; return_to?: 'LOS' };\r\n  clock?: '10' | '20' | '30';\r\n  tags?: string[];\r\n  doubles?: { kind: 'DEF_TD' | 'OFF_TD' | 'PENALTY' };\r\n  penalty?: {\r\n    side: 'offense' | 'defense' | 'offset';\r\n    yards?: number;\r\n    auto_first_down?: boolean;\r\n    loss_of_down?: boolean;\r\n    replay_down?: boolean;\r\n    override_play_result?: boolean;\r\n    label: string;\r\n  };\r\n  options?: { can_accept_decline: boolean };\r\n}\r\n\r\n/**\r\n * Deterministic engine (legacy system using card charts)\r\n */\r\nclass DeterministicEngine implements Engine {\r\n  private offenseCharts: any = null;\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.offenseCharts) return;\r\n\r\n    try {\r\n      // Load offense charts for deterministic resolution\r\n      const { fetchOffenseCharts } = await import('../data/loaders/offenseCharts');\r\n      const chartsResult = await fetchOffenseCharts();\r\n      if (chartsResult.ok) {\r\n        this.offenseCharts = chartsResult.data;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load offense charts for deterministic engine:', error);\r\n    }\r\n  }\r\n\r\n  resolvePlay(\r\n    offCardId: string,\r\n    defCardId: string,\r\n    state: GameState,\r\n    rng: RNG\r\n  ): ResolveResult {\r\n    // Map card IDs to play labels for deterministic resolution\r\n    const offenseCard = this.findOffenseCard(offCardId);\r\n    const defenseCard = this.findDefenseCard(defCardId);\r\n\r\n    if (!offenseCard) {\r\n      console.warn(`Unknown offense card ID: ${offCardId}`);\r\n      return { yards: 0, clock: '30' };\r\n    }\r\n\r\n    if (!defenseCard) {\r\n      console.warn(`Unknown defense card ID: ${defCardId}`);\r\n      return { yards: 0, clock: '30' };\r\n    }\r\n\r\n    // Use the existing resolvePlayCore function if charts are available\r\n    if (this.offenseCharts) {\r\n      try {\r\n        const { resolvePlayCore } = require('../rules/ResolvePlayCore');\r\n        const result = resolvePlayCore({\r\n          state,\r\n          charts: this.offenseCharts,\r\n          deckName: offenseCard.deck,\r\n          playLabel: offenseCard.label,\r\n          defenseLabel: defenseCard.label,\r\n          rng\r\n        });\r\n\r\n        // Convert the result to our ResolveResult format\r\n        return this.convertDeterministicResult(result, offenseCard.label, defenseCard.label);\r\n      } catch (error) {\r\n        console.warn('Failed to use resolvePlayCore, falling back to stub:', error);\r\n      }\r\n    }\r\n\r\n    // Fallback stub result\r\n    return {\r\n      yards: 0,\r\n      clock: '30'\r\n    };\r\n  }\r\n\r\n  private convertDeterministicResult(result: any, playLabel: string, defenseLabel: string): ResolveResult {\r\n    // Convert the existing result format to our unified ResolveResult format\r\n    // This is a placeholder - we'd need to properly map all the fields\r\n    return {\r\n      yards: result.outcome?.yards || 0,\r\n      turnover: result.outcome?.category === 'interception' || result.outcome?.category === 'fumble',\r\n      clock: '30' as const, // TODO: Map from result.outcome properly\r\n      tags: [playLabel, defenseLabel]\r\n    };\r\n  }\r\n\r\n  private findOffenseCard(cardId: string) {\r\n    for (const deckName of ['Pro Style', 'Ball Control', 'Aerial Style'] as DeckName[]) {\r\n      const deck = OFFENSE_DECKS[deckName];\r\n      const card = deck.find(c => c.id === cardId);\r\n      if (card) return card;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private findDefenseCard(cardId: string) {\r\n    return DEFENSE_DECK.find(c => c.id === cardId) || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Dice engine (new 2d20 system)\r\n */\r\nclass DiceEngine implements Engine {\r\n  private matchupTable: any = null;\r\n  private penaltyTable: any = null;\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.matchupTable && this.penaltyTable) return;\r\n\r\n    try {\r\n      // Load matchup and penalty tables for dice resolution\r\n      const { fetchMatchupTable } = await import('../data/loaders/matchupTables');\r\n      const { fetchPenaltyTableByName } = await import('../data/loaders/penaltyTables');\r\n\r\n      const [matchupResult, penaltyResult] = await Promise.all([\r\n        fetchMatchupTable('play_vs_defense_outcomes.json'),\r\n        fetchPenaltyTableByName('penalty_table_v1') // Use default penalty table\r\n      ]);\r\n\r\n      if (matchupResult.ok) {\r\n        this.matchupTable = matchupResult.data;\r\n      }\r\n      if (penaltyResult.ok) {\r\n        this.penaltyTable = penaltyResult.data;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load dice tables for dice engine:', error);\r\n    }\r\n  }\r\n\r\n  resolvePlay(\r\n    offCardId: string,\r\n    defCardId: string,\r\n    state: GameState,\r\n    rng: RNG\r\n  ): ResolveResult {\r\n    // Map card IDs to play labels for dice resolution\r\n    const offenseCard = this.findOffenseCard(offCardId);\r\n    const defenseCard = this.findDefenseCard(defCardId);\r\n\r\n    if (!offenseCard) {\r\n      console.warn(`Unknown offense card ID: ${offCardId}`);\r\n      return { yards: 0, clock: '30' };\r\n    }\r\n\r\n    if (!defenseCard) {\r\n      console.warn(`Unknown defense card ID: ${defCardId}`);\r\n      return { yards: 0, clock: '30' };\r\n    }\r\n\r\n    // Use the dice resolution system if tables are available\r\n    if (this.matchupTable && this.penaltyTable) {\r\n      try {\r\n        const { resolveSnap } = require('../rules/ResolveSnap');\r\n        const diceResult = resolveSnap(\r\n          offenseCard.id,\r\n          defenseCard.id,\r\n          this.matchupTable,\r\n          this.penaltyTable,\r\n          state,\r\n          rng\r\n        );\r\n\r\n        // Convert the dice result to our ResolveResult format\r\n        return this.convertDiceResult(diceResult, offenseCard.label, defenseCard.label);\r\n      } catch (error) {\r\n        console.warn('Failed to use resolveSnap, falling back to stub:', error);\r\n      }\r\n    }\r\n\r\n    // Fallback stub result\r\n    return {\r\n      yards: 0,\r\n      clock: '30'\r\n    };\r\n  }\r\n\r\n  private convertDiceResult(diceResult: any, playLabel: string, defenseLabel: string): ResolveResult {\r\n    // Convert the dice result format to our unified ResolveResult format\r\n    const result: ResolveResult = {\r\n      yards: diceResult.finalYards || diceResult.baseOutcome?.yards || 0,\r\n      clock: diceResult.finalClockRunoff.toString() as '10' | '20' | '30',\r\n      tags: [playLabel, defenseLabel, ...diceResult.tags]\r\n    };\r\n\r\n    // Handle turnovers\r\n    if (diceResult.baseOutcome?.turnover) {\r\n      result.turnover = {\r\n        type: diceResult.baseOutcome.turnover.type,\r\n        return_yards: diceResult.baseOutcome.turnover.return_yards,\r\n        return_to: diceResult.baseOutcome.turnover.return_to\r\n      };\r\n    }\r\n\r\n    // Handle doubles\r\n    if (diceResult.doubles) {\r\n      result.doubles = { kind: diceResult.doubles };\r\n    }\r\n\r\n    // Handle penalties\r\n    if (diceResult.penalty) {\r\n      result.penalty = {\r\n        side: diceResult.penalty.penaltyInfo.side as 'offense' | 'defense' | 'offset',\r\n        yards: diceResult.penalty.penaltyInfo.yards,\r\n        label: diceResult.penalty.penaltyInfo.label,\r\n        override_play_result: diceResult.penalty.overridesPlayResult\r\n      };\r\n\r\n      if (diceResult.canAcceptDecline) {\r\n        result.options = { can_accept_decline: true };\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private findOffenseCard(cardId: string) {\r\n    for (const deckName of ['Pro Style', 'Ball Control', 'Aerial Style'] as DeckName[]) {\r\n      const deck = OFFENSE_DECKS[deckName];\r\n      const card = deck.find(c => c.id === cardId);\r\n      if (card) return card;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private findDefenseCard(cardId: string) {\r\n    return DEFENSE_DECK.find(c => c.id === cardId) || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Engine factory and selector\r\n */\r\nclass EngineFactory {\r\n  private engines: Map<EngineType, Engine> = new Map();\r\n  private initialized: boolean = false;\r\n\r\n  constructor() {\r\n    this.engines.set('deterministic', new DeterministicEngine());\r\n    this.engines.set('dice', new DiceEngine());\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.initialized) return;\r\n\r\n    try {\r\n      // Initialize all engines asynchronously\r\n      const engines = [this.engines.get('deterministic'), this.engines.get('dice')];\r\n      await Promise.all(engines.map(engine => engine?.initialize()));\r\n      this.initialized = true;\r\n    } catch (error) {\r\n      console.warn('Failed to initialize engines:', error);\r\n    }\r\n  }\r\n\r\n  getEngine(engineType?: EngineType): Engine {\r\n    const type = engineType || getCurrentEngine();\r\n    const engine = this.engines.get(type);\r\n\r\n    if (!engine) {\r\n      console.warn(`Unknown engine type: ${type}, falling back to deterministic`);\r\n      return this.engines.get('deterministic')!;\r\n    }\r\n\r\n    return engine;\r\n  }\r\n\r\n  getCurrentEngine(): Engine {\r\n    return this.getEngine();\r\n  }\r\n\r\n  async resolvePlay(\r\n    offCardId: string,\r\n    defCardId: string,\r\n    state: GameState,\r\n    rng: RNG\r\n  ): Promise<ResolveResult> {\r\n    // Ensure engines are initialized\r\n    if (!this.initialized) {\r\n      await this.initialize();\r\n    }\r\n\r\n    return this.getCurrentEngine().resolvePlay(offCardId, defCardId, state, rng);\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton engine factory instance\r\n */\r\nexport const engineFactory = new EngineFactory();\r\n\r\n/**\r\n * Convenience function to resolve a play using the current engine\r\n */\r\nexport async function resolvePlay(\r\n  offCardId: string,\r\n  defCardId: string,\r\n  state: GameState,\r\n  rng: RNG\r\n): Promise<ResolveResult> {\r\n  return engineFactory.resolvePlay(offCardId, defCardId, state, rng);\r\n}\r\n\r\n/**\r\n * Get information about the current engine\r\n */\r\nexport function getCurrentEngineInfo(): { type: EngineType; name: string; description: string } {\r\n  const flags = getFeatureFlags();\r\n  const type = getCurrentEngine();\r\n\r\n  const info = {\r\n    deterministic: {\r\n      name: 'Deterministic Engine',\r\n      description: 'Legacy card-based resolution system'\r\n    },\r\n    dice: {\r\n      name: 'Dice Engine',\r\n      description: 'New 2d20 dice-based resolution system'\r\n    }\r\n  };\r\n\r\n  return {\r\n    type,\r\n    ...info[type]\r\n  };\r\n}\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport type { PlayInput } from '../types';\r\n\r\nexport function chooseCommentaryLines(notes: string[]): { pbp: string; analyst: string } {\r\n  const cleaned = (notes || []).map((n) => String(n).replace(/\\s+/g, ' ').trim()).filter(Boolean);\r\n  if (cleaned.length === 0) return { pbp: 'Play is underway.', analyst: 'Watch the leverage and pad level here.' };\r\n  if (cleaned.length === 1) return { pbp: cleaned[0] || 'Play is underway.', analyst: 'Good fundamentals at the point of attack.' };\r\n  const isFormation = (s: string) => /\\blines up\\b/i.test(s);\r\n  const isBookkeeping = (s: string) => /^\\d+(st|nd|rd|th)\\s*&|^Now\\s/i.test(s);\r\n  const notFormationOrBook = (s: string) => !(isFormation(s) || isBookkeeping(s));\r\n  const candidates = cleaned.filter(notFormationOrBook);\r\n  const actionRe = /(drops back|throws|pass|button hook|slant|sideline|down and in|down and out|pop pass|flair|flare|screen|bomb|keeper|sneak|draw|trap|toss|sweep|handoff|fumbled|intercepted|sacked|return|pylon|toe-?tap|first down|loss of|gain of|pressure|hits|seam shot|deep post|post|corner)/i;\r\n  const defenseRe = /(blitz|goal[- ]?line|prevent|nickel|coverage|box|pad level|leverage|midfield|red zone|goal to go|backed up|short[- ]?yardage|crowds the line|balanced)/i;\r\n  const pbp = (candidates.find((s) => actionRe.test(s)) || candidates[0] || cleaned.find(notFormationOrBook) || cleaned[0] || 'Play is underway.');\r\n  let analyst = candidates.find((s) => s !== pbp && (defenseRe.test(s) || /first down|now \\d+(st|nd|rd|th)/i.test(s)))\r\n    || cleaned.find((s) => s !== pbp && notFormationOrBook(s))\r\n    || cleaned.find((s) => s !== pbp)\r\n    || 'Good fundamentals at the point of attack.';\r\n  return { pbp, analyst };\r\n}\r\n\r\nexport function buildBroadcastCall(\r\n  pre: GameState,\r\n  next: GameState,\r\n  input: PlayInput,\r\n  outcome: Outcome | undefined,\r\n  deps: {\r\n    rng: RNG;\r\n    playInDrive: number;\r\n    formatClock: (n: number) => string;\r\n    formatOrdinal: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    formatPossessionSpotForBroadcast: (possessing: TeamSide, ballOn: number) => string;\r\n    quarterStats: { explosives: number; turnovers: number };\r\n  }\r\n): { pbp: string; analyst: string } {\r\n  const downText = pre.down === 1 ? 'First and 10' : (pre.down === 2 ? `Second and ${pre.toGo}` : (pre.down === 3 ? `Third and ${pre.toGo}` : `Fourth and ${pre.toGo}`));\r\n  const spotPhrase = deps.formatPossessionSpotForBroadcast(pre.possession, pre.ballOn);\r\n  const def = String(input.defenseLabel || '');\r\n  const off = String(input.playLabel || '');\r\n  const clock = deps.formatClock(pre.clock);\r\n  const scoreText = `HOME ${pre.score.player} – AWAY ${pre.score.ai}`;\r\n  const hash = ((): string => {\r\n    const mod = pre.ballOn % 3; if (mod === 0) return 'left hash'; if (mod === 1) return 'right hash'; return 'between the hashes';\r\n  })();\r\n  const numbersSide = ((): string => {\r\n    const mod = pre.ballOn % 2; return mod === 0 ? 'near side numbers' : 'far side numbers';\r\n  })();\r\n\r\n  const formation = ((): string => {\r\n    if (/shotgun|down &|bomb|screen|sideline|button|look in|pop pass|flair|flare/i.test(off)) return 'shotgun, three wide';\r\n    if (/keeper|sneak|short yard|goal line|off tackle|slant run|trap|draw/i.test(off)) return 'under center, I-formation';\r\n    return 'balanced set';\r\n  })();\r\n  const defLook = ((): string => {\r\n    if (/outside blitz|inside blitz/i.test(def)) return 'blitz look';\r\n    if (/passing/i.test(def)) return 'nickel shell, two-high safeties';\r\n    if (/prevent_deep/i.test(def)) return 'prevent, safeties deep';\r\n    if (/goal line|short yard/i.test(def)) return 'heavy front, stacked box';\r\n    return 'balanced front';\r\n  })();\r\n  const motion = ((): string => {\r\n    if (/sideline|down & out|down & in|screen|flair|flare|button/i.test(off)) return 'slot in short motion';\r\n    return '';\r\n  })();\r\n  const isRun = /run|keeper|draw|trap|sneak|slant|off tackle|end run|reverse|razzle|power up middle/i.test(off) && !/pass/i.test(off);\r\n  const isPass = /pass|hook|look in|sideline|flair|flare|screen|down &/i.test(off);\r\n  const action = isRun\r\n    ? (/end run/i.test(off) ? 'hands it off around the edge.'\r\n      : (/off tackle/i.test(off) ? 'hands it off off tackle.'\r\n        : (/keeper|sneak|qb/i.test(off) ? 'keeps it himself.' : 'turns and hands it off up the middle.')))\r\n    : (isPass ? 'drops back and fires.' : 'gets it out quickly.');\r\n  let resultPart = '';\r\n  if (!outcome) {\r\n    resultPart = '';\r\n  } else if (outcome.category === 'incomplete') {\r\n    resultPart = ' Incomplete.';\r\n  } else if (outcome.category === 'gain' || outcome.category === 'loss') {\r\n    const y = outcome.yards || 0;\r\n    if (y > 0) {\r\n      const runPhrases = [' slips through left guard.',' dives into the pile.',' cuts back against pursuit.',' bounces outside.',' spins forward.'];\r\n      const passPhrases = [' quick hitter underneath.',' slant left, caught.',' button hook at the sticks.',' out to the flat.',' screen forms.'];\r\n      const pick = <T>(arr: T[]): T => arr[Math.floor((deps.rng() * arr.length))]!;\r\n      const tail = isRun ? pick(runPhrases) : pick(passPhrases);\r\n      resultPart = `${tail} Gain of ${y}.`;\r\n      if (y >= 20) { try { deps.quarterStats.explosives += 1; } catch {}\r\n      }\r\n    } else if (y < 0) resultPart = ` Swallowed up for ${Math.abs(y)}.`;\r\n    else resultPart = ' Stonewalled at the line.';\r\n  } else if (outcome.category === 'fumble') {\r\n    resultPart = ' Ball is loose and recovered.';\r\n    try { deps.quarterStats.turnovers += 1; } catch {}\r\n  } else if (outcome.category === 'interception') {\r\n    resultPart = ' Picked off!';\r\n    try { deps.quarterStats.turnovers += 1; } catch {}\r\n  }\r\n  const preamble = `${downText}, ${deps.formatTeamYardLine(pre.possession, pre.ballOn)}, Q${pre.quarter} ${clock} — ${scoreText}`;\r\n  const offenseTeam = (pre.possession === 'player') ? 'HOME' : 'AWAY';\r\n  const opener = ((): string => {\r\n    const choices = ['Here we go —','They set —','Quick to the line —','They take their time —','Snap comes —','Ball is snapped —','Here’s the play —','They roll it out —'];\r\n    return choices[Math.floor(deps.rng() * choices.length)]!;\r\n  })();\r\n  const presnap = `${offenseTeam} ${deps.playInDrive > 1 ? 'sets' : 'breaks the huddle'} on the ${hash}, ${formation}. Defense shows ${defLook}${motion ? `, ${motion}` : ''}.`;\r\n  const snap = `${opener} quarterback ${action}${resultPart}`;\r\n  const nextDownText = `${deps.formatOrdinal(next.down)} & ${next.toGo}`;\r\n  const nextSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n  const geo = ((): string => {\r\n    const yardsToGoal = (next.possession === 'player') ? (100 - next.ballOn) : next.ballOn;\r\n    if (yardsToGoal <= 20) return 'inside the red zone';\r\n    if (next.ballOn >= 48 && next.ballOn <= 52) return 'just shy of midfield';\r\n    return `${numbersSide}`;\r\n  })();\r\n  const reset = `Spotted ${geo} at ${nextSpot}. ${nextDownText}.`;\r\n  const late = (pre.quarter === 2 || pre.quarter === 4) && pre.clock <= 120;\r\n  const pressure = late ? (pre.clock < 60 ? ' They’re hurrying now — under a minute left.' : ' Gotta get this snapped before the clock burns.') : '';\r\n  const crowd = ((): string => {\r\n    if (!outcome) return '';\r\n    if (outcome.category === 'interception' || outcome.category === 'fumble') {\r\n      return next.possession === 'player' ? ' And the crowd erupts!' : ' A hush falls over the stadium.';\r\n    }\r\n    return '';\r\n  })();\r\n  const concise = deps.rng() < 0.35;\r\n  const pbp = (concise\r\n    ? `${downText} at ${deps.formatTeamYardLine(pre.possession, pre.ballOn)}… ${snap} ${reset}${pressure}${crowd}`\r\n    : `${downText} from ${spotPhrase}, Q${pre.quarter} ${clock} — ${scoreText}. ${presnap} ${snap} ${reset}${pressure}${crowd}`\r\n  ).trim();\r\n\r\n  let analyst = '';\r\n  if (outcome && (outcome.category === 'gain' || outcome.category === 'loss')) {\r\n    const y = outcome.yards || 0;\r\n    if (y >= 8) analyst = isRun ? 'Great cut and second-level block opened that lane.' : 'Beat the leverage outside — timing was perfect.';\r\n    else if (y >= 3) analyst = isRun ? 'Good pad level; fell forward behind the guard.' : 'On time and on target; easy yards.';\r\n    else if (y > 0) analyst = isRun ? 'Patient run, but backers closed fast.' : 'Checkdown; kept it ahead of the sticks.';\r\n    else if (y === 0) analyst = 'Front won at the snap — no movement.';\r\n    else analyst = 'That was a brick wall up front; linebackers filled every crease.';\r\n  }\r\n  if (!analyst) {\r\n    if (/outside blitz/i.test(def)) analyst = 'Edge pressure; QB had to speed it up.';\r\n    else if (/inside blitz/i.test(def)) analyst = 'A-gap heat — protection slid late.';\r\n    else if (/goal line|short yard/i.test(def)) analyst = 'Heavy front, gaps corked.';\r\n    else if (/passing/i.test(def)) analyst = 'Light box with umbrella coverage.';\r\n    else if (/prevent/i.test(def)) analyst = 'Soft shell, keep-it-in-front spacing.';\r\n    else analyst = isRun ? 'Line got just enough push.' : 'Protection held just long enough.';\r\n  }\r\n  try {\r\n    const lastTwo = deps.playInDrive >= 2 ? deps.playInDrive : 0;\r\n    if (lastTwo >= 2 && isRun) analyst += ' They’ve hit that off-tackle twice; don’t be shocked if they fake it next series.';\r\n  } catch {}\r\n  return { pbp, analyst };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\n\r\nexport function buildResultSummary(\r\n  pre: GameState,\r\n  next: GameState,\r\n  outcome: Outcome | undefined,\r\n  flags: { td?: boolean; safety?: boolean },\r\n  currentPlayLabel: string,\r\n  defenseLabel: string,\r\n  deps: {\r\n    formatOrdinal: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    rng: () => number;\r\n    getLastNotesForSide: (side: TeamSide) => { zone: string | null; fgInRange: boolean; defense: string | null };\r\n    setLastNotesForSide: (side: TeamSide, notes: { zone: string | null; fgInRange: boolean; defense: string | null }) => void;\r\n  }\r\n): { result: string; notes: string[] } {\r\n  const notes: string[] = [];\r\n  const homeAway = (side: 'player'|'ai') => (side === 'player' ? 'HOME' : 'AWAY');\r\n  const spotText = `${homeAway(pre.possession)} ball at the ${deps.formatTeamYardLine(pre.possession, pre.ballOn)} yard line.`;\r\n  const yardsToGoal = pre.possession === 'player' ? (100 - pre.ballOn) : pre.ballOn;\r\n  const abs = pre.ballOn;\r\n  const acrossMid = (pre.possession === 'player') ? abs >= 50 : abs <= 50;\r\n  const nearMid = abs >= 45 && abs <= 55;\r\n  const backedUp = (pre.possession === 'player') ? abs <= 10 : abs >= 90;\r\n  let zone: string | null = null;\r\n  if (yardsToGoal <= 10 && pre.down === 1 && pre.toGo >= yardsToGoal) zone = 'GoalToGo';\r\n  else if (yardsToGoal <= 20) zone = 'RedZone';\r\n  else if (nearMid) zone = 'NearMid';\r\n  else if (acrossMid) zone = 'AcrossMid';\r\n  else if (backedUp) zone = 'BackedUp';\r\n\r\n  const last = deps.getLastNotesForSide(pre.possession);\r\n  if (zone && zone !== last.zone) {\r\n    if (zone === 'GoalToGo') notes.push('Goal to go.');\r\n    else if (zone === 'RedZone') notes.push('Red zone opportunity.');\r\n    else if (zone === 'NearMid') notes.push('Near midfield.');\r\n    else if (zone === 'AcrossMid') notes.push('Across midfield.');\r\n    else if (zone === 'BackedUp') notes.push('Backed up near own goal line.');\r\n  }\r\n  const attemptYards = yardsToGoal + 17;\r\n  const inRange = attemptYards <= 45;\r\n  if (inRange && pre.down >= 3 && !last.fgInRange) notes.push('Within field goal range.');\r\n  notes.push(`${deps.formatOrdinal(pre.down)} & ${pre.toGo}, ${spotText}`);\r\n  const shortYardage = pre.toGo <= 1;\r\n  const isSneak = /sneak|qb keeper|keeper/i.test(currentPlayLabel);\r\n  const passHeavy = /play[- ]?action|long bomb|down & in|down & out|post|corner|seam|bomb/i.test(currentPlayLabel);\r\n  if (shortYardage || isSneak || passHeavy) {\r\n    const offFormation = /pass|hook|look in|sideline|flare|flair|pop|bomb|button|screen|down &/i.test(currentPlayLabel) ? 'lines up in the shotgun.' : 'lines up under center.';\r\n    notes.push(offFormation);\r\n  }\r\n  const playLabel = String(currentPlayLabel || '');\r\n  const defNote = (dl: string): string | null => {\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(deps.rng() * arr.length)]!;\r\n    if (/goal line/i.test(dl)) return pick(['Stacked front, safeties pinched.', 'Stacked box, gaps corked.']);\r\n    if (/short yardage/i.test(dl)) return pick(['Tight box, gaps packed.', 'Heavy front, gaps corked.']);\r\n    if (/passing/i.test(dl)) return pick(['Light box, two-high shell.', 'Nickel spacing, umbrella coverage.']);\r\n    if (/outside blitz/i.test(dl)) return pick(['Corner fire off the edge.', 'Nickel off the slot.', 'Safety blitz crashing down.']);\r\n    if (/inside blitz/i.test(dl)) return pick(['Mike shoots the A-gap.', 'Linebacker dog up the middle.']);\r\n    if (/prevent deep/i.test(dl)) return pick(['Umbrella shell, keep it in front.', 'Prevent deep — nothing behind.']);\r\n    if (/prevent/i.test(dl)) return 'Umbrella look, keep-it-in-front spacing.';\r\n    if (/run & pass|pass & run|running/i.test(dl)) return pick(['Balanced shell.', 'Soft quarters, balanced spacing.']);\r\n    return null;\r\n  };\r\n  const dnote = defNote(String(defenseLabel || ''));\r\n  const lastDef = last.defense || null;\r\n  const isBlitz = /blitz/i.test(defenseLabel || '');\r\n  if (dnote && (isBlitz || (defenseLabel || '') !== lastDef)) notes.push(dnote);\r\n\r\n  if (/punt/i.test(playLabel)) {\r\n    notes.push(`${homeAway(pre.possession)} lines up to punt from the ${pre.ballOn} yard line.`);\r\n  } else if (/pass|hook|look in|sideline|flare|flair|pop|bomb|button/i.test(playLabel)) {\r\n    if (/screen/i.test(playLabel)) notes.push('Quarterback sets up the screen.');\r\n    else if (/button hook/i.test(playLabel)) notes.push('Quick button hook route.');\r\n    else if (/look in/i.test(playLabel)) notes.push('Quick slant to the inside.');\r\n    else if (/sideline/i.test(playLabel)) notes.push('Throws to the sideline.');\r\n    else if (/down & in/i.test(playLabel)) notes.push('Throws down and in.');\r\n    else if (/down & out/i.test(playLabel)) notes.push('Throws down and out.');\r\n    else if (/pop pass/i.test(playLabel)) notes.push('Quick pop pass over the middle.');\r\n    else if (/flair|flare/i.test(playLabel)) notes.push('Flair pass to the back.');\r\n    else if (/stop & go/i.test(playLabel)) notes.push('Stop-and-go, going deep.');\r\n    else if (/bomb/i.test(playLabel)) notes.push('Going deep downfield.');\r\n    else notes.push('Quarterback drops back to pass.');\r\n  } else if (/keeper|draw|qb/i.test(playLabel)) {\r\n    notes.push('Quarterback keeps it himself and runs.');\r\n  } else {\r\n    if (/end run/i.test(playLabel)) notes.push('Quarterback hands off around the end.');\r\n    else if (/off tackle/i.test(playLabel)) notes.push('Quarterback hands off off tackle.');\r\n    else if (/slant run/i.test(playLabel)) notes.push('Quarterback hands off on an inside slant run.');\r\n    else if (/draw/i.test(playLabel)) notes.push('Quarterback delays and hands off on a draw play.');\r\n    else if (/trap/i.test(playLabel)) notes.push('Quarterback hands off on a trap play.');\r\n    else if (/run & pass option/i.test(playLabel)) notes.push('Quarterback reads the option look.');\r\n    else if (/razzle dazzle/i.test(playLabel)) notes.push('Trick play! Razzle dazzle in the backfield.');\r\n    else notes.push('Quarterback hands off to the running back.');\r\n  }\r\n  if (flags.td) {\r\n    return { result: 'Touchdown', notes: [...notes, 'Touchdown scored.'] };\r\n  }\r\n  if (flags.safety) {\r\n    return { result: 'Safety', notes: [...notes, 'Safety is awarded.'] };\r\n  }\r\n  if (!outcome) {\r\n    return { result: 'Play', notes };\r\n  }\r\n  if (outcome.category === 'incomplete') {\r\n    let inc = 'The pass falls incomplete.';\r\n    if (/blitz/i.test(defenseLabel)) inc = 'Pressure forces an incomplete pass.';\r\n    else if (/prevent deep/i.test(defenseLabel)) inc = 'Prevent deep coverage breaks up the deep shot.';\r\n    else if (/passing/i.test(defenseLabel)) inc = 'Tight coverage, pass falls incomplete.';\r\n    return { result: 'Incomplete', notes: [...notes, inc] };\r\n  }\r\n  if (outcome.category === 'gain' || outcome.category === 'loss') {\r\n    const y = outcome.yards || 0;\r\n    const kind = y >= 0 ? 'Gain' : 'Loss';\r\n    const isSack = Boolean((outcome.raw && /sack/i.test(outcome.raw)) || /sack/i.test(playLabel));\r\n    if (isSack) {\r\n      const blitzTag = /blitz/i.test(defenseLabel) ? ' Blitz gets home.' : '';\r\n      return { result: `Sack -${Math.abs(y)}`, notes: [...notes, `Edge wins inside spin; quarterback swallowed.${blitzTag}`, `Loss of ${Math.abs(y)} yards. Protection beaten.`, `Now ${deps.formatOrdinal(next.down)} & ${next.toGo}.`] };\r\n    }\r\n    const firstDownNow = (pre.possession === next.possession) && pre.down !== 1 && next.down === 1;\r\n    const verbsGain = ['slashes for', 'rumbles for', 'bursts for', 'powers for', 'cuts for'];\r\n    const verbsLoss = ['stacked for', 'dropped for', 'stuffed for', 'spilled for'];\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(deps.rng() * arr.length)]!;\r\n    const action = y >= 0 ? `${pick(verbsGain)} ${Math.abs(y)}.` : `${pick(verbsLoss)} ${Math.abs(y)}.`;\r\n    const path = Math.abs(y) >= 20 ? (() => {\r\n      const start = deps.formatTeamYardLine(pre.possession, pre.ballOn);\r\n      const mid = pre.possession === 'player' ? (pre.ballOn + Math.floor(Math.abs(y) / 2)) : (pre.ballOn - Math.floor(Math.abs(y) / 2));\r\n      const midText = deps.formatTeamYardLine(pre.possession, Math.max(0, Math.min(100, mid)));\r\n      const end = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n      return `From ${start}… to ${midText}… down at ${end}!`;\r\n    })() : '';\r\n    const conversion = firstDownNow ? ' First down!' : '';\r\n    return { result: `${kind} ${Math.abs(y)}`, notes: [...notes, `${action} ${path}`.trim(), `Now ${deps.formatOrdinal(next.down)} & ${next.toGo}.${conversion}`] };\r\n  }\r\n\r\n  deps.setLastNotesForSide(pre.possession, {\r\n    zone: zone || deps.getLastNotesForSide(pre.possession).zone,\r\n    fgInRange: inRange,\r\n    defense: defenseLabel || null,\r\n  });\r\n  if (outcome.category === 'interception') {\r\n    const ret = outcome.interceptReturn || 0;\r\n    const retText = ret ? ` Return of ${Math.abs(ret)} yards.` : '';\r\n    const endSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    return { result: 'Interception', notes: [...notes, `Ball is picked — tipped and taken.${retText}`, `${homeAway(next.possession)} takes over at the ${endSpot}.`] };\r\n  }\r\n  if (outcome.category === 'fumble') {\r\n    const endSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    const looseAt = deps.formatTeamYardLine(pre.possession, pre.ballOn);\r\n    return { result: 'Fumble', notes: [...notes, `Ball's loose at ${looseAt} — scrum on the ground.`, `Recovered by ${homeAway(next.possession)} at ${endSpot}.`] };\r\n  }\r\n  if (outcome.category === 'penalty') {\r\n    const on = (outcome.penalty && outcome.penalty.on) || 'offense';\r\n    const yards = (outcome.penalty && outcome.penalty.yards) || 0;\r\n    return { result: `Penalty on ${on} (${yards})`, notes: [...notes, 'Penalty called.'] };\r\n  }\r\n  return { result: 'Play', notes };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport class DriveTracker {\r\n  private driveId = 1;\r\n  private playInDrive = 0;\r\n  private currentPossession: TeamSide | null = null;\r\n  private driveStartAbsBallOn: number | null = null;\r\n  private driveStartSide: TeamSide | null = null;\r\n  private driveStats: { runPlays: number; passPlays: number; totalYards: number; explosives: number; sacks: number } = { runPlays: 0, passPlays: 0, totalYards: 0, explosives: 0, sacks: 0 };\r\n  private quarterStats: { quarter: number; runs: number; passes: number; pointsHome: number; pointsAway: number; explosives: number; turnovers: number } = { quarter: 1, runs: 0, passes: 0, pointsHome: 0, pointsAway: 0, explosives: 0, turnovers: 0 };\r\n  private weather: { temp: string; wind: string; precip: string };\r\n  private lullThreeAndOutStreak = 0;\r\n  private lastNotesBySide: Record<TeamSide, { zone: string | null; fgInRange: boolean; defense: string | null }> = {\r\n    player: { zone: null, fgInRange: false, defense: null },\r\n    ai: { zone: null, fgInRange: false, defense: null },\r\n  };\r\n\r\n  constructor(private rng: RNG) {\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(this.rng() * arr.length)]!;\r\n    this.weather = {\r\n      temp: pick(['crisp','mild','warm','hot']),\r\n      wind: pick(['calm','light breeze','gusty','quartering wind']),\r\n      precip: pick(['clear','overcast','light rain','light snow']),\r\n    };\r\n  }\r\n\r\n  getPlayInDrive(): number { return this.playInDrive; }\r\n  getQuarterStatsRef() { return this.quarterStats; }\r\n  getLastNotesForSide(side: TeamSide) { return this.lastNotesBySide[side]; }\r\n  setLastNotesForSide(side: TeamSide, val: { zone: string | null; fgInRange: boolean; defense: string | null }) { this.lastNotesBySide[side] = val; }\r\n  incrementRunOrPassByLabel(playLabel: string): void {\r\n    try {\r\n      const label = String(playLabel || '').toLowerCase();\r\n      const isRun = /run|keeper|draw|trap|sneak|slant|off tackle|end run|razzle/.test(label) && !/pass/.test(label);\r\n      if (isRun) this.quarterStats.runs += 1; else this.quarterStats.passes += 1;\r\n    } catch {}\r\n  }\r\n  beginDriveIfNeeded(state: GameState, events: FlowEvent[], formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string): void {\r\n    if (this.currentPossession !== state.possession) {\r\n      if (this.playInDrive > 0) this.driveId += 1;\r\n      this.playInDrive = 0;\r\n      this.currentPossession = state.possession;\r\n      this.driveStartAbsBallOn = state.ballOn;\r\n      this.driveStartSide = state.possession;\r\n      this.driveStats = { runPlays: 0, passPlays: 0, totalYards: 0, explosives: 0, sacks: 0 };\r\n      const yard = formatTeamYardLine(state.possession, state.ballOn);\r\n      const offense = (state.possession === 'player') ? 'HOME' : 'AWAY';\r\n      const abs = state.ballOn;\r\n      const goodField = (state.possession === 'player') ? (abs >= 60) : (abs <= 40);\r\n      const backed = (state.possession === 'player') ? (abs <= 15) : (abs >= 85);\r\n      const rob = backed ? 'Backed up deep — protection and ball security matter here.'\r\n        : goodField ? 'Short field — everything in the playbook is available.'\r\n        : 'Solid field position to start the drive.';\r\n      events.push({ type: 'log', message: `Brad: ${offense} takes over at ${yard}.` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    }\r\n  }\r\n  incrementPlayInDrive(): void { this.playInDrive += 1; }\r\n\r\n  endDriveSummaryIfAny(state: GameState, events: FlowEvent[], reason: string): void {\r\n    if (this.driveStartAbsBallOn != null && this.driveStartSide != null) {\r\n      const plays = this.playInDrive;\r\n      const gained = this.driveStats.totalYards;\r\n      const theme = this.driveStats.runPlays > this.driveStats.passPlays ? 'ground-heavy' : (this.driveStats.passPlays > this.driveStats.runPlays ? 'air-heavy' : 'balanced');\r\n      const team = (this.driveStartSide === 'player') ? 'HOME' : 'AWAY';\r\n      const quickStrike = (plays <= 3 && gained >= 30) || this.driveStats.explosives >= 1;\r\n      const grinding = plays >= 8 && gained >= 30;\r\n      let brad = '';\r\n      if (reason === 'touchdown') {\r\n        brad = quickStrike\r\n          ? `Three plays, quick strike — all chunk yardage — and ${team} cashes in.`\r\n          : (grinding ? `Ten-play, grinding march — they owned the trenches — and ${team} finishes.` : `Drive wraps touchdown — ${plays} plays for ${Math.abs(gained)}.`);\r\n      } else if (reason === 'punt') {\r\n        brad = (plays <= 3) ? `${team} goes three-and-out — momentum drifting the other way.` : `Stalled after ${plays} plays — punt coming.`;\r\n      } else if (reason === 'downs') {\r\n        brad = `Stuffed on downs — ${team} turned away.`;\r\n      } else if (reason === 'safety') {\r\n        brad = `Safety ends it — costly series for ${team}.`;\r\n      } else {\r\n        brad = `Drive wraps ${reason} — ${plays} plays, ${Math.abs(gained)} yards ${gained >= 0 ? 'gained' : 'lost'}.`;\r\n      }\r\n      const rob = ((): string => {\r\n        if (reason === 'touchdown') return grinding ? 'They leaned on them — pure power football.' : (quickStrike ? 'Scheme beat leverage — that flipped the field.' : 'Execution at the key moments.');\r\n        if (reason === 'safety') return 'Protection broke down; all the juice flips sideline.';\r\n        if (reason === 'downs') return 'That front dominated gaps — nowhere to go.';\r\n        if (reason === 'punt') return `${theme} looks, but no finish.`;\r\n        return `${theme} sequence.`;\r\n      })();\r\n      events.push({ type: 'log', message: `Brad: ${brad}` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n\r\n      try {\r\n        const threeAndOut = reason === 'punt' && plays <= 3 && gained < 5;\r\n        if (threeAndOut) this.lullThreeAndOutStreak += 1; else this.lullThreeAndOutStreak = 0;\r\n        if (this.lullThreeAndOutStreak >= 2) {\r\n          const wx = this.weather;\r\n          const wxLine = (wx.precip !== 'clear')\r\n            ? `Weather note — ${wx.precip}, ${wx.wind}.`\r\n            : (wx.wind !== 'calm' ? `Wind note — ${wx.wind}, ball hanging a bit.` : `Crowd is restless; waiting for a spark.`);\r\n          const fatigue = (this.driveStats.runPlays + this.driveStats.passPlays) >= 8 ? 'Big bodies leaning — fatigue creeping in.' : 'Front sevens fresh, but they’re grinding.';\r\n          events.push({ type: 'log', message: `Brad: ${wxLine}` });\r\n          events.push({ type: 'log', message: `Rob: ${fatigue}` });\r\n          this.lullThreeAndOutStreak = 0;\r\n        }\r\n      } catch {}\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport { resolveKickoff } from '../../rules/special/Kickoff';\r\nimport { resolvePunt } from '../../rules/special/Punt';\r\nimport { resolveLongGain } from '../../rules/LongGain';\r\nimport { DEFAULT_TIME_KEEPING } from '../../rules/ResultParsing';\r\nimport type { TimeKeeping } from '../../data/schemas/Timekeeping';\r\nimport type { FlowEvent } from '../types';\r\nimport type { RNG } from '../../sim/RNG';\r\n\r\nexport function performKickoff(\r\n  state: GameState,\r\n  type: 'normal'|'onside',\r\n  kicking: TeamSide,\r\n  deps: {\r\n    rng: RNG;\r\n    timeKeeping: TimeKeeping;\r\n    isLeading: (side: TeamSide, score: GameState['score']) => boolean;\r\n    isTied: (score: GameState['score']) => boolean;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState;\r\n  const tk = deps.timeKeeping || DEFAULT_TIME_KEEPING;\r\n  let timeOff = tk.kickoff;\r\n  if ((next.quarter === 2 || next.quarter === 4) && next.clock > 120 && next.clock - timeOff < 120) {\r\n    timeOff = next.clock - 120;\r\n    events.push({ type: 'log', message: 'Two-minute warning.' });\r\n    events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n  }\r\n  next.clock = Math.max(0, next.clock - timeOff);\r\n\r\n  const onside = type === 'onside';\r\n  const kickerLeadingOrTied = deps.isLeading(kicking, next.score) || deps.isTied(next.score);\r\n  const ko = resolveKickoff(deps.rng, { onside, kickerLeadingOrTied });\r\n  const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n  const absYard = receiver === 'player' ? ko.yardLine : 100 - ko.yardLine;\r\n  next.possession = ko.turnover ? kicking : receiver;\r\n  next.ballOn = Math.max(0, Math.min(100, absYard));\r\n  const dd = { down: 1, toGo: 10 } as const;\r\n  next.down = dd.down; next.toGo = dd.toGo;\r\n  events.push({ type: 'kickoff', payload: { onside } });\r\n  try {\r\n    const receiverSide: TeamSide = next.possession;\r\n    const yardText = deps.formatTeamYardLine(receiverSide, next.ballOn);\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(deps.rng() * arr.length)]!;\r\n    const traj = pick(['a high hanger','a booming end-over-end','a wobbly spiral','a knuckleball','a low liner']);\r\n    const angle = pick(['toward the near numbers','to the far sideline','between the hashes','to the right numbers','to the left numbers']);\r\n    const caughtAt = pick(['the goal line','the five','the three']);\r\n    const advancement = receiverSide === 'player' ? next.ballOn : (100 - next.ballOn);\r\n    const bigReturn = advancement >= 55;\r\n    const hugeReturn = advancement >= 70;\r\n    const normalPaths = ['angles left, then up the seam','up the middle, bounces outside','zigs past the first wave, then squared up'];\r\n    const stuffedPaths = ['straight ahead, no crease','met by the first wave, stacked'];\r\n    const explosivePaths = ['hits the crease and bursts free','finds daylight down the sideline','cuts back and turns on the jets'];\r\n    const path = hugeReturn ? pick(explosivePaths) : (bigReturn ? pick(normalPaths) : pick([...normalPaths, ...stuffedPaths]));\r\n    const brad = hugeReturn\r\n      ? `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — all the way to ${yardText}!`\r\n      : (bigReturn\r\n        ? `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — big return to ${yardText}.`\r\n        : `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — brought to ${yardText}.`);\r\n    const rob = hugeReturn\r\n      ? pick(['Coverage bust — contain lost leverage and the lane opened wide.','Out-kicked the coverage — return team found a runway.', 'Missed fits across the board — explosive return.'])\r\n      : (bigReturn\r\n        ? pick(['Out-kicked the coverage — return team found daylight.','Gunners got washed — edge was there.'])\r\n        : pick(['Coverage lanes stayed disciplined — no big gap to hit.','Good hang gave the gunners time — textbook coverage.','Return set it up, but contain held firm.']));\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  } catch {}\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\nexport function handleFourthDownPunt(\r\n  pre: GameState,\r\n  next: GameState,\r\n  deps: {\r\n    rng: RNG;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    endDriveSummaryIfAny: (state: GameState, events: FlowEvent[], reason: string) => void;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  const puntingTeam: TeamSide = pre.possession;\r\n  const punt = resolvePunt({ ballOn: pre.ballOn, puntingTeam }, deps.rng, resolveLongGain);\r\n  const fromYL = deps.formatTeamYardLine(puntingTeam, pre.ballOn);\r\n  const receiving: TeamSide = puntingTeam === 'player' ? 'ai' : 'player';\r\n  const toYL = deps.formatTeamYardLine(punt.possessionFlips ? receiving : puntingTeam, punt.ballOn);\r\n  const dist = typeof punt.distance === 'number' ? punt.distance : undefined;\r\n  const ret = punt.returnYards || 0;\r\n  const pick = <T>(arr: T[]): T => arr[Math.floor(deps.rng() * arr.length)]!;\r\n  const traj = pick(['booming end-over-end','tight spiral','wobbly spiral','low driving kick','high hanging punt']);\r\n  const angle = pick(['toward the boundary','angling to the near hash','to the far numbers','middle of the field']);\r\n  const retPath = ret >= 15 ? pick(['up the seam','bounces outside','cuts back against pursuit']) : pick(['met square by the first wave','slips one, then wrapped','no room, stacked early']);\r\n  const brad = `${traj} from ${fromYL}, ${angle}. Return ${retPath} for ${ret}, down at ${toYL}.`;\r\n  const rob = ret >= 15 ? 'Out-kicked the coverage — return team found daylight.' : 'Hang time and lanes — coverage wins that down.';\r\n  events.push({ type: 'log', message: `Brad: ${brad}` });\r\n  events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  next.possession = punt.possessionFlips ? (puntingTeam === 'player' ? 'ai' : 'player') : puntingTeam;\r\n  next.ballOn = punt.ballOn;\r\n  const dd = { down: 1, toGo: 10 } as const;\r\n  next.down = dd.down; next.toGo = dd.toGo;\r\n  deps.endDriveSummaryIfAny(next, events, 'punt');\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function resolvePATAndRestart(\r\n  state: GameState,\r\n  side: TeamSide,\r\n  deps: {\r\n    rng: () => number;\r\n    choosePAT?: (ctx: { diff: number; quarter: number; clock: number; side: 'player'|'ai' }) => 'kick'|'two';\r\n    chooseKickoffType?: (ctx: { trailing: boolean; quarter: number; clock: number }) => 'normal'|'onside';\r\n    attemptPatInternal: (rng: () => number) => boolean;\r\n    scoringSideToDelta: (side: TeamSide, points: number) => { playerDelta: number; aiDelta: number };\r\n    isTrailing: (side: TeamSide, score: GameState['score']) => boolean;\r\n    performKickoff: (state: GameState, type: 'normal'|'onside', kicking: TeamSide) => { state: GameState; events: FlowEvent[] };\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState & { openingKickTo?: TeamSide };\r\n  const diff = next.score.player - next.score.ai;\r\n  const decision = deps.choosePAT?.({ diff, quarter: next.quarter, clock: next.clock, side })\r\n    ?? (side === 'ai' ? (((): 'kick'|'two' => { const late = next.quarter === 4 && next.clock <= 5 * 60; if (diff < 0 && -diff <= 2 && late) return 'two'; return 'kick'; })()) : 'kick');\r\n  if (decision === 'two') {\r\n    const success = deps.rng() < 0.5;\r\n    if (success) {\r\n      if (side === 'player') next.score.player += 2; else next.score.ai += 2;\r\n      events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 2), kind: 'TwoPoint' } });\r\n    }\r\n  } else {\r\n    const good = deps.attemptPatInternal(deps.rng);\r\n    if (good) {\r\n      if (side === 'player') next.score.player += 1; else next.score.ai += 1;\r\n      events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 1), kind: 'XP' } });\r\n    }\r\n  }\r\n  next.awaitingPAT = false;\r\n  const koType = deps.chooseKickoffType?.({ trailing: deps.isTrailing(side, next.score), quarter: next.quarter, clock: next.clock }) ?? 'normal';\r\n  const ko = deps.performKickoff(next, koType, side);\r\n  return { state: ko.state, events: [...events, ...ko.events] };\r\n}\r\n\r\nexport function attemptFieldGoal(\r\n  state: GameState,\r\n  attemptYards: number,\r\n  side: TeamSide,\r\n  deps: {\r\n    rng: () => number;\r\n    attemptFieldGoalKick: (rng: () => number, attemptYards: number) => boolean;\r\n    scoringSideToDelta: (side: TeamSide, points: number) => { playerDelta: number; aiDelta: number };\r\n    randomHash: () => 'left hash'|'right hash'|'middle';\r\n    formatClock: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    performKickoff: (state: GameState, type: 'normal'|'onside', kicking: TeamSide) => { state: GameState; events: FlowEvent[] };\r\n    hudPayload: (s: GameState) => any;\r\n    timeKeepingFieldGoalSeconds: number;\r\n    missedFieldGoalSpot: (args: { ballOn: number; possessing: TeamSide }, attemptYards: number) => { possession: TeamSide; ballOn: number };\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState & { openingKickTo?: TeamSide };\r\n  const pre = { ...next };\r\n  let timeOff = deps.timeKeepingFieldGoalSeconds;\r\n  let crossedTwoMinute = false;\r\n  if ((pre.quarter === 2 || pre.quarter === 4) && pre.clock > 120 && pre.clock - timeOff < 120) {\r\n    timeOff = pre.clock - 120;\r\n    crossedTwoMinute = true;\r\n  }\r\n  next.clock = Math.max(0, pre.clock - timeOff);\r\n  if (crossedTwoMinute) {\r\n    events.push({ type: 'log', message: 'Brad: Two-minute warning.' });\r\n    events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n  }\r\n  const good = deps.attemptFieldGoalKick(deps.rng, attemptYards);\r\n  if (good) {\r\n    if (side === 'player') next.score.player += 3; else next.score.ai += 3;\r\n    events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 3), kind: 'FG' } });\r\n    const hash = deps.randomHash();\r\n    const brad = `Field goal from ${attemptYards}, ${hash} — it is good. HOME ${next.score.player} — AWAY ${next.score.ai}, Q${next.quarter} ${deps.formatClock(next.clock)}`;\r\n    const rob = 'Clean snap, clean hold; good rotation on the ball.';\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    const ko = deps.performKickoff(next, 'normal', side);\r\n    next = ko.state as any;\r\n    events.push(...ko.events);\r\n  } else {\r\n    const miss = deps.missedFieldGoalSpot({ ballOn: next.ballOn, possessing: side }, attemptYards);\r\n    next.possession = miss.possession as TeamSide;\r\n    next.ballOn = miss.ballOn;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    const spotEnd = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    const hash = deps.randomHash();\r\n    const brad = `Field goal from ${attemptYards}, ${hash} — no good. ${next.possession === 'player' ? 'HOME' : 'AWAY'} ball at ${spotEnd}.`;\r\n    const rob = 'Snap and hold were fine — just yanked it.';\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  }\r\n  events.push({ type: 'hud', payload: deps.hudPayload(next) });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState } from '../../domain/GameState';\r\nimport type { AdminResult } from '../../rules/PenaltyAdmin';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function finalizePenaltyDecision(\r\n  chosen: GameState,\r\n  decision: 'accept'|'decline',\r\n  meta: AdminResult['adminMeta'],\r\n  deps: {\r\n    formatOrdinal: (n: number) => string;\r\n    hudPayload: (s: GameState) => any;\r\n  },\r\n  info?: { on: 'offense'|'defense'; yards: number }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...chosen } as GameState & { untimedDownScheduled?: boolean };\r\n  try {\r\n    const on = info?.on || 'defense';\r\n    const yards = info?.yards || 0;\r\n    const downText = `${deps.formatOrdinal(next.down)} & ${next.toGo}`;\r\n    const msg = decision === 'accept'\r\n      ? `Penalty on ${on}, ${yards} yards — accepted; now ${downText}`\r\n      : `Penalty on ${on}, ${yards} yards — declined; play stands; now ${downText}`;\r\n    events.push({ type: 'log', message: msg });\r\n  } catch {}\r\n  if (meta.untimedDownScheduled) {\r\n    (next as any).untimedDownScheduled = true;\r\n    events.push({ type: 'log', message: 'Untimed down will be played due to defensive penalty.' });\r\n  }\r\n  if (!next.gameOver && !next.awaitingPAT) {\r\n    const untimedNow = Boolean((next as any).untimedDownScheduled);\r\n    if (next.clock === 0 && !untimedNow) {\r\n      const endedQuarter = next.quarter;\r\n      events.push({ type: 'endOfQuarter', payload: { quarter: endedQuarter } });\r\n      events.push({ type: 'log', message: `End of Q${endedQuarter} — HOME ${next.score.player} — AWAY ${next.score.ai}` });\r\n      if (endedQuarter === 2) {\r\n        events.push({ type: 'halftime' });\r\n        next.quarter = 3;\r\n        next.clock = 15 * 60;\r\n      } else if (endedQuarter === 4) {\r\n        next.gameOver = true;\r\n        events.push({ type: 'final', payload: { score: next.score } });\r\n      } else {\r\n        next.quarter = endedQuarter + 1;\r\n        next.clock = 15 * 60;\r\n      }\r\n    }\r\n  }\r\n  events.push({ type: 'hud', payload: deps.hudPayload(next) });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function resolveSafetyRestart(\r\n  state: GameState,\r\n  conceding: TeamSide,\r\n  deps: {\r\n    chooseSafetyFreeKick?: (ctx: { leading: boolean }) => 'kickoff+25'|'puntFrom20';\r\n    isLeading: (side: TeamSide, score: GameState['score']) => boolean;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState;\r\n  const leading = deps.isLeading(conceding === 'player' ? 'ai' : 'player', next.score);\r\n  const choice = deps.chooseSafetyFreeKick?.({ leading }) ?? 'kickoff+25';\r\n  const kicking: TeamSide = conceding;\r\n  if (choice === 'kickoff+25') {\r\n    const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n    const abs = receiver === 'player' ? 25 : 75;\r\n    next.possession = receiver;\r\n    next.ballOn = abs;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    events.push({ type: 'kickoff', payload: { onside: false } });\r\n  } else {\r\n    const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n    const abs = receiver === 'player' ? 35 : 65;\r\n    next.possession = receiver;\r\n    next.ballOn = abs;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    events.push({ type: 'kickoff', payload: { onside: false } });\r\n  }\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\n\r\nexport function hudPayload(s: GameState) {\r\n  return {\r\n    quarter: s.quarter,\r\n    clock: s.clock,\r\n    down: s.down,\r\n    toGo: s.toGo,\r\n    ballOn: s.ballOn,\r\n    possession: s.possession,\r\n    score: { player: s.score.player, ai: s.score.ai },\r\n  };\r\n}\r\n\r\n\r\n","import type { TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport { rollD6 as rollD6PK, PLACE_KICK_TABLE } from '../../rules/special/PlaceKicking';\r\n\r\n/**\r\n * Utility functions for game flow operations\r\n * Contains helper functions for game state calculations, formatting, and game logic\r\n */\r\n\r\n/**\r\n * Determines if the game is in two-minute warning territory\r\n * @param quarter - Current quarter (1-4)\r\n * @param clock - Current clock time in seconds\r\n * @returns True if in two-minute warning period\r\n */\r\nexport function isTwoMinute(quarter: number, clock: number): boolean {\r\n  return (quarter === 2 || quarter === 4) && clock <= 120;\r\n}\r\n\r\n/**\r\n * Clamps a yard line position to valid field range (0-100)\r\n * @param abs - Absolute yard position\r\n * @returns Clamped yard position\r\n */\r\nexport function clampYard(abs: number): number {\r\n  return Math.max(0, Math.min(100, abs));\r\n}\r\n\r\n/**\r\n * Returns the standard down and distance after a kickoff\r\n * @returns Down and distance object\r\n */\r\nexport function nextDownDistanceAfterKickoff(): Pick<import('../../domain/GameState').GameState, 'down'|'toGo'> {\r\n  return { down: 1, toGo: 10 } as const;\r\n}\r\n\r\n/**\r\n * Converts a scoring side and points to score deltas for both teams\r\n * @param side - Team that scored\r\n * @param points - Points scored\r\n * @returns Score deltas for both teams\r\n */\r\nexport function scoringSideToDelta(side: TeamSide, points: number): { playerDelta: number; aiDelta: number } {\r\n  return side === 'player' ? { playerDelta: points, aiDelta: 0 } : { playerDelta: 0, aiDelta: points };\r\n}\r\n\r\n/**\r\n * Attempts a PAT (Point After Touchdown) using place kicking rules\r\n * @param rng - Random number generator\r\n * @returns True if PAT is successful\r\n */\r\nexport function attemptPatInternal(rng: RNG): boolean {\r\n  // 2D6 using place kicking table's PAT column\r\n  const roll = rollD6PK(rng) + rollD6PK(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {} as any;\r\n  return row.PAT === 'G';\r\n}\r\n\r\n/**\r\n * Generates a random hash mark position for kickoffs or field goals\r\n * @param rng - Random number generator (optional, uses Math.random if not provided)\r\n * @returns Hash mark position string\r\n */\r\nexport function randomHash(rng: RNG): 'left hash'|'right hash'|'middle' {\r\n  const r = rng();\r\n  if (r < 0.45) return 'left hash';\r\n  if (r < 0.9) return 'right hash';\r\n  return 'middle';\r\n}\r\n\r\n/**\r\n * Determines if a team is leading based on current score\r\n * @param side - Team side to check\r\n * @param score - Current game score\r\n * @returns True if the specified team is leading\r\n */\r\nexport function isLeading(side: TeamSide, score: { player: number; ai: number }): boolean {\r\n  const diff = score.player - score.ai;\r\n  return (side === 'player' ? diff : -diff) > 0;\r\n}\r\n\r\n/**\r\n * Determines if a team is trailing based on current score\r\n * @param side - Team side to check\r\n * @param score - Current game score\r\n * @returns True if the specified team is trailing\r\n */\r\nexport function isTrailing(side: TeamSide, score: { player: number; ai: number }): boolean {\r\n  const diff = score.player - score.ai;\r\n  return (side === 'player' ? diff : -diff) < 0;\r\n}\r\n\r\n/**\r\n * Determines if the game is tied\r\n * @param score - Current game score\r\n * @returns True if teams are tied\r\n */\r\nexport function isTied(score: { player: number; ai: number }): boolean {\r\n  return score.player === score.ai;\r\n}\r\n\r\n/**\r\n * Default AI logic for determining if team should go for two-point conversion\r\n * @param ctx - Game context including score differential, quarter, and clock\r\n * @returns True if AI should attempt two-point conversion\r\n */\r\nexport function defaultAIShouldGoForTwo(ctx: { diff: number; quarter: number; clock: number }): boolean {\r\n  const late = ctx.quarter === 4 && ctx.clock <= 5 * 60;\r\n  // Trailing by 1 or 2 late\r\n  if (ctx.diff < 0 && -ctx.diff <= 2 && late) return true;\r\n  return false;\r\n}\r\n","import type { TeamSide } from '../../domain/GameState';\r\n\r\n/**\r\n * Formatting utilities for game flow operations\r\n * Contains functions for formatting game state information for display\r\n */\r\n\r\n/**\r\n * Formats a down number as an ordinal string\r\n * @param n - Down number (1-4, or higher for overtime)\r\n * @returns Formatted ordinal string (e.g., \"1st\", \"2nd\", \"3rd\", \"4th\")\r\n */\r\nexport function formatOrdinal(n: number): string {\r\n  if (n === 1) return '1st';\r\n  if (n === 2) return '2nd';\r\n  if (n === 3) return '3rd';\r\n  return `${Math.max(1, Math.min(4, n))}th`;\r\n}\r\n\r\n/**\r\n * Formats clock time in seconds to MM:SS format\r\n * @param totalSeconds - Time in seconds\r\n * @returns Formatted time string (e.g., \"15:00\", \"3:45\")\r\n */\r\nexport function formatClock(totalSeconds: number): string {\r\n  const m = Math.floor(Math.max(0, totalSeconds) / 60);\r\n  const s = Math.floor(Math.max(0, totalSeconds) % 60);\r\n  const ss = s < 10 ? `0${s}` : String(s);\r\n  return `${m}:${ss}`;\r\n}\r\n\r\n/**\r\n * Formats a score and anchor line for broadcast commentary\r\n * @param s - Current game state\r\n * @returns Formatted anchor line string\r\n */\r\nexport function scoreAnchorLine(s: { score: { player: number; ai: number }; quarter: number; clock: number }): string {\r\n  return `Anchor — HOME ${s.score.player} — AWAY ${s.score.ai} — Q${s.quarter} ${formatClock(s.clock)}`;\r\n}\r\n\r\n/**\r\n * Formats possession spot for broadcast commentary\r\n * @param possessing - Team with possession\r\n * @param ballOn - Ball position (0-100)\r\n * @returns Formatted possession spot string\r\n */\r\nexport function formatPossessionSpotForBroadcast(possessing: TeamSide, ballOn: number): string {\r\n  const own = (possessing === 'player') ? (ballOn <= 50) : (ballOn >= 50);\r\n  const yards = (possessing === 'player') ? (ballOn <= 50 ? Math.max(1, ballOn) : Math.max(1, 100 - ballOn)) : (ballOn >= 50 ? Math.max(1, 100 - ballOn) : Math.max(1, ballOn));\r\n  return own ? `their own ${yards}` : `the ${yards}`;\r\n}\r\n\r\n/**\r\n * Formats team and yard line for display\r\n * @param possessing - Team with possession\r\n * @param ballOn - Ball position (0-100)\r\n * @returns Formatted yard line string (e.g., \"HOME 25\", \"AWAY 35\")\r\n */\r\nexport function formatTeamYardLine(possessing: TeamSide, ballOn: number): string {\r\n  const clamp = (n: number) => Math.max(1, Math.min(50, n));\r\n  if (possessing === 'player') {\r\n    if (ballOn <= 50) return `HOME ${clamp(ballOn)}`;\r\n    return `AWAY ${clamp(100 - ballOn)}`;\r\n  } else {\r\n    if (ballOn >= 50) return `AWAY ${clamp(100 - ballOn)}`;\r\n    return `HOME ${clamp(ballOn)}`;\r\n  }\r\n}\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { TimeKeeping } from '../../data/schemas/Timekeeping';\r\nimport { timeOffWithTwoMinute } from '../../rules/Timekeeping';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport { DEFAULT_TIME_KEEPING } from '../../rules/ResultParsing';\r\nimport { isTwoMinute } from '../utils/GameFlowUtils';\r\n\r\n/**\r\n * Time management utilities for game flow operations\r\n * Handles clock management, tempo decisions, and time-related game logic\r\n */\r\n\r\n/**\r\n * Context for tempo decision making\r\n */\r\nexport interface TempoContext {\r\n  quarter: number;\r\n  clock: number;\r\n  diff: number; // Score differential (positive if player is leading)\r\n  side: TeamSide;\r\n}\r\n\r\n/**\r\n * Available tempo strategies\r\n */\r\nexport type TempoStrategy = 'normal' | 'hurry_up' | 'burn_clock' | 'no_huddle';\r\n\r\n/**\r\n * Time management result containing time adjustments and flags\r\n */\r\nexport interface TimeManagementResult {\r\n  timeOff: number;\r\n  crossedTwoMinute: boolean;\r\n}\r\n\r\n/**\r\n * Calculates time to be taken off the clock for a play\r\n * Handles two-minute warning, tempo adjustments, and special cases\r\n * @param pre - Game state before the play\r\n * @param outcome - Play outcome\r\n * @param timeKeeping - Time keeping configuration\r\n * @param tempo - Tempo strategy to apply\r\n * @param hadUntimed - Whether this was an untimed down\r\n * @returns Time management result\r\n */\r\nexport function calculateTimeOff(\r\n  pre: GameState,\r\n  outcome: Outcome | undefined,\r\n  timeKeeping: TimeKeeping | undefined,\r\n  tempo: TempoStrategy,\r\n  hadUntimed: boolean = false,\r\n  possessionChanged?: boolean\r\n): TimeManagementResult {\r\n  if (hadUntimed) {\r\n    return { timeOff: 0, crossedTwoMinute: false };\r\n  }\r\n\r\n  const inTwoBefore = isTwoMinute(pre.quarter, pre.clock);\r\n  let timeOff = 0;\r\n  let crossedTwoMinute = false;\r\n\r\n  // Calculate base time off\r\n  if (outcome) {\r\n    const wasFirstDown = !possessionChanged &&\r\n      outcome.category === 'gain' &&\r\n      (outcome.yards || 0) > 0 &&\r\n      (outcome.yards || 0) >= pre.toGo;\r\n\r\n    const tk = timeKeeping || DEFAULT_TIME_KEEPING;\r\n    timeOff = timeOffWithTwoMinute(outcome, inTwoBefore, wasFirstDown, tk);\r\n  }\r\n\r\n  // Apply tempo adjustments\r\n  if (tempo === 'hurry_up' || tempo === 'no_huddle') {\r\n    timeOff = Math.max(5, Math.floor(timeOff * 0.7));\r\n  } else if (tempo === 'burn_clock') {\r\n    if (outcome && (outcome.category === 'gain' || outcome.category === 'loss')) {\r\n      timeOff = Math.max(timeOff, 35);\r\n      timeOff = Math.min(timeOff, 40);\r\n    }\r\n  }\r\n\r\n  // Handle two-minute warning\r\n  if ((pre.quarter === 2 || pre.quarter === 4) && pre.clock > 120 && pre.clock - timeOff < 120) {\r\n    timeOff = pre.clock - 120;\r\n    crossedTwoMinute = true;\r\n  }\r\n\r\n  return { timeOff, crossedTwoMinute };\r\n}\r\n\r\n/**\r\n * Applies time management result to game state\r\n * @param state - Current game state\r\n * @param timeResult - Time management result\r\n * @returns Updated game state with new clock time\r\n */\r\nexport function applyTimeOff(state: GameState, timeResult: TimeManagementResult): GameState {\r\n  const next = { ...state };\r\n  next.clock = Math.max(0, state.clock - timeResult.timeOff);\r\n  return next;\r\n}\r\n\r\n/**\r\n * Determines tempo strategy based on game situation and policy\r\n * @param ctx - Game context\r\n * @param policy - Optional tempo policy function\r\n * @returns Recommended tempo strategy\r\n */\r\nexport function determineTempo(\r\n  ctx: TempoContext,\r\n  policy?: (ctx: TempoContext) => TempoStrategy\r\n): TempoStrategy {\r\n  if (policy) {\r\n    return policy(ctx);\r\n  }\r\n\r\n  // Default tempo logic\r\n  const lateGame = ctx.quarter >= 3;\r\n  const trailing = ctx.diff < 0;\r\n  const leading = ctx.diff > 0;\r\n\r\n  // Late game situations\r\n  if (lateGame && ctx.clock <= 300) { // Last 5 minutes\r\n    if (trailing && Math.abs(ctx.diff) <= 8) {\r\n      return 'hurry_up'; // Trailing team hurries up\r\n    } else if (leading && Math.abs(ctx.diff) <= 14) {\r\n      return 'burn_clock'; // Leading team burns clock\r\n    }\r\n  }\r\n\r\n  // Two-minute drill\r\n  if (isTwoMinute(ctx.quarter, ctx.clock)) {\r\n    if (trailing) return 'hurry_up';\r\n    if (leading) return 'burn_clock';\r\n  }\r\n\r\n  return 'normal';\r\n}\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport { resolvePlayCore } from '../../rules/ResolvePlayCore';\r\nimport { administerPenalty, type AdminResult } from '../../rules/PenaltyAdmin';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport { DEFAULT_TIME_KEEPING as DEFAULT_TIME_KEEPING_CONST } from '../../rules/ResultParsing';\r\nimport { buildBroadcastCall as buildBroadcastCallExt, chooseCommentaryLines as chooseCommentaryLinesExt } from '../narration/Broadcast';\r\nimport { buildResultSummary as buildResultSummaryExt } from '../narration/Summary';\r\nimport { DriveTracker } from '../drive/DriveTracker';\r\nimport { performKickoff as performKickoffExt, handleFourthDownPunt } from '../special/SpecialTeamsFlow';\r\nimport { resolvePATAndRestart as resolvePATAndRestartExt, attemptFieldGoal as attemptFieldGoalFlow } from '../scoring/Scoring';\r\nimport { attemptFieldGoal as attemptFieldGoalKick } from '../../rules/special/PlaceKicking';\r\nimport { missedFieldGoalSpot } from '../../rules/Spots';\r\nimport { finalizePenaltyDecision as finalizePenaltyDecisionExt } from '../penalties/PenaltyFlow';\r\nimport { resolveSafetyRestart as resolveSafetyRestartExt } from '../special/Safety';\r\nimport { hudPayload as hudPayloadExt } from '../HudPayload';\r\nimport type { FlowEvent, PlayInput, FlowContext } from '../types';\r\nimport {\r\n  isTwoMinute,\r\n  scoringSideToDelta,\r\n  attemptPatInternal,\r\n  randomHash,\r\n  isLeading,\r\n  isTrailing,\r\n  isTied\r\n} from '../utils/GameFlowUtils';\r\nimport {\r\n  formatOrdinal,\r\n  formatClock,\r\n  formatPossessionSpotForBroadcast,\r\n  formatTeamYardLine\r\n} from '../formatting/GameFlowFormatting';\r\nimport {\r\n  calculateTimeOff,\r\n  applyTimeOff,\r\n  determineTempo,\r\n  type TempoContext,\r\n  type TempoStrategy\r\n} from '../time/TimeManagement';\r\n\r\n/**\r\n * Core game flow orchestration logic\r\n * Main class that coordinates all aspects of game flow including plays, scoring, penalties, and time management\r\n */\r\nexport class GameFlowCore {\r\n  constructor(private ctx: FlowContext) {\r\n    this.tracker = new DriveTracker(this.ctx.rng);\r\n  }\r\n\r\n  // Drive/quarter/narration memory encapsulated in tracker\r\n  private tracker: DriveTracker;\r\n\r\n  /**\r\n   * Resolves a snap (play) and returns the resulting game state and events\r\n   * This is the main orchestration method that handles play resolution, penalties, scoring, and time management\r\n   * @param state - Current game state\r\n   * @param input - Play input containing deck, play label, and defense\r\n   * @returns Updated game state and generated events\r\n   */\r\n  resolveSnap(state: GameState, input: PlayInput): { state: GameState; events: FlowEvent[] } {\r\n    const events: FlowEvent[] = [];\r\n\r\n    // Respect untimed down scheduling: if present, do not advance time this snap\r\n    const hadUntimed = Boolean((state as any).untimedDownScheduled);\r\n\r\n    const pre = { ...state };\r\n    const isPuntCard = /punt/i.test(String(input.playLabel));\r\n    const res = resolvePlayCore({ state: pre, charts: this.ctx.charts, deckName: input.deckName, playLabel: input.playLabel, defenseLabel: input.defenseLabel, rng: this.ctx.rng });\r\n    const possessionChanged = (res as any).possessionChanged;\r\n\r\n    // Start new drive capsule if possession changed from last snap\r\n    this.beginDriveIfNeeded(pre, events);\r\n\r\n    // Penalty handling: branch to accept/decline flow\r\n    if ((res as any).outcome && (res as any).outcome.category === 'penalty' && (res as any).outcome.penalty) {\r\n      return this.handlePenalty(pre, res as any, events);\r\n    }\r\n\r\n    let next = { ...res.state } as GameState & { openingKickTo?: TeamSide; untimedDownScheduled?: boolean };\r\n\r\n    // Compute time management\r\n    const tempo = this.determineTempoForPlay(pre);\r\n    const timeResult = calculateTimeOff(pre, res.outcome as Outcome, this.ctx.timeKeeping, tempo, hadUntimed, possessionChanged);\r\n    next = applyTimeOff(next, timeResult);\r\n\r\n    // Handle two-minute warning\r\n    if (timeResult.crossedTwoMinute) {\r\n      events.push({ type: 'log', message: `Two-minute warning.` });\r\n      events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n    }\r\n\r\n    // Narrate play result BEFORE handling follow-up sequences (PAT, kickoff) to keep chronological order\r\n    this.narratePlayResult(pre, next, input, res as any, events, isPuntCard);\r\n\r\n    // Update last-note memory for deduplication (zone, FG range, defense) based on pre-snap state\r\n    this.updateLastNotes(pre, input);\r\n\r\n    // Handle punts explicitly for narration and field position if punt card was chosen\r\n    if (!next.gameOver && !res.touchdown && !res.safety && isPuntCard && pre.down === 4) {\r\n      const handled = handleFourthDownPunt(pre, next, {\r\n        rng: this.ctx.rng,\r\n        formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n        endDriveSummaryIfAny: (s, ev, reason) => this.endDriveSummaryIfAny(s, ev, reason),\r\n      });\r\n      return { state: handled.state, events: [...events, ...handled.events] };\r\n    }\r\n\r\n    // Handle scoring sequences\r\n    if (res.touchdown) {\r\n      return this.handleTouchdown(pre, next, events);\r\n    } else if (res.safety) {\r\n      return this.handleSafety(pre, next, events);\r\n    }\r\n\r\n    // Turnover on downs: if it was 4th down and offense did not achieve a first down\r\n    if (!next.gameOver && !res.touchdown && !res.safety && !possessionChanged) {\r\n      if (this.isTurnoverOnDowns(pre, res.outcome as Outcome)) {\r\n        return this.handleTurnoverOnDowns(pre, next, events);\r\n      }\r\n    }\r\n\r\n    // Period transitions if not just kicked off due to scoring (kickoff logic will set down/toGo and time separately)\r\n    if (!next.gameOver && !next.awaitingPAT) {\r\n      if (next.clock === 0 && !Boolean(next.untimedDownScheduled)) {\r\n        return this.handleQuarterTransition(next, events);\r\n      }\r\n    }\r\n\r\n    events.push({ type: 'hud', payload: this.hudPayload(next) });\r\n    return { state: next, events };\r\n  }\r\n\r\n  /**\r\n   * Finalizes a penalty decision and returns the resulting state and events\r\n   * @param chosen - The chosen game state (accepted or declined penalty)\r\n   * @param decision - Whether penalty was accepted or declined\r\n   * @param meta - Penalty administration metadata\r\n   * @param info - Optional penalty information\r\n   * @returns Updated game state and events\r\n   */\r\n  finalizePenaltyDecision(chosen: GameState, decision: 'accept'|'decline', meta: AdminResult['adminMeta'], info?: { on: 'offense'|'defense'; yards: number }): { state: GameState; events: FlowEvent[] } {\r\n    return finalizePenaltyDecisionExt(chosen, decision, meta, {\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      hudPayload: (s) => this.hudPayload(s)\r\n    }, info);\r\n  }\r\n\r\n  /**\r\n   * Resolves PAT (Point After Touchdown) and restart logic\r\n   * @param state - Current game state\r\n   * @param side - Team that scored\r\n   * @returns Updated game state and events\r\n   */\r\n  resolvePATAndRestart(state: GameState, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return resolvePATAndRestartExt(state, side, {\r\n      rng: () => this.ctx.rng?.() ?? (() => { throw new Error('RNG not provided'); })(),\r\n      attemptPatInternal: (r) => attemptPatInternal(r as any),\r\n      scoringSideToDelta: (s, p) => scoringSideToDelta(s, p),\r\n      isTrailing: (s, score) => isTrailing(s, score),\r\n      performKickoff: (st, type, kicking) => this.performKickoff(st, type, kicking),\r\n      ...(this.ctx.policy?.choosePAT ? { choosePAT: this.ctx.policy.choosePAT.bind(this.ctx.policy) } : {}),\r\n      ...(this.ctx.policy?.chooseKickoffType ? { chooseKickoffType: this.ctx.policy.chooseKickoffType.bind(this.ctx.policy) } : {}),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attempts a field goal\r\n   * @param state - Current game state\r\n   * @param attemptYards - Distance of field goal attempt\r\n   * @param side - Team attempting the field goal\r\n   * @returns Updated game state and events\r\n   */\r\n  attemptFieldGoal(state: GameState, attemptYards: number, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return attemptFieldGoalFlow(state, attemptYards, side, {\r\n      rng: () => this.ctx.rng?.() ?? (() => { throw new Error('RNG not provided'); })(),\r\n      attemptFieldGoalKick: (r, y) => attemptFieldGoalKick(r as any, y),\r\n      scoringSideToDelta: (s, p) => scoringSideToDelta(s, p),\r\n      randomHash: () => randomHash(this.ctx.rng!),\r\n      formatClock: (n) => formatClock(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      performKickoff: (st, type, kicking) => this.performKickoff(st, type, kicking),\r\n      hudPayload: (s) => this.hudPayload(s),\r\n      timeKeepingFieldGoalSeconds: (this.ctx.timeKeeping || DEFAULT_TIME_KEEPING_CONST).fieldgoal,\r\n      missedFieldGoalSpot: (args, y) => missedFieldGoalSpot(args as any, y),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resolves safety restart after a safety\r\n   * @param state - Current game state\r\n   * @param conceding - Team that conceded the safety\r\n   * @returns Updated game state and events\r\n   */\r\n  resolveSafetyRestart(state: GameState, conceding: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return resolveSafetyRestartExt(state, conceding, {\r\n      ...(this.ctx.policy?.chooseSafetyFreeKick ? { chooseSafetyFreeKick: this.ctx.policy.chooseSafetyFreeKick.bind(this.ctx.policy) } : {}),\r\n      isLeading: (s, score) => isLeading(s, score),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Performs a kickoff\r\n   * @param state - Current game state\r\n   * @param type - Type of kickoff (normal or onside)\r\n   * @param kicking - Team performing the kickoff\r\n   * @returns Updated game state and events\r\n   */\r\n  performKickoff(state: GameState, type: 'normal'|'onside', kicking: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return performKickoffExt(state, type, kicking, {\r\n      rng: this.ctx.rng,\r\n      timeKeeping: this.ctx.timeKeeping,\r\n      isLeading: (s, score) => isLeading(s, score),\r\n      isTied: (score) => isTied(score),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n    });\r\n  }\r\n\r\n  // Private helper methods\r\n\r\n  private beginDriveIfNeeded(state: GameState, events: FlowEvent[]): void {\r\n    this.tracker.beginDriveIfNeeded(state, events, (p, b) => formatTeamYardLine(p, b));\r\n  }\r\n\r\n  private endDriveSummaryIfAny(state: GameState, events: FlowEvent[], reason: string): void {\r\n    this.tracker.endDriveSummaryIfAny(state, events, reason);\r\n  }\r\n\r\n  private hudPayload(s: GameState) {\r\n    return hudPayloadExt(s);\r\n  }\r\n\r\n  private determineTempoForPlay(pre: GameState): TempoStrategy {\r\n    const preDiff = pre.score.player - pre.score.ai;\r\n    const tempoCtx: TempoContext = {\r\n      quarter: pre.quarter,\r\n      clock: pre.clock,\r\n      diff: (pre.possession === 'player') ? preDiff : -preDiff,\r\n      side: pre.possession\r\n    };\r\n\r\n    return this.ctx.policy?.chooseTempo ?\r\n      this.ctx.policy.chooseTempo(tempoCtx) as TempoStrategy :\r\n      determineTempo(tempoCtx);\r\n  }\r\n\r\n  private handlePenalty(pre: GameState, res: any, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const outcome: any = res.outcome;\r\n    const admin: AdminResult = administerPenalty({\r\n      prePlayState: pre,\r\n      postPlayState: pre,\r\n      offenseGainedYards: 0,\r\n      outcome,\r\n      inTwoMinute: isTwoMinute(pre.quarter, pre.clock),\r\n      wasFirstDownOnPlay: false,\r\n    });\r\n\r\n    const pen = outcome.penalty as { on: 'offense'|'defense'; yards: number; firstDown?: boolean };\r\n    const decidingSide: TeamSide = pen.on === 'defense' ? pre.possession : (pre.possession === 'player' ? 'ai' : 'player');\r\n\r\n    // If AI decides, pick immediately using hint (default accept on tie)\r\n    if (decidingSide === 'ai') {\r\n      const decision: 'accept'|'decline' = admin.decisionHint === 'decline' ? 'decline' : 'accept';\r\n      const fin = this.finalizePenaltyDecision(decision === 'accept' ? admin.accepted : admin.declined, decision, admin.adminMeta, { on: pen.on, yards: pen.yards });\r\n      const nextState = fin.state as GameState & { openingKickTo?: TeamSide; untimedDownScheduled?: boolean };\r\n      events.push(...fin.events);\r\n      events.push({ type: 'hud', payload: this.hudPayload(nextState) });\r\n      return { state: nextState, events };\r\n    }\r\n\r\n    // Human decides: emit choice-required and hold state\r\n    const payload = {\r\n      side: 'player' as const,\r\n      summary: { down: pre.down, toGo: pre.toGo, ballOn: pre.ballOn, quarter: pre.quarter, clock: pre.clock, possession: pre.possession },\r\n      prePlay: { down: pre.down, toGo: pre.toGo, ballOn: pre.ballOn },\r\n      accepted: admin.accepted,\r\n      declined: admin.declined,\r\n      penalty: { on: pen.on, yards: pen.yards, firstDown: pen.firstDown },\r\n      meta: {\r\n        halfDistanceCapped: admin.adminMeta.halfDistanceCapped,\r\n        measuredFromMidfieldForLG: admin.adminMeta.measuredFromMidfieldForLG,\r\n        spotBasis: admin.adminMeta.spotBasis,\r\n        untimedDownScheduled: admin.adminMeta.untimedDownScheduled,\r\n      },\r\n    };\r\n    events.push({ type: 'choice-required', choice: 'penaltyAcceptDecline', data: payload });\r\n    events.push({ type: 'hud', payload: this.hudPayload(pre) });\r\n    return { state: pre, events };\r\n  }\r\n\r\n  private narratePlayResult(pre: GameState, next: GameState, input: PlayInput, res: any, events: FlowEvent[], isPuntCard: boolean): void {\r\n    try {\r\n      // Skip generic summary for explicit punt handling to avoid duplication and misleading 'Play' result\r\n      const puntSummarySkip = isPuntCard && pre.down === 4;\r\n      if (!puntSummarySkip) {\r\n        const summary = this.buildResultSummary(pre, next, res.outcome as Outcome | undefined, { td: Boolean(res.touchdown), safety: Boolean(res.safety) }, String(input.playLabel), String(input.defenseLabel));\r\n        this.tracker.incrementPlayInDrive();\r\n        this.tracker.incrementRunOrPassByLabel(String(input.playLabel || ''));\r\n        const call = this.buildBroadcastCall(pre, next, input, res.outcome as any);\r\n        events.push({ type: 'log', message: `Brad: ${call.pbp}` });\r\n        if (call.analyst && call.analyst.trim()) events.push({ type: 'log', message: `Rob: ${call.analyst}` });\r\n        events.push({ type: 'log', message: '────────' });\r\n      }\r\n    } catch (error) {\r\n      // Silently handle narration errors to prevent game flow interruption\r\n    }\r\n  }\r\n\r\n  private updateLastNotes(pre: GameState, input: PlayInput): void {\r\n    try {\r\n      const yardsToGoal = pre.possession === 'player' ? (100 - pre.ballOn) : pre.ballOn;\r\n      const abs = pre.ballOn;\r\n      const acrossMid = (pre.possession === 'player') ? abs >= 50 : abs <= 50;\r\n      const nearMid = abs >= 45 && abs <= 55;\r\n      const backedUp = (pre.possession === 'player') ? abs <= 10 : abs >= 90;\r\n      let zone: string | null = null;\r\n      if (yardsToGoal <= 10 && pre.toGo >= yardsToGoal) zone = 'GoalToGo';\r\n      else if (yardsToGoal <= 20) zone = 'RedZone';\r\n      else if (nearMid) zone = 'NearMid';\r\n      else if (acrossMid) zone = 'AcrossMid';\r\n      else if (backedUp) zone = 'BackedUp';\r\n      const inRange = (yardsToGoal + 17) <= 45;\r\n      this.tracker.setLastNotesForSide(pre.possession, { zone, fgInRange: inRange, defense: String(input.defenseLabel || '') });\r\n    } catch (error) {\r\n      // Silently handle note update errors\r\n    }\r\n  }\r\n\r\n  private handleTouchdown(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    next.awaitingPAT = true;\r\n    const side: TeamSide = pre.possession;\r\n    events.push({ type: 'log', message: 'Touchdown!' });\r\n    events.push({ type: 'score', payload: { ...scoringSideToDelta(side, 6), kind: 'TD' } });\r\n    events.push({ type: 'vfx', payload: { kind: 'td' } });\r\n    const pat = this.resolvePATAndRestart(next, side);\r\n    next = pat.state as any;\r\n    events.push(...pat.events);\r\n    events.push({ type: 'log', message: `Brad: Scoreboard — HOME ${next.score.player} — AWAY ${next.score.ai} — Q${next.quarter} ${formatClock(next.clock)}` });\r\n    events.push({ type: 'log', message: '────────' });\r\n    this.endDriveSummaryIfAny(next, events, 'touchdown');\r\n    return { state: next, events };\r\n  }\r\n\r\n  private handleSafety(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const conceding: TeamSide = pre.possession;\r\n    const scoringSide: TeamSide = conceding === 'player' ? 'ai' : 'player';\r\n    events.push({ type: 'log', message: 'Brad: Safety!' });\r\n    events.push({ type: 'score', payload: { ...scoringSideToDelta(scoringSide, 2), kind: 'Safety' } });\r\n    events.push({ type: 'log', message: `Brad: Scoreboard — HOME ${ (scoringSide==='player'? next.score.player+2: next.score.player) } — AWAY ${ (scoringSide==='ai'? next.score.ai+2: next.score.ai) } — safety awarded` });\r\n    const safetyRes = this.resolveSafetyRestart(next, conceding);\r\n    next = safetyRes.state as any;\r\n    events.push(...safetyRes.events);\r\n    events.push({ type: 'log', message: '────────' });\r\n    this.endDriveSummaryIfAny(next, events, 'safety');\r\n    return { state: next, events };\r\n  }\r\n\r\n  private isTurnoverOnDowns(pre: GameState, outcome: Outcome | undefined): boolean {\r\n    if (pre.down !== 4 || !outcome) return false;\r\n\r\n    return (\r\n      outcome.category === 'incomplete' ||\r\n      ((outcome.category === 'loss' || outcome.category === 'gain') && (outcome.yards || 0) < pre.toGo)\r\n    );\r\n  }\r\n\r\n  private handleTurnoverOnDowns(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const spot = formatTeamYardLine(pre.possession, pre.ballOn);\r\n    events.push({ type: 'log', message: `Brad: ${formatOrdinal(pre.down)} & ${pre.toGo} — stuffed — turnover on downs at ${spot}` });\r\n    next.possession = pre.possession === 'player' ? 'ai' : 'player';\r\n    next.down = 1; next.toGo = 10;\r\n    this.endDriveSummaryIfAny(next, events, 'downs');\r\n    events.push({ type: 'log', message: '────────' });\r\n    return { state: next, events };\r\n  }\r\n\r\n  private handleQuarterTransition(next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const endedQuarter = next.quarter;\r\n    events.push({ type: 'endOfQuarter', payload: { quarter: endedQuarter } });\r\n\r\n    // Quarter recap: short narrative with basic stats\r\n    try {\r\n      const qs = this.tracker.getQuarterStatsRef();\r\n      const runs = qs.runs;\r\n      const passes = qs.passes;\r\n      const s = `End of Q${endedQuarter} — HOME ${next.score.player} — AWAY ${next.score.ai}.`;\r\n      const brad = `${s} Pace so far: ${runs} runs, ${passes} passes.`;\r\n      const rob = (runs > passes) ? 'Ground games setting tone; watch for play action next quarter.' : (passes > runs ? 'Air it out approach; watch the pass rush fatigue.' : 'Balanced so far; both sides settling in.');\r\n      events.push({ type: 'log', message: `Brad: ${brad}` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    } catch (error) {\r\n      // Silently handle quarter recap errors\r\n    }\r\n\r\n    // Reset quarter counters\r\n    const qs = this.tracker.getQuarterStatsRef();\r\n    qs.quarter = endedQuarter + 1;\r\n    qs.runs = 0; qs.passes = 0; qs.pointsHome = 0; qs.pointsAway = 0; qs.explosives = 0; qs.turnovers = 0;\r\n\r\n    if (endedQuarter === 2) {\r\n      // Halftime then start Q3 with kickoff\r\n      events.push({ type: 'halftime' });\r\n      events.push({ type: 'log', message: 'Start of quarter 3.' });\r\n      next.quarter = 3;\r\n      next.clock = 15 * 60;\r\n      const openingReceiver: TeamSide = (next as any).openingKickTo || 'player';\r\n      const kickTeam: TeamSide = openingReceiver;\r\n      const ko = this.performKickoff(next, 'normal', kickTeam);\r\n      next = ko.state as any;\r\n      events.push(...ko.events);\r\n    } else if (endedQuarter === 4) {\r\n      next.gameOver = true;\r\n      events.push({ type: 'final', payload: { score: next.score } });\r\n    } else {\r\n      // Q1->Q2 or Q3->Q4\r\n      events.push({ type: 'log', message: `Brad: Start of quarter ${endedQuarter + 1}.` });\r\n      next.quarter = endedQuarter + 1;\r\n      next.clock = 15 * 60;\r\n    }\r\n\r\n    events.push({ type: 'log', message: '────────' });\r\n    return { state: next, events };\r\n  }\r\n\r\n  private buildBroadcastCall(pre: GameState, next: GameState, input: PlayInput, outcome: Outcome | undefined): { pbp: string; analyst: string } {\r\n    return buildBroadcastCallExt(pre, next, input, outcome, {\r\n      rng: this.ctx.rng,\r\n      playInDrive: this.tracker.getPlayInDrive(),\r\n      formatClock: (n) => formatClock(n),\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      formatPossessionSpotForBroadcast: (p, b) => formatPossessionSpotForBroadcast(p, b),\r\n      quarterStats: this.tracker.getQuarterStatsRef(),\r\n    });\r\n  }\r\n\r\n  private buildResultSummary(pre: GameState, next: GameState, outcome: Outcome | undefined, flags: { td?: boolean; safety?: boolean }, currentPlayLabel: string, defenseLabel: string): { result: string; notes: string[] } {\r\n    return buildResultSummaryExt(pre, next, outcome, flags, currentPlayLabel, defenseLabel, {\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      rng: () => this.ctx.rng?.() ?? (() => { throw new Error('RNG not provided'); })(),\r\n      getLastNotesForSide: (side) => this.tracker.getLastNotesForSide(side),\r\n      setLastNotesForSide: (side, notes) => this.tracker.setLastNotesForSide(side, notes),\r\n    });\r\n  }\r\n\r\n  private chooseCommentaryLines(notes: string[]): { pbp: string; analyst: string } {\r\n    return chooseCommentaryLinesExt(notes);\r\n  }\r\n}\r\n","/**\r\n * GameFlow - Main game flow orchestration class\r\n *\r\n * This class serves as a facade/wrapper around the modular GameFlowCore,\r\n * maintaining backward compatibility while delegating to the new modular structure.\r\n *\r\n * The class has been significantly reduced from 442 lines to focus only on:\r\n * - Public API compatibility\r\n * - Delegation to GameFlowCore\r\n * - Maintaining existing interface contracts\r\n */\r\n\r\nimport type { GameState, TeamSide } from '../domain/GameState';\r\nimport type { FlowEvent, PlayInput, FlowContext } from './types';\r\nimport { GameFlowCore } from './core/GameFlowCore';\r\n\r\n// Re-export types for external API compatibility\r\nexport type { FlowEvent, PlayInput, FlowContext };\r\n\r\n/**\r\n * Main game flow orchestration class\r\n * Coordinates all aspects of game flow including plays, scoring, penalties, and time management\r\n */\r\nexport class GameFlow {\r\n  private core: GameFlowCore;\r\n\r\n  constructor(private ctx: FlowContext) {\r\n    this.core = new GameFlowCore(ctx);\r\n  }\r\n\r\n  /**\r\n   * Resolves a snap (play) and returns the resulting game state and events\r\n   * @param state - Current game state\r\n   * @param input - Play input containing deck, play label, and defense\r\n   * @returns Updated game state and generated events\r\n   */\r\n  resolveSnap(state: GameState, input: PlayInput): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolveSnap(state, input);\r\n  }\r\n\r\n  /**\r\n   * Finalizes a penalty decision and returns the resulting state and events\r\n   * @param chosen - The chosen game state (accepted or declined penalty)\r\n   * @param decision - Whether penalty was accepted or declined\r\n   * @param meta - Penalty administration metadata\r\n   * @param info - Optional penalty information\r\n   * @returns Updated game state and events\r\n   */\r\n  finalizePenaltyDecision(chosen: GameState, decision: 'accept'|'decline', meta: any, info?: { on: 'offense'|'defense'; yards: number }): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.finalizePenaltyDecision(chosen, decision, meta, info);\r\n  }\r\n\r\n  /**\r\n   * Resolves PAT (Point After Touchdown) and restart logic\r\n   * @param state - Current game state\r\n   * @param side - Team that scored\r\n   * @returns Updated game state and events\r\n   */\r\n  resolvePATAndRestart(state: GameState, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolvePATAndRestart(state, side);\r\n  }\r\n\r\n  /**\r\n   * Attempts a field goal\r\n   * @param state - Current game state\r\n   * @param attemptYards - Distance of field goal attempt\r\n   * @param side - Team attempting the field goal\r\n   * @returns Updated game state and events\r\n   */\r\n  attemptFieldGoal(state: GameState, attemptYards: number, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.attemptFieldGoal(state, attemptYards, side);\r\n  }\r\n\r\n  /**\r\n   * Resolves safety restart after a safety\r\n   * @param state - Current game state\r\n   * @param conceding - Team that conceded the safety\r\n   * @returns Updated game state and events\r\n   */\r\n  resolveSafetyRestart(state: GameState, conceding: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolveSafetyRestart(state, conceding);\r\n  }\r\n\r\n  /**\r\n   * Performs a kickoff\r\n   * @param state - Current game state\r\n   * @param type - Type of kickoff (normal or onside)\r\n   * @param kicking - Team performing the kickoff\r\n   * @returns Updated game state and events\r\n   */\r\n  performKickoff(state: GameState, type: 'normal'|'onside', kicking: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.performKickoff(state, type, kicking);\r\n  }\r\n}\r\n","// Bootstrap: expose extracted modules for gradual integration\r\nimport * as Kickoff from './rules/special/Kickoff';\r\nimport * as Punt from './rules/special/Punt';\r\nimport * as PlaceKicking from './rules/special/PlaceKicking';\r\nimport * as ResultParsing from './rules/ResultParsing';\r\nimport * as Timekeeping from './rules/Timekeeping';\r\nimport * as Charts from './rules/Charts';\r\nimport * as LongGain from './rules/LongGain';\r\nimport * as PATDecision from './ai/PATDecision';\r\nimport * as CoachProfiles from './ai/CoachProfiles';\r\nimport { PlayerTendenciesMemory } from './ai/Playcall';\r\nimport { PlayCaller } from './ai/PlayCaller';\r\nimport { resolvePlayCore } from './rules/ResolvePlayCore';\r\nimport { resolvePlay, engineFactory } from './config/EngineSelector';\r\nimport type { ResolveInput as CoreResolveInput } from './rules/ResolvePlayCore';\r\nimport { EventBus } from './utils/EventBus';\r\nimport type { GameRuntime, TablesState } from './runtime/types';\r\nimport { GameFlow, type FlowEvent, type PlayInput } from './flow/GameFlow';\r\nimport { buildPolicy } from './ai/policy/NFL2025Policy';\r\nimport { createLCG } from './sim/RNG';\r\n// import { validateOffensePlay, canAttemptFieldGoal } from './rules/PlayValidation';\r\nimport { OFFENSE_DECKS, DEFENSE_DECK, WHITE_SIGN_RESTRICTIONS } from './data/decks';\r\nimport type { DeckName } from './data/decks';\r\n\r\nlet uiRegistered = false;\r\nconst bus = new EventBus();\r\nlet tables: TablesState = { offenseCharts: null, placeKicking: null, timeKeeping: null, longGain: null };\r\nlet progressiveEnhancement: any = null;\r\nlet isTestGame = false;\r\n\r\nasync function ensureUIRegistered(): Promise<void> {\r\n  console.log('ensureUIRegistered called, uiRegistered:', uiRegistered);\r\n  if (uiRegistered) return;\r\n\r\n  console.log('Starting UI registration...');\r\n  // Show initial loading state\r\n  showInitialLoading();\r\n\r\n  try {\r\n    // Import error boundary and fallback components first (critical for error handling)\r\n    const { ErrorBoundary } = await import('./ui/ErrorBoundary');\r\n    const {\r\n      createFallbackHUD,\r\n      createFallbackLog,\r\n      createFallbackField,\r\n      createFallbackHand,\r\n      createFallbackControls,\r\n      createGenericFallback,\r\n      createLoadingSpinner\r\n    } = await import('./ui/fallbacks/FallbackComponents');\r\n\r\n    // Register core UI components first (critical for basic functionality)\r\n    await registerCoreUI(ErrorBoundary, createFallbackHUD, createFallbackLog, createFallbackField, createFallbackHand, createFallbackControls, createLoadingSpinner);\r\n\r\n    // Register interactive UI components with lazy loading\r\n    await registerInteractiveUI(ErrorBoundary, createFallbackHand, createFallbackControls, createGenericFallback);\r\n\r\n    // Register optional UI components (non-critical features)\r\n    await registerOptionalUI();\r\n\r\n    // Initialize engine indicator\r\n    const { registerEngineIndicator } = await import('./ui/EngineIndicator');\r\n    registerEngineIndicator(bus);\r\n\r\n    uiRegistered = true;\r\n    hideLoadingSpinner();\r\n\r\n    // Emit ready event for progressive enhancement\r\n    (bus as any).emit('ui:ready', {});\r\n\r\n  } catch (error) {\r\n    console.error('Failed to register UI components:', error);\r\n    // Import createLoadingSpinner for error fallback\r\n    import('./ui/fallbacks/FallbackComponents').then(({ createLoadingSpinner }) => {\r\n      showCriticalError(createLoadingSpinner);\r\n    }).catch(() => {\r\n      // Ultimate fallback - just show an alert\r\n      if (typeof document !== 'undefined') {\r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.textContent = 'Critical error - please refresh the page';\r\n        errorDiv.style.cssText = 'position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:red;color:white;padding:20px;border-radius:8px;';\r\n        document.body.appendChild(errorDiv);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Shows initial loading state while UI components are being registered\r\n */\r\nfunction showInitialLoading(): void {\r\n  if (typeof document === 'undefined') return;\r\n\r\n  const loadingElement = document.createElement('div');\r\n  loadingElement.id = 'initial-loading';\r\n  loadingElement.style.cssText = `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 9999;\r\n    color: white;\r\n    font-family: Arial, sans-serif;\r\n    flex-direction: column;\r\n  `;\r\n\r\n  const spinner = document.createElement('div');\r\n  spinner.style.cssText = `\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 4px solid #333;\r\n    border-top: 4px solid #007bff;\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n    margin-bottom: 16px;\r\n  `;\r\n\r\n  const text = document.createElement('div');\r\n  text.textContent = 'Loading Gridiron Strategy...';\r\n\r\n  loadingElement.appendChild(spinner);\r\n  loadingElement.appendChild(text);\r\n\r\n  // Add CSS animation if not already present\r\n  if (!document.getElementById('initial-loading-styles')) {\r\n    const style = document.createElement('style');\r\n    style.id = 'initial-loading-styles';\r\n    style.textContent = `\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  document.body.appendChild(loadingElement);\r\n}\r\n\r\n/**\r\n * Hides the initial loading spinner\r\n */\r\nfunction hideLoadingSpinner(): void {\r\n  if (typeof document === 'undefined') return;\r\n\r\n  const loadingElement = document.getElementById('initial-loading');\r\n  if (loadingElement) {\r\n    loadingElement.remove();\r\n  }\r\n}\r\n\r\n/**\r\n * Shows critical error fallback\r\n */\r\nfunction showCriticalError(createLoadingSpinner: (message: string) => HTMLElement): void {\r\n  if (typeof document === 'undefined') return;\r\n\r\n  hideLoadingSpinner();\r\n  const errorElement = createLoadingSpinner('Critical error - please refresh the page');\r\n  document.body.appendChild(errorElement);\r\n}\r\n\r\n/**\r\n * Registers core UI components that are essential for basic functionality\r\n */\r\nasync function registerCoreUI(\r\n  ErrorBoundary: any,\r\n  createFallbackHUD: () => HTMLElement,\r\n  createFallbackLog: () => HTMLElement,\r\n  createFallbackField: () => HTMLElement,\r\n  createFallbackHand: () => HTMLElement,\r\n  createFallbackControls: () => HTMLElement,\r\n  createLoadingSpinner: (message: string) => HTMLElement\r\n): Promise<void> {\r\n  // Core components loaded immediately for critical functionality\r\n  const coreComponents = [\r\n    { module: './ui/HUD', register: 'registerHUD', name: 'HUD', fallback: createFallbackHUD },\r\n    { module: './ui/Log', register: 'registerLog', name: 'GameLog', fallback: createFallbackLog },\r\n    { module: './ui/Field', register: 'registerField', name: 'GameField', fallback: createFallbackField },\r\n    { module: './ui/Controls', register: 'registerControls', name: 'GameControls', fallback: createFallbackControls },\r\n    { module: './ui/Hand', register: 'registerHand', name: 'PlayerHand', fallback: createFallbackHand }\r\n  ];\r\n\r\n  console.log('Starting core UI component registration...');\r\n  for (const component of coreComponents) {\r\n    console.log(`Loading ${component.name} component from ${component.module}...`);\r\n    try {\r\n      const module = await import(component.module);\r\n      console.log(`${component.name} module loaded successfully`);\r\n\r\n      // For critical core components, only use basic error handling\r\n      // Don't use aggressive error boundaries that might hide real issues\r\n      const originalRegister = module[component.register];\r\n      // Avoid mutating ESM module namespace objects (read-only). Wrap and invoke safely instead.\r\n      const safeRegister = (b: EventBus) => {\r\n        try {\r\n          console.log(`Calling ${component.name} register function...`);\r\n          return originalRegister.call(module, b);\r\n        } catch (error) {\r\n          console.error(`${component.name} component registration failed:`, error);\r\n          b.emit('log', { message: `${component.name} component failed to initialize` });\r\n          return undefined;\r\n        }\r\n      };\r\n\r\n      console.log(`Registering ${component.name}...`);\r\n      safeRegister(bus);\r\n      console.log(`${component.name} registered successfully`);\r\n    } catch (error) {\r\n      console.error(`${component.name} module failed to load:`, error);\r\n      // For critical components, show a simple error message but don't use fallback UI\r\n      // as that might mask the real issue\r\n      if (typeof document !== 'undefined') {\r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.style.cssText = `\r\n          position: fixed;\r\n          top: 10px;\r\n          right: 10px;\r\n          background: #ff4444;\r\n          color: white;\r\n          padding: 10px;\r\n          border-radius: 4px;\r\n          z-index: 9999;\r\n          font-family: monospace;\r\n          font-size: 12px;\r\n        `;\r\n        errorDiv.textContent = `${component.name} failed to load - check console`;\r\n        document.body.appendChild(errorDiv);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Registers interactive UI components with lazy loading\r\n */\r\nasync function registerInteractiveUI(\r\n  ErrorBoundary: any,\r\n  createFallbackHand: () => HTMLElement,\r\n  createFallbackControls: () => HTMLElement,\r\n  createGenericFallback: (componentName: string, error?: Error) => HTMLElement\r\n): Promise<void> {\r\n  // Interactive components loaded when user interaction begins\r\n  const interactiveComponents: Array<{\r\n    module: string;\r\n    register: string;\r\n    name: string;\r\n    fallback: () => HTMLElement;\r\n  }> = [\r\n    // No interactive components for now - all critical UI is in core\r\n  ];\r\n\r\n  // Use requestIdleCallback if available, otherwise setTimeout\r\n  const scheduleWork = (callback: () => void) => {\r\n    if ('requestIdleCallback' in window) {\r\n      requestIdleCallback(callback, { timeout: 2000 });\r\n    } else {\r\n      setTimeout(callback, 100);\r\n    }\r\n  };\r\n\r\n  for (const component of interactiveComponents) {\r\n    scheduleWork(async () => {\r\n      try {\r\n        const module = await import(component.module);\r\n        const boundary = new ErrorBoundary({\r\n          componentName: component.name,\r\n          fallbackComponent: (error: Error, retry: () => void) => component.fallback(),\r\n          onError: (error: Error, info: any) => {\r\n            console.error(`${component.name} component error:`, error);\r\n            bus.emit('log', { message: `${component.name} component failed - using fallback display` });\r\n          }\r\n        });\r\n\r\n        const originalRegister = module[component.register];\r\n        // Wrap call without mutating the module namespace\r\n        const safeRegister = (b: EventBus) => {\r\n          try {\r\n            return originalRegister.call(module, b);\r\n          } catch (error) {\r\n            boundary.handleError(error as Error);\r\n            return undefined;\r\n          }\r\n        };\r\n\r\n        safeRegister(bus);\r\n      } catch (error) {\r\n        console.warn(`${component.name} module failed to load:`, error);\r\n        const element = component.fallback();\r\n        if (typeof document !== 'undefined') {\r\n          const container = document.getElementById(component.name.toLowerCase()) || document.createElement('div');\r\n          container.id = component.name.toLowerCase();\r\n          container.appendChild(element);\r\n          document.body.appendChild(container);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Registers optional UI components (non-critical features)\r\n */\r\nasync function registerOptionalUI(): Promise<void> {\r\n  // Optional components loaded asynchronously with lower priority\r\n  const optionalComponents = [\r\n    './ui/DevMode',\r\n    './ui/SpecialTeamsUI',\r\n    './ui/PenaltyUI',\r\n    './ui/VFX',\r\n    './ui/SFX',\r\n    './qa/Harness',\r\n    // Dice UI components (button-based card system for 2d20 dice engine)\r\n    './ui/dice/DiceUI',\r\n    './ui/dice/CardSelector',\r\n    './ui/dice/PenaltyModal',\r\n    './ui/dice/ResultDisplay',\r\n    './ui/dice/integration',\r\n    // Programmatic card renderer system (SVG-based cards with visual indicators)\r\n    './ui/cards/ProgressiveCardSystem',\r\n    './ui/cards/CardRenderer',\r\n    './ui/cards/CardDefinitions',\r\n    './ui/cards/RiskIndicator',\r\n    './ui/cards/PerimeterBadge'\r\n  ];\r\n\r\n  // Load optional components in background\r\n  optionalComponents.forEach(async (modulePath) => {\r\n    try {\r\n      const module = await import(modulePath);\r\n      const base = (modulePath.split('/').pop() as string) || '';\r\n      const preferred = `register${base}`;\r\n      let registerFn: any = (module as any)[preferred];\r\n      if (typeof registerFn !== 'function') {\r\n        const candidates: string[] = Object.keys(module).filter((k) => k.startsWith('register') && typeof (module as any)[k] === 'function');\r\n        let only: string | null = null;\r\n        if (candidates.length === 1) {\r\n          only = candidates[0] as string;\r\n        }\r\n        if (only) {\r\n          registerFn = (module as any)[only];\r\n        }\r\n      }\r\n      if (typeof registerFn === 'function') {\r\n        registerFn(bus);\r\n      }\r\n    } catch (error) {\r\n      console.warn(`${modulePath} component failed to load:`, error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Initializes progressive enhancement features\r\n */\r\nasync function initializeProgressiveEnhancement(): Promise<void> {\r\n  try {\r\n    const { ProgressiveEnhancement } = await import('./ui/progressive/ProgressiveEnhancement');\r\n    progressiveEnhancement = new ProgressiveEnhancement(bus, {\r\n      enableWebGL: true,\r\n      enableWebAudio: true,\r\n      enableOfflineSupport: true,\r\n      enableAdvancedAnimations: true,\r\n      enablePerformanceMonitoring: true\r\n    });\r\n\r\n    // Listen for feature detection results\r\n    (bus as any).on('features:detected', ({ features }: any) => {\r\n      console.log('Browser features detected:', features);\r\n\r\n      // Log enhancement status to game log\r\n      if (features.webgl) {\r\n        bus.emit('log', { message: 'Enhanced graphics enabled' });\r\n      }\r\n      if (features.webAudio) {\r\n        bus.emit('log', { message: 'Enhanced audio enabled' });\r\n      }\r\n      if (features.serviceWorker) {\r\n        bus.emit('log', { message: 'Offline support available' });\r\n      }\r\n    });\r\n\r\n    // Listen for performance metrics\r\n    (bus as any).on('performance:loadTime', ({ loadTime }: any) => {\r\n      console.log(`UI loaded in ${Math.round(loadTime)}ms`);\r\n      bus.emit('log', { message: `UI loaded in ${Math.round(loadTime)}ms` });\r\n    });\r\n\r\n    (bus as any).on('performance:fps', ({ fps }: any) => {\r\n      if (fps < 30) {\r\n        console.warn(`Low frame rate detected: ${fps}fps`);\r\n        bus.emit('log', { message: `Performance: ${fps}fps` });\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.warn('Progressive enhancement failed to initialize:', error);\r\n    // Continue without progressive enhancement - basic functionality still works\r\n  }\r\n}\r\n\r\nasync function preloadTables(): Promise<void> {\r\n  try {\r\n    const loaders = await import('./data/loaders/tables');\r\n    const [oc, pk, tk, lg] = await Promise.all([\r\n      loaders.fetchOffenseCharts(),\r\n      loaders.fetchPlaceKicking(),\r\n      loaders.fetchTimeKeeping(),\r\n      loaders.fetchLongGain(),\r\n    ]);\r\n    tables = {\r\n      offenseCharts: oc.ok ? oc.data : null,\r\n      placeKicking: pk.ok ? pk.data : null,\r\n      timeKeeping: tk.ok ? tk.data : null,\r\n      longGain: lg.ok ? lg.data : null,\r\n    };\r\n    const summary = `Loaded offense charts ${oc.ok ? '✓' : `✕ (${oc.error.code})`}, place-kicking ${pk.ok ? '✓' : `✕ (${pk.error.code})`}, timekeeping ${tk.ok ? '✓' : `✕ (${tk.error.code})`}, long-gain ${lg.ok ? '✓' : `✕ (${lg.error.code})`}`;\r\n    bus.emit('log', { message: summary });\r\n  } catch {\r\n    tables = { offenseCharts: null, placeKicking: null, timeKeeping: null, longGain: null };\r\n  }\r\n  if (typeof window !== 'undefined' && window.GS) {\r\n    window.GS.tables = tables;\r\n  }\r\n}\r\n\r\nfunction setTheme(theme: string): void {\r\n  if (typeof document === 'undefined') return;\r\n  (document.body as any).dataset.theme = theme;\r\n}\r\n\r\n// Bridge UI theme change events to body dataset\r\nbus.on('ui:themeChanged', ({ theme }: any) => {\r\n  try { setTheme(theme); }\r\n  catch (error) {\r\n    console.error('Failed to apply theme:', error);\r\n  }\r\n});\r\n\r\n// Track when a QA test game is running so we can enrich logs in dev mode\r\ntry {\r\n  (bus as any).on && (bus as any).on('qa:startTestGame', () => { isTestGame = true; });\r\n} catch (error) {\r\n  console.warn('Unable to wire qa:startTestGame listener:', error);\r\n}\r\n\r\nfunction isDevModeOn(): boolean {\r\n  try { if (typeof localStorage !== 'undefined') return localStorage.getItem('gs_dev_mode') === '1'; }\r\n  catch (error) { /* non-fatal */ }\r\n  try { return !!(globalThis as any).GS?.__devMode?.enabled; }\r\n  catch (error) { /* non-fatal */ }\r\n  return false;\r\n}\r\n\r\nfunction formatClock(seconds: number): string {\r\n  const s = Math.max(0, Math.floor(seconds));\r\n  const mPart = Math.floor(s / 60);\r\n  const sPart = (s % 60).toString().padStart(2, '0');\r\n  return `${mPart}:${sPart}`;\r\n}\r\n\r\nfunction buildPlayPrefix(state: import('./domain/GameState').GameState, offLabel: string, defLabel: string): string {\r\n  const downNames = ['1st', '2nd', '3rd', '4th'];\r\n  const downIdx = Math.min(state.down, 4) - 1;\r\n  const downStr = downNames[downIdx] || `${state.down}th`;\r\n  const toGoLabel = (() => {\r\n    const firstDownAbs = state.possession === 'player' ? (state.ballOn + state.toGo) : (state.ballOn - state.toGo);\r\n    const isG2G = state.possession === 'player' ? (firstDownAbs >= 100) : (firstDownAbs <= 0);\r\n    return isG2G ? 'Goal' : String(state.toGo);\r\n  })();\r\n  const ballSpot = state.ballOn <= 50 ? state.ballOn : 100 - state.ballOn;\r\n  const possLabel = state.possession === 'player' ? 'HOME' : 'AWAY';\r\n  return `Q${state.quarter} | ${formatClock(state.clock)} | ${downStr} & ${toGoLabel} | Ball on ${Math.round(ballSpot)} | ${possLabel} (possession) | ${offLabel} | ${defLabel}`;\r\n}\r\n\r\nasync function start(options?: { theme?: 'arcade'|'minimalist'|'retro'|'board'|'vintage'|'modern' }): Promise<void> {\r\n  if (typeof window === 'undefined') return;\r\n\r\n  // Initialize progressive enhancement first\r\n  await initializeProgressiveEnhancement();\r\n\r\n  await ensureUIRegistered();\r\n  if (options && options.theme) setTheme(options.theme);\r\n  await preloadTables();\r\n  // Emit a baseline HUD update so UI is not blank in smoke tests\r\n  bus.emit('hudUpdate', {\r\n    quarter: 1,\r\n    clock: 15 * 60,\r\n    down: 1,\r\n    toGo: 10,\r\n    ballOn: 25,\r\n    possession: 'player',\r\n    score: { player: 0, ai: 0 },\r\n  } as any);\r\n\r\n  // Hook up New Game UI event to start a playable flow\r\n  try {\r\n    bus.on('ui:newGame', async ({ deckName, opponentName }: any) => {\r\n      try {\r\n        if (!tables.offenseCharts) {\r\n          bus.emit('log', { message: 'Data tables not loaded yet.' });\r\n          return;\r\n        }\r\n        const seed = Date.now() % 1e9;\r\n        const rng = createLCG(seed);\r\n        const flow = new GameFlow({ charts: tables.offenseCharts, rng, timeKeeping: tables.timeKeeping || {\r\n          gain0to20: 30,\r\n          gain20plus: 45,\r\n          loss: 30,\r\n          outOfBounds: 15,\r\n          incomplete: 15,\r\n          interception: 30,\r\n          penalty: 15,\r\n          fumble: 15,\r\n          kickoff: 15,\r\n          fieldgoal: 15,\r\n          punt: 15,\r\n          extraPoint: 0,\r\n        }, policy: {\r\n          chooseTempo: ({ quarter, clock, diff, side }) => {\r\n            try { return buildPolicy().chooseTempo({\r\n              quarter,\r\n              time_remaining_sec: clock,\r\n              half: quarter <= 2 ? 1 : 2,\r\n              score_diff: diff,\r\n              down: 1,\r\n              distance_to_go_yd: 10,\r\n              yardline_100: 25,\r\n              has_two_minute_warning: (quarter === 2 || quarter === 4) && clock > 120,\r\n              team_archetype: 'Pro',\r\n              home_or_road: side === 'player' ? 'home' : 'road',\r\n              underdog: false,\r\n              possession_after_score_pref: 'normal',\r\n            }).tempo as any; } catch { return 'normal'; }\r\n          },\r\n        } });\r\n        // Pick player deck from selection with fallback\r\n        const validDeck = (name: any): DeckName => (name === 'Pro Style' || name === 'Ball Control' || name === 'Aerial Style') ? name : 'Pro Style';\r\n        const playerDeck = validDeck(deckName);\r\n        // Map opponent to an AI deck style\r\n        let aiDeck: DeckName = 'Pro Style';\r\n        if (opponentName === 'Andy Reid') aiDeck = 'Aerial Style';\r\n        else if (opponentName === 'Bill Belichick') aiDeck = 'Ball Control';\r\n        else if (opponentName === 'John Madden') aiDeck = 'Pro Style';\r\n\r\n        // Initial state at kickoff\r\n        const initial: import('./domain/GameState').GameState = {\r\n          seed,\r\n          quarter: 1,\r\n          clock: 15 * 60,\r\n          down: 1,\r\n          toGo: 10,\r\n          ballOn: 25,\r\n          possession: 'ai', // AI kicks to Player by default\r\n          awaitingPAT: false,\r\n          gameOver: false,\r\n          score: { player: 0, ai: 0 },\r\n        } as const;\r\n\r\n        // Kickoff from AI to Player to start game\r\n        const ko = flow.performKickoff(initial, 'normal', 'ai');\r\n        const stateAfterKO = ko.state as any;\r\n        // Announce new game and push kickoff events now (translate declared below)\r\n        bus.emit('log', { message: `New game started — You: ${playerDeck} vs ${String(opponentName || 'AI')} (seed=${seed})` });\r\n\r\n        // Emit HUD from kickoff result (already included in events, but ensure baseline)\r\n        bus.emit('hudUpdate', {\r\n          quarter: stateAfterKO.quarter,\r\n          clock: stateAfterKO.clock,\r\n          down: stateAfterKO.down,\r\n          toGo: stateAfterKO.toGo,\r\n          ballOn: stateAfterKO.ballOn,\r\n          possession: stateAfterKO.possession,\r\n          score: stateAfterKO.score,\r\n        } as any);\r\n\r\n        // Deal hand immediately based on possession after kickoff\r\n        if (stateAfterKO.possession === 'player') {\r\n          const deck = OFFENSE_DECKS[playerDeck] || [];\r\n          const cardsToRender = deck.map((c) => ({ id: c.id, label: c.label, art: c.art, type: c.type }));\r\n          bus.emit('handUpdate', { cards: cardsToRender, isPlayerOffense: true } as any);\r\n        } else {\r\n          const defCards = DEFENSE_DECK.map((d) => ({ id: (d as any).id, label: (d as any).label, art: `assets/cards/Defense/${(d as any).label}.jpg`, type: 'defense' }));\r\n          bus.emit('handUpdate', { cards: defCards, isPlayerOffense: false } as any);\r\n        }\r\n\r\n        // Store minimal runtime pointers for potential future interactions\r\n        (window as any).GS_RUNTIME = { flow, playerDeck, aiDeck, state: stateAfterKO, seed };\r\n\r\n        // Per-game player tendencies memory for adaptive AI defense\r\n        const tendencies = new PlayerTendenciesMemory();\r\n\r\n        // Helper: translate flow events into UI bus\r\n        const translate = (events: FlowEvent[]) => {\r\n          for (const ev of events) {\r\n            if (ev.type === 'hud') bus.emit('hudUpdate', ev.payload as any);\r\n            else if (ev.type === 'log') {\r\n              // Prefix log lines with play context during dev test games\r\n              const dev = isDevModeOn();\r\n              if (dev && isTestGame) {\r\n                try {\r\n                  const rt: any = (window as any).GS_RUNTIME || {};\r\n                  const lastOff = (rt as any).__lastOffLabel || '';\r\n                  const lastDef = (rt as any).__lastDefLabel || '';\r\n                  const st = rt.state as any;\r\n                  if (st && lastOff && lastDef) {\r\n                    const pref = buildPlayPrefix(st, lastOff, lastDef);\r\n                    bus.emit('log', { message: `${pref} — ${ev.message}` });\r\n                    continue;\r\n                  }\r\n                } catch (error) {\r\n                  console.debug('Failed to build dev prefix', error);\r\n                }\r\n              }\r\n              bus.emit('log', { message: ev.message });\r\n            }\r\n            else if (ev.type === 'vfx') bus.emit('vfx', { type: ev.payload.kind, payload: ev.payload.data });\r\n            else if (ev.type === 'final') bus.emit('log', { message: `Final — HOME ${ev.payload.score.player} — AWAY ${ev.payload.score.ai}` });\r\n            else if (ev.type === 'halftime') bus.emit('log', { message: 'Halftime' });\r\n            else if (ev.type === 'endOfQuarter') bus.emit('log', { message: `End of Q${ev.payload.quarter}` });\r\n            else if (ev.type === 'score') bus.emit('log', { message: `Score: ${ev.payload.kind}` });\r\n          }\r\n        };\r\n\r\n        // Emit kickoff events now that translator is ready\r\n        try { translate(ko.events as any); }\r\n        catch (error) { console.debug('Kickoff event translation failed', error); }\r\n\r\n        // Prepare new PlayCaller instances for human vs AI flow\r\n        const deps = {\r\n          charts: tables.offenseCharts!,\r\n          getOffenseHand: () => {\r\n            const deck = OFFENSE_DECKS[playerDeck] || [];\r\n            return deck.map((c: any) => ({ id: c.id, label: c.label, type: c.type } as any));\r\n          },\r\n          getDefenseOptions: () => DEFENSE_DECK.map(d => d.label) as any,\r\n          getWhiteSignRestriction: (label: string) => (WHITE_SIGN_RESTRICTIONS as any)[label] ?? null,\r\n        } as const;\r\n        const pcPlayer = new PlayCaller(deps as any, true);\r\n        const pcAI = new PlayCaller(deps as any, true);\r\n        try { await pcPlayer.loadPersonality(); await pcAI.loadPersonality(); }\r\n        catch (error) { console.warn('PlayCaller personality load failed', error); }\r\n        pcPlayer.reset(seed);\r\n        pcAI.reset(seed + 1);\r\n\r\n        // Keep the hand UI in sync with possession by re-emitting handUpdate on HUD changes\r\n        // When AI has the ball, present defense calls for the human to choose\r\n        bus.on('hudUpdate', ({ possession }) => {\r\n          try {\r\n            const rt: any = (window as any).GS_RUNTIME || {};\r\n            if (possession === 'player') {\r\n              const deckDef = OFFENSE_DECKS[rt.playerDeck as DeckName] || [];\r\n              const cards = deckDef.map((c: any) => ({ id: c.id, label: c.label, art: c.art, type: c.type }));\r\n              bus.emit('handUpdate', { cards, isPlayerOffense: true } as any);\r\n            } else {\r\n              const defCards = DEFENSE_DECK.map((d) => ({ id: (d as any).id, label: (d as any).label, art: `assets/cards/Defense/${(d as any).label}.jpg`, type: 'defense' }));\r\n              bus.emit('handUpdate', { cards: defCards, isPlayerOffense: false } as any);\r\n            }\r\n          } catch (error) { console.debug('HUD sync failed', error); }\r\n        });\r\n\r\n        // Listen for player selection; if player has ball, it's an offense play; if AI has ball, selection is defense\r\n        bus.on('ui:playCard', async ({ cardId }: { cardId: string }) => {\r\n          try {\r\n            const rt: any = (window as any).GS_RUNTIME || {};\r\n            const currentState = rt.state;\r\n            if (!currentState || currentState.gameOver) return;\r\n\r\n            // Initialize engine factory if not already done\r\n            await engineFactory.initialize();\r\n\r\n            if (currentState.possession === 'player') {\r\n              // Player offense: look up offense card from player's deck\r\n              const playerDeckDef = OFFENSE_DECKS[rt.playerDeck as DeckName] || [];\r\n              const card = playerDeckDef.find((c: any) => c.id === cardId);\r\n              if (!card) return;\r\n              const defPicked = pcAI.choose_defense_play(currentState);\r\n\r\n              // Use the new engine system for play resolution\r\n              const before = { ...currentState };\r\n              try {\r\n                const defenseCard = DEFENSE_DECK.find(d => (d as any).label === defPicked.label);\r\n                const engineResult = await resolvePlay(card.id, defenseCard?.id || defPicked.label, currentState, createLCG(currentState.seed));\r\n\r\n                // Convert engine result back to flow events (simplified for now)\r\n                // TODO: Implement proper event translation from engine result\r\n                bus.emit('log', { message: `Play resolved: ${engineResult.yards > 0 ? 'Gain' : engineResult.yards < 0 ? 'Loss' : 'No gain'} of ${Math.abs(engineResult.yards)} yards` });\r\n\r\n                if (engineResult.turnover && typeof engineResult.turnover !== 'boolean') {\r\n                  const t = engineResult.turnover;\r\n                  bus.emit('log', { message: `${t.type}${typeof t.return_yards === 'number' ? ` - ${t.return_yards} yard return` : ''}` });\r\n                }\r\n\r\n                // Update game state based on result (simplified)\r\n                const newState = { ...currentState };\r\n                if (engineResult.yards !== 0) {\r\n                  newState.ballOn = Math.max(0, Math.min(100, newState.ballOn + (newState.possession === 'player' ? engineResult.yards : -engineResult.yards)));\r\n                }\r\n\r\n                try { (window as any).GS_RUNTIME.__lastOffLabel = card.label; (window as any).GS_RUNTIME.__lastDefLabel = defPicked.label; }\r\n                catch (error) { /* ignore telemetry bookkeeping errors */ }\r\n                (window as any).GS_RUNTIME.state = newState as any;\r\n\r\n                // TODO: Update tendencies and AI observations based on engine result\r\n                try {\r\n                  const playType: 'run'|'pass' = (/pass/i.test(card.label) ? 'pass' : 'run');\r\n                  tendencies.record('player', playType, {\r\n                    down: before.down,\r\n                    toGo: before.toGo,\r\n                    ballOnFromHome: before.ballOn,\r\n                    playerIsHome: true,\r\n                    possessing: before.possession,\r\n                  });\r\n                } catch (error) { console.debug('Tendency record failed', error); }\r\n              } catch (error) {\r\n                console.warn('Engine resolution failed, falling back to deterministic:', error);\r\n                // Fallback to original system\r\n                const input: PlayInput = { deckName: rt.playerDeck, playLabel: card.label, defenseLabel: defPicked.label } as any;\r\n                const res = flow.resolveSnap(currentState, input);\r\n                translate(res.events);\r\n                (window as any).GS_RUNTIME.state = res.state as any;\r\n              }\r\n            } else {\r\n              // AI offense: player's click selects a defense; AI picks offense via PlayCaller\r\n              const defCard = DEFENSE_DECK.find((d) => (d as any).id === cardId);\r\n              if (!defCard) return;\r\n              const offPicked = pcAI.choose_offense_play(currentState, rt.aiDeck as DeckName);\r\n\r\n              // Use the new engine system for play resolution\r\n              const before = { ...currentState };\r\n              try {\r\n                const engineResult = await resolvePlay(offPicked.playLabel, defCard.id, currentState, createLCG(currentState.seed));\r\n\r\n                // Convert engine result back to flow events (simplified for now)\r\n                // TODO: Implement proper event translation from engine result\r\n                bus.emit('log', { message: `AI Play resolved: ${engineResult.yards > 0 ? 'Gain' : engineResult.yards < 0 ? 'Loss' : 'No gain'} of ${Math.abs(engineResult.yards)} yards` });\r\n\r\n                if (engineResult.turnover && typeof engineResult.turnover !== 'boolean') {\r\n                  const t = engineResult.turnover;\r\n                  bus.emit('log', { message: `AI ${t.type}${typeof t.return_yards === 'number' ? ` - ${t.return_yards} yard return` : ''}` });\r\n                }\r\n\r\n                // Update game state based on result (simplified)\r\n                const newState = { ...currentState };\r\n                if (engineResult.yards !== 0) {\r\n                  newState.ballOn = Math.max(0, Math.min(100, newState.ballOn + (newState.possession === 'player' ? engineResult.yards : -engineResult.yards)));\r\n                }\r\n\r\n                try { (window as any).GS_RUNTIME.__lastOffLabel = offPicked.playLabel; (window as any).GS_RUNTIME.__lastDefLabel = (defCard as any).label; }\r\n                catch (error) { /* ignore telemetry bookkeeping errors */ }\r\n                (window as any).GS_RUNTIME.state = newState as any;\r\n\r\n                // TODO: Update tendencies and AI observations based on engine result\r\n              } catch (error) {\r\n                console.warn('Engine resolution failed, falling back to deterministic:', error);\r\n                // Fallback to original system\r\n                const input: PlayInput = { deckName: rt.aiDeck, playLabel: offPicked.playLabel, defenseLabel: (defCard as any).label } as any;\r\n                const res = flow.resolveSnap(currentState, input);\r\n                translate(res.events);\r\n                (window as any).GS_RUNTIME.state = res.state as any;\r\n              }\r\n            }\r\n          } catch (err) {\r\n            try { bus.emit('log', { message: `Play selection failed: ${String((err as any)?.message || err)}` }); }\r\n            catch { /* ignore logging failure */ }\r\n          }\r\n        });\r\n      } catch (err) {\r\n        bus.emit('log', { message: `Failed to start new game: ${(err as Error)?.message || err}` });\r\n      }\r\n    });\r\n  } catch (error) { console.warn('Failed to register ui:newGame handler', error); }\r\n}\r\n\r\nfunction dispose(): void {\r\n  // No timers yet; leave bus listeners intact for now. Future timers/intervals cleared here.\r\n}\r\n\r\nconst runtime: GameRuntime = {\r\n  bus,\r\n  rules: { Kickoff, Punt, PlaceKicking, ResultParsing, Timekeeping, Charts, LongGain },\r\n  ai: { PATDecision, CoachProfiles },\r\n  tables,\r\n  start,\r\n  dispose,\r\n  setTheme,\r\n  runtime: {\r\n    resolvePlayAdapter: (params: {\r\n      state: CoreResolveInput['state'];\r\n      charts: CoreResolveInput['charts'];\r\n      deckName: CoreResolveInput['deckName'];\r\n      playLabel: CoreResolveInput['playLabel'];\r\n      defenseLabel: CoreResolveInput['defenseLabel'];\r\n      rng: CoreResolveInput['rng'];\r\n      ui?: { inTwoMinute?: boolean };\r\n    }) => {\r\n      const res = resolvePlayCore({\r\n        state: params.state,\r\n        charts: params.charts,\r\n        deckName: params.deckName,\r\n        playLabel: params.playLabel,\r\n        defenseLabel: params.defenseLabel,\r\n        rng: params.rng,\r\n      });\r\n      const nextState = {\r\n        ...res.state,\r\n        clock: (params as any).state.clock,\r\n        score: { ...(params as any).state.score },\r\n        awaitingPAT: (params as any).state.awaitingPAT,\r\n        gameOver: (params as any).state.gameOver,\r\n      } as any;\r\n      const events: Array<{ type: string; data?: any }> = [];\r\n      if ((res as any).possessionChanged) events.push({ type: 'possessionChanged' });\r\n      if ((res as any).touchdown) events.push({ type: 'touchdown' });\r\n      if ((res as any).safety) events.push({ type: 'safety' });\r\n      return { nextState, outcome: (res as any).outcome, events } as any;\r\n    },\r\n    // Expose createFlow for tests (typed as any in GameRuntime to avoid leaking internals)\r\n    createFlow: (seed?: number) => {\r\n      const rng = createLCG(seed ?? 12345);\r\n      if (!tables.offenseCharts) throw new Error('Offense charts not loaded');\r\n      const flow = new GameFlow({ charts: tables.offenseCharts, rng, timeKeeping: tables.timeKeeping || {\r\n        gain0to20: 30,\r\n        gain20plus: 45,\r\n        loss: 30,\r\n        outOfBounds: 15,\r\n        incomplete: 15,\r\n        interception: 30,\r\n        penalty: 15,\r\n        fumble: 15,\r\n        kickoff: 15,\r\n        fieldgoal: 15,\r\n        punt: 15,\r\n        extraPoint: 0,\r\n      }, policy: {\r\n        chooseTempo: ({ quarter, clock, diff, side }) => {\r\n          try { return buildPolicy().chooseTempo({\r\n            quarter,\r\n            time_remaining_sec: clock,\r\n            half: quarter <= 2 ? 1 : 2,\r\n            score_diff: diff,\r\n            down: 1,\r\n            distance_to_go_yd: 10,\r\n            yardline_100: 25,\r\n            has_two_minute_warning: (quarter === 2 || quarter === 4) && clock > 120,\r\n            team_archetype: 'Pro',\r\n            home_or_road: side === 'player' ? 'home' : 'road',\r\n            underdog: false,\r\n            possession_after_score_pref: 'normal',\r\n          }).tempo as any; } catch { return 'normal'; }\r\n        },\r\n      } });\r\n      let flowState: import('./domain/GameState').GameState | null = null;\r\n      let pendingPenalty: { accepted: import('./domain/GameState').GameState; declined: import('./domain/GameState').GameState; meta: any } | null = null;\r\n      const translate = (events: FlowEvent[]) => {\r\n        for (const ev of events) {\r\n          if (ev.type === 'hud') bus.emit('hudUpdate', ev.payload as any);\r\n          else if (ev.type === 'log') {\r\n            bus.emit('log', { message: ev.message });\r\n            if (/Field goal missed/i.test(ev.message)) {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'NO GOOD' });\r\n              (bus as any).emit && (bus as any).emit('sfx:crowd', { kind: 'groan' });\r\n            }\r\n          }\r\n          else if (ev.type === 'vfx') {\r\n            const kind = ev.payload.kind;\r\n            if (kind === 'td') {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'TOUCHDOWN!', gold: true });\r\n              (bus as any).emit && (bus as any).emit('vfx:flash', {});\r\n              (bus as any).emit && (bus as any).emit('sfx:crowd', { kind: 'cheer' });\r\n            } else if (kind === 'interception') {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'INTERCEPTION!' });\r\n              (bus as any).emit && (bus as any).emit('vfx:shake', { selector: 'body' });\r\n              (bus as any).emit && (bus as any).emit('sfx:hit', {});\r\n            } else if (kind === 'twoMinute') {\r\n              (bus as any).emit && (bus as any).emit('vfx:flash', {});\r\n            }\r\n            bus.emit('vfx', { type: kind, payload: ev.payload.data });\r\n          }\r\n          else if (ev.type === 'choice-required') {\r\n            (bus as any).emit('flow:choiceRequired', { choice: ev.choice, data: ev.data });\r\n            if (ev.choice === 'penaltyAcceptDecline') {\r\n              const d: any = ev.data || {};\r\n              pendingPenalty = { accepted: d.accepted, declined: d.declined, meta: d.meta };\r\n            }\r\n          }\r\n          else if (ev.type === 'final') bus.emit('log', { message: `Final — HOME ${ev.payload.score.player} — AWAY ${ev.payload.score.ai}` });\r\n          else if (ev.type === 'halftime') bus.emit('log', { message: 'Halftime' });\r\n          else if (ev.type === 'endOfQuarter') bus.emit('log', { message: `End of Q${ev.payload.quarter}` });\r\n          else if (ev.type === 'score') {\r\n            bus.emit('log', { message: `Score: ${ev.payload.kind}` });\r\n            (bus as any).emit && (bus as any).emit('vfx:scorePop', {});\r\n            if (ev.payload.kind === 'FG') {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'FIELD GOAL!' });\r\n              (bus as any).emit && (bus as any).emit('sfx:beep', { freq: 880, type: 'triangle' });\r\n            } else if (ev.payload.kind === 'Safety') {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'SAFETY!', gold: true });\r\n              (bus as any).emit && (bus as any).emit('sfx:beep', { freq: 220, type: 'square' });\r\n            } else if (ev.payload.kind === 'TD') {\r\n              (bus as any).emit && (bus as any).emit('vfx:banner', { text: 'TOUCHDOWN!', gold: true });\r\n              (bus as any).emit && (bus as any).emit('sfx:crowd', { kind: 'cheer' });\r\n            }\r\n          }\r\n        }\r\n      };\r\n      (bus as any).on && (bus as any).on('ui:choice.penalty', (p: { decision: 'accept'|'decline' }) => {\r\n        if (!pendingPenalty) return;\r\n        const ctx = pendingPenalty;\r\n        const chosen = p.decision === 'accept' ? ctx.accepted : ctx.declined;\r\n        const fin = (flow as any).finalizePenaltyDecision(chosen, p.decision, ctx.meta);\r\n        flowState = fin.state as any;\r\n        translate(fin.events);\r\n        pendingPenalty = null;\r\n      });\r\n      return {\r\n        resolveSnap: (state: import('./domain/GameState').GameState, input: PlayInput) => {\r\n          const res = flow.resolveSnap(state, input);\r\n          translate(res.events);\r\n          flowState = res.state as any;\r\n          return res;\r\n        },\r\n        applyPenaltyDecision: (state: import('./domain/GameState').GameState, decision: 'accept'|'decline', context: { accepted: import('./domain/GameState').GameState; declined: import('./domain/GameState').GameState; meta: any }) => {\r\n          const chosen = decision === 'accept' ? context.accepted : context.declined;\r\n          const fin = (flow as any).finalizePenaltyDecision(chosen, decision, context.meta);\r\n          translate(fin.events);\r\n          flowState = fin.state as any;\r\n          return fin;\r\n        },\r\n        resolvePATAndRestart: (state: import('./domain/GameState').GameState, side: 'player'|'ai') => {\r\n          const res = flow.resolvePATAndRestart(state, side);\r\n          translate(res.events);\r\n          flowState = res.state as any;\r\n          return res;\r\n        },\r\n        attemptFieldGoal: (state: import('./domain/GameState').GameState, attemptYards: number, side: 'player'|'ai') => {\r\n          const res = flow.attemptFieldGoal(state, attemptYards, side);\r\n          translate(res.events);\r\n          flowState = res.state as any;\r\n          return res;\r\n        },\r\n        resolveSafetyRestart: (state: import('./domain/GameState').GameState, conceding: 'player'|'ai') => {\r\n          const res = flow.resolveSafetyRestart(state, conceding);\r\n          translate(res.events);\r\n          flowState = res.state as any;\r\n          return res;\r\n        },\r\n        performKickoff: (state: import('./domain/GameState').GameState, type: 'normal'|'onside', kicking: 'player'|'ai') => {\r\n          const res = flow.performKickoff(state, type, kicking);\r\n          translate(res.events);\r\n          flowState = res.state as any;\r\n          return res;\r\n        },\r\n        inner: flow,\r\n      } as any;\r\n    },\r\n  },\r\n};\r\n\r\ndeclare global {\r\n  interface Window { GS?: GameRuntime }\r\n}\r\n\r\nif (typeof window !== 'undefined' && !window.GS) {\r\n  window.GS = runtime;\r\n}\r\n\r\n// Ensure no legacy bridge remains; runtime boots purely via TS modules.\r\n\r\n\r\n// Auto-start the runtime once the DOM is ready so UI registers and field chrome renders.\r\n// Idempotent: start() guards on a local flag.\r\nif (typeof document !== 'undefined') {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      try { void runtime.start(); } catch (error) { console.error('Runtime start failed', error); }\r\n    }, { once: true });\r\n  } else {\r\n    try { void runtime.start(); } catch (error) { console.error('Runtime start failed', error); }\r\n  }\r\n}\r\n"],"file":"assets/index-D_TaRqHT.js"}