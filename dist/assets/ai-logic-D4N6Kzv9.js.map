{"version":3,"mappings":"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","names":["COACH_PROFILES","createLCG","seed","s","clamp","n","lo","hi","toDistanceBucket","toGo","toFieldZone","ballOnFromHome","offenseIsHome","abs","toClockPhase","quarter","clock","toScoreState","offenseScore","defenseScore","diff","margin","bucket","keyString","k","OpponentModel","opts","halfLife","m","counts","total","c","decayed","ks","row","cats","smoothed","probs","uncertainty","st","down","dist","zone","offScore","defScore","score","categorizeOffenseLabel","label","l","categorizeDefenseLabel","isLegal","playLabel","deps","playerIsHome","r","softmaxPick","rng","items","temp","T","weights","it","sum","x","acc","i","w","yardlineText","PlayCaller","cfg","fromFile","mod","__vitePreload","pre","offenseLabel","defenseLabel","key","state","deckName","hand","predDef","phase","fieldZone","critical","baseT","epsilon","candidates","card","cat","matchup","context","short","long","recentRepeats","antiRepeat","surprise","riskPenalty","util","chosen","idx","offenseIsHome2","telem","options","predOff","o"],"ignoreList":[],"sources":["../../src/ai/CoachProfiles.ts","../../src/sim/RNG.ts","../../src/ai/OpponentModel.ts","../../src/ai/PlayCaller.ts"],"sourcesContent":["export interface CoachProfile {\r\n  name: string;\r\n  aggression: number;\r\n  fourthDownBoost: number;\r\n  passBias: number; // positive => pass leaning, negative => run leaning\r\n  twoPointAggressiveLate: boolean;\r\n  onsideAggressive: boolean;\r\n}\r\n\r\nexport const COACH_PROFILES: Record<string, CoachProfile> = {\r\n  'Andy Reid': {\r\n    name: 'Andy Reid',\r\n    aggression: 0.9,\r\n    fourthDownBoost: 0.15,\r\n    passBias: 0.15,\r\n    twoPointAggressiveLate: true,\r\n    onsideAggressive: true,\r\n  },\r\n  'John Madden': {\r\n    name: 'John Madden',\r\n    aggression: 0.6,\r\n    fourthDownBoost: 0.08,\r\n    passBias: 0.05,\r\n    twoPointAggressiveLate: false,\r\n    onsideAggressive: false,\r\n  },\r\n  'Bill Belichick': {\r\n    name: 'Bill Belichick',\r\n    aggression: 0.35,\r\n    fourthDownBoost: 0.0,\r\n    passBias: -0.05,\r\n    twoPointAggressiveLate: false,\r\n    onsideAggressive: false,\r\n  },\r\n};\r\n","export type RNG = () => number;\r\n\r\nexport function createLCG(seed: number): RNG {\r\n  let s = seed % 2147483647;\r\n  if (s <= 0) s += 2147483646;\r\n  return function next(): number {\r\n    s = (s * 16807) % 2147483647;\r\n    return (s - 1) / 2147483646;\r\n  };\r\n}\r\n\r\nexport function rollD6(rng: RNG): number {\r\n  return Math.floor(rng() * 6) + 1;\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\n\r\nexport type OffenseBucket = 'run_mid'|'run_edge'|'pass_short'|'pass_deep'|'gadget';\r\nexport type DefenseBucket = 'goal_line'|'short_yd'|'inside_blitz'|'outside_blitz'|'balanced'|'passing'|'prevent'|'prevent_deep';\r\n\r\nexport type ClockPhase = 'Q1'|'Q2'|'Q3'|'Q4-early'|'Q4-late'|'two_min';\r\nexport type DistanceBucket = 1|'2-3'|'4-6'|'7-10'|'11-15'|'16+';\r\nexport type FieldZone = 'own_gl'|'backed'|'own'|'mid'|'plus'|'red';\r\nexport type ScoreMargin = 1|'2-3'|'4-7'|'8-14'|'15+';\r\nexport type ScoreState = `lead:${ScoreMargin}`|`trail:${ScoreMargin}`|'tied';\r\n\r\nexport interface ModelCtxKey {\r\n  down: 1|2|3|4;\r\n  dist: DistanceBucket;\r\n  zone: FieldZone;\r\n  score: ScoreState;\r\n  clock: ClockPhase;\r\n}\r\n\r\nfunction clamp<T>(n: number, lo: number, hi: number): number { return Math.max(lo, Math.min(hi, n)); }\r\n\r\nexport function toDistanceBucket(toGo: number): DistanceBucket {\r\n  if (toGo <= 1) return 1;\r\n  if (toGo <= 3) return '2-3';\r\n  if (toGo <= 6) return '4-6';\r\n  if (toGo <= 10) return '7-10';\r\n  if (toGo <= 15) return '11-15';\r\n  return '16+';\r\n}\r\n\r\nexport function toFieldZone(ballOnFromHome: number, offenseIsHome: boolean): FieldZone {\r\n  const abs = offenseIsHome ? ballOnFromHome : (100 - ballOnFromHome);\r\n  if (abs <= 5) return 'own_gl';\r\n  if (abs <= 19) return 'backed';\r\n  if (abs <= 39) return 'own';\r\n  if (abs <= 59) return 'mid';\r\n  if (abs <= 79) return 'plus';\r\n  return 'red';\r\n}\r\n\r\nexport function toClockPhase(quarter: number, clock: number): ClockPhase {\r\n  if (clock <= 120) return 'two_min';\r\n  if (quarter === 4 && clock <= 6 * 60) return 'Q4-late';\r\n  if (quarter === 4) return 'Q4-early';\r\n  if (quarter === 3) return 'Q3';\r\n  if (quarter === 2) return 'Q2';\r\n  return 'Q1';\r\n}\r\n\r\nexport function toScoreState(offenseScore: number, defenseScore: number): ScoreState {\r\n  const diff = offenseScore - defenseScore;\r\n  if (diff === 0) return 'tied';\r\n  const margin = Math.abs(diff);\r\n  const bucket: ScoreMargin = ((): ScoreMargin => {\r\n    if (margin <= 1) return 1;\r\n    if (margin <= 3) return '2-3';\r\n    if (margin <= 7) return '4-7';\r\n    if (margin <= 14) return '8-14';\r\n    return '15+';\r\n  })();\r\n  return (diff > 0 ? `lead:${bucket}` : `trail:${bucket}`);\r\n}\r\n\r\nfunction keyString(k: ModelCtxKey): string {\r\n  return `${k.down}|${k.dist}|${k.zone}|${k.score}|${k.clock}`;\r\n}\r\n\r\ntype CountMap = Record<string, number>;\r\n\r\nexport interface Prediction<T extends string> {\r\n  probs: Record<T, number>;\r\n  uncertainty: number; // 0..1 where higher means more uncertain\r\n}\r\n\r\nexport class OpponentModel {\r\n  private offenseCounts: Map<string, CountMap> = new Map();\r\n  private defenseCounts: Map<string, CountMap> = new Map();\r\n  private decay: number;\r\n  private alpha: number;\r\n\r\n  constructor(opts?: { halfLife?: number; alpha?: number }) {\r\n    const halfLife = Math.max(1, Math.floor(opts?.halfLife ?? 12));\r\n    // Convert half-life to per-update decay factor d where weight *= d per play\r\n    // After H plays, weight halves => d^H = 0.5 => d = 0.5^(1/H)\r\n    this.decay = Math.pow(0.5, 1 / halfLife);\r\n    this.alpha = opts?.alpha ?? 0.5;\r\n  }\r\n\r\n  reset(): void {\r\n    this.offenseCounts.clear();\r\n    this.defenseCounts.clear();\r\n  }\r\n\r\n  private decayAll(m: Map<string, CountMap>): void {\r\n    for (const [k, counts] of m) {\r\n      let total = 0;\r\n      for (const c of Object.keys(counts)) {\r\n        const current = counts[c] ?? 0;\r\n        const decayed = current * this.decay;\r\n        counts[c] = decayed;\r\n        total += decayed;\r\n      }\r\n      // Drop tiny entries to keep map small\r\n      if (total < 1e-3) m.delete(k);\r\n    }\r\n  }\r\n\r\n  stepDecay(): void {\r\n    this.decayAll(this.offenseCounts);\r\n    this.decayAll(this.defenseCounts);\r\n  }\r\n\r\n  recordOffense(k: ModelCtxKey, bucket: OffenseBucket): void {\r\n    const ks = keyString(k);\r\n    const row = this.offenseCounts.get(ks) || Object.create(null);\r\n    row[bucket] = (row[bucket] || 0) + 1;\r\n    this.offenseCounts.set(ks, row);\r\n  }\r\n\r\n  recordDefense(k: ModelCtxKey, bucket: DefenseBucket): void {\r\n    const ks = keyString(k);\r\n    const row = this.defenseCounts.get(ks) || Object.create(null);\r\n    row[bucket] = (row[bucket] || 0) + 1;\r\n    this.defenseCounts.set(ks, row);\r\n  }\r\n\r\n  predictOffense(k: ModelCtxKey): Prediction<OffenseBucket> {\r\n    const ks = keyString(k);\r\n    const counts = this.offenseCounts.get(ks) || {};\r\n    const cats: OffenseBucket[] = ['run_mid','run_edge','pass_short','pass_deep','gadget'];\r\n    let total = 0;\r\n    const smoothed: Record<OffenseBucket, number> = {\r\n      run_mid: this.alpha,\r\n      run_edge: this.alpha,\r\n      pass_short: this.alpha,\r\n      pass_deep: this.alpha,\r\n      gadget: this.alpha,\r\n    };\r\n    for (const c of cats) { smoothed[c] += counts[c] || 0; total += smoothed[c]; }\r\n    const probs = Object.fromEntries(cats.map(c => [c, (smoothed[c] || 0) / (total || 1)])) as Record<OffenseBucket, number>;\r\n    const ess = Object.values(counts).reduce((s, n) => s + (n || 0), 0);\r\n    const uncertainty = 1 / (1 + ess);\r\n    return { probs, uncertainty };\r\n  }\r\n\r\n  predictDefense(k: ModelCtxKey): Prediction<DefenseBucket> {\r\n    const ks = keyString(k);\r\n    const counts = this.defenseCounts.get(ks) || {};\r\n    const cats: DefenseBucket[] = ['goal_line','short_yd','inside_blitz','outside_blitz','balanced','passing','prevent','prevent_deep'];\r\n    let total = 0;\r\n    const smoothed: Record<DefenseBucket, number> = Object.create(null);\r\n    for (const c of cats) { smoothed[c] = (counts[c] || 0) + this.alpha; total += smoothed[c]; }\r\n    const probs = Object.fromEntries(cats.map(c => [c, (smoothed[c] || 0) / (total || 1)])) as Record<DefenseBucket, number>;\r\n    const ess = Object.values(counts).reduce((s, n) => s + (n || 0), 0);\r\n    const uncertainty = 1 / (1 + ess);\r\n    return { probs, uncertainty };\r\n  }\r\n\r\n  // Utility helpers to build model keys from state and perspective\r\n  buildKeyFromState(st: GameState, offenseIsHome: boolean): ModelCtxKey {\r\n    const down = (clamp(st.down, 1, 4) as 1|2|3|4);\r\n    const dist = toDistanceBucket(st.toGo);\r\n    const zone = toFieldZone(st.ballOn, offenseIsHome);\r\n    const clock = toClockPhase(st.quarter, st.clock);\r\n    const offScore = st.score[(st.possession === 'player') ? 'player' : 'ai'];\r\n    const defScore = st.score[(st.possession === 'player') ? 'ai' : 'player'];\r\n    const score = toScoreState(offScore, defScore);\r\n    return { down, dist, zone, score, clock };\r\n  }\r\n}\r\n\r\nexport function categorizeOffenseLabel(label: string): OffenseBucket {\r\n  const l = label.toLowerCase();\r\n  if (/reverse|razzle|flea|double pass|end around/.test(l)) return 'gadget';\r\n  if (/end run|outside|sweep|toss/.test(l)) return 'run_edge';\r\n  if (/long bomb|deep|post|corner|stop & go|streak/.test(l)) return 'pass_deep';\r\n  if (/pass|hook|look in|sideline|flair|flare|pop|button|down & (in|out)|screen|quick|slant/.test(l)) return 'pass_short';\r\n  return 'run_mid';\r\n}\r\n\r\nexport function categorizeDefenseLabel(label: string): DefenseBucket {\r\n  const l = label.toLowerCase();\r\n  if (/goal line/.test(l)) return 'goal_line';\r\n  if (/short yardage/.test(l)) return 'short_yd';\r\n  if (/inside blitz/.test(l)) return 'inside_blitz';\r\n  if (/outside blitz/.test(l)) return 'outside_blitz';\r\n  if (/prevent deep/.test(l)) return 'prevent_deep';\r\n  if (/prevent/.test(l)) return 'prevent';\r\n  if (/passing/.test(l)) return 'passing';\r\n  return 'balanced';\r\n}\r\n\r\n\r\n","import type { RNG } from '../sim/RNG';\nimport { createLCG } from '../sim/RNG';\nimport type { GameState } from '../domain/GameState';\nimport type { OffenseCharts } from '../data/schemas/OffenseCharts';\nimport { OpponentModel, categorizeDefenseLabel, categorizeOffenseLabel, toClockPhase, toFieldZone } from './OpponentModel';\n\nexport type OffenseCall = { deckName: string; playLabel: string };\nexport type DefenseCall = { label: string };\n\nexport interface PersonalityConfig {\n  aggressiveness_offense: number;\n  aggressiveness_defense: number;\n  trick_play_rate: number;\n  blitz_rate_base: number;\n  deception_bias: number;\n  tempo_preference: 'normal'|'hurry'|'chew';\n  risk_tolerance_late: number;\n}\n\nexport interface PlayCallerDeps {\n  charts: OffenseCharts;\n  getOffenseHand(): Array<{ id: string; label: string; type: 'run'|'pass'|'punt'|'field-goal' }>;\n  getDefenseOptions(): string[];\n  getWhiteSignRestriction(playLabel: string): number | null;\n}\n\nfunction clamp(n: number, lo: number, hi: number): number { return Math.max(lo, Math.min(hi, n)); }\n\nfunction isLegal(playLabel: string, deps: PlayCallerDeps, st: GameState, playerIsHome: boolean): boolean {\n  const r = deps.getWhiteSignRestriction(playLabel);\n  if (r == null) return true;\n  const offenseIsHome = (st.possession === 'player') === playerIsHome;\n  const yardsToOpp = offenseIsHome ? (100 - st.ballOn) : st.ballOn;\n  return yardsToOpp > r;\n}\n\nfunction softmaxPick<T>(rng: RNG, items: Array<{ item: T; util: number }>, temp: number): T {\n  const T = Math.max(0.05, temp);\n  const weights = items.map(it => Math.exp(clamp(it.util, -1, 1) / T));\n  const sum = weights.reduce((s, x) => s + x, 0) || 1;\n  const r = rng() * sum;\n  let acc = 0;\n  for (let i = 0; i < items.length; i++) {\n    const w = weights[i] || 0;\n    if (r >= acc && r < acc + w) return items[i]!.item;\n    acc += w;\n  }\n  return items[items.length - 1]!.item;\n}\n\nfunction yardlineText(st: GameState, offenseIsHome: boolean): string {\n  const abs = st.ballOn;\n  if (offenseIsHome) {\n    if (abs <= 50) return `OWN ${Math.max(1, abs)}`;\n    return `OPP ${Math.max(1, 100 - abs)}`;\n  } else {\n    if (abs >= 50) return `OWN ${Math.max(1, 100 - abs)}`;\n    return `OPP ${Math.max(1, abs)}`;\n  }\n}\n\nexport class PlayCaller {\n  private rng: RNG = Math.random;\n  private model = new OpponentModel({ halfLife: 12, alpha: 0.5 });\n  private lastOffenseCalls: string[] = [];\n  private lastDefenseCalls: string[] = [];\n  private personality: PersonalityConfig = {\n    aggressiveness_offense: 0.5,\n    aggressiveness_defense: 0.5,\n    trick_play_rate: 0.02,\n    blitz_rate_base: 0.18,\n    deception_bias: 0.25,\n    tempo_preference: 'normal',\n    risk_tolerance_late: 0.6,\n  };\n\n  constructor(private deps: PlayCallerDeps, private playerIsHome: boolean) {}\n\n  async loadPersonality(cfg?: Partial<PersonalityConfig>): Promise<void> {\n    try {\n      // Attempt to load JSON config if available at runtime path (bundlers may inline or fail gracefully)\n      let fromFile: Partial<PersonalityConfig> = {};\n      try {\n        const mod: any = await import('./playcaller.config.json').catch(() => null);\n        fromFile = (mod && (mod.default || mod)) || {};\n      } catch {}\n      this.personality = { ...this.personality, ...fromFile } as PersonalityConfig;\n    } catch {}\n    if (cfg) this.personality = { ...this.personality, ...cfg } as PersonalityConfig;\n  }\n\n  reset(seed: number): void {\n    this.rng = createLCG(seed);\n    this.model.reset();\n    this.lastOffenseCalls = [];\n    this.lastDefenseCalls = [];\n  }\n\n  stepDecay(): void {\n    this.model.stepDecay();\n  }\n\n  add_observation(pre: GameState, offenseLabel: string, defenseLabel: string): void {\n    const offenseIsHome = (pre.possession === 'player') === this.playerIsHome;\n    const key = this.model.buildKeyFromState(pre, offenseIsHome);\n    this.model.recordOffense(key, categorizeOffenseLabel(offenseLabel));\n    this.model.recordDefense(key, categorizeDefenseLabel(defenseLabel));\n  }\n\n  choose_offense_play(state: GameState, deckName: string): OffenseCall {\n    const hand = this.deps.getOffenseHand().filter(c => (c.type === 'run' || c.type === 'pass') && isLegal(c.label, this.deps, state, this.playerIsHome));\n    const offenseIsHome = (state.possession === 'player') === this.playerIsHome;\n    const key = this.model.buildKeyFromState(state, offenseIsHome);\n    const predDef = this.model.predictDefense(key);\n    const phase = toClockPhase(state.quarter, state.clock);\n    const fieldZone = toFieldZone(state.ballOn, offenseIsHome);\n\n    // Temperature schedule\n    const critical = (state.down === 3 && state.toGo >= 6) || state.down === 4 || (state.quarter === 4 && state.clock <= 6 * 60);\n    const baseT = this.personality.tempo_preference === 'hurry' ? 0.7 : this.personality.tempo_preference === 'chew' ? 0.5 : 0.6;\n    const temp = clamp(baseT * (critical ? 0.6 : 1.0), 0.2, 1.2);\n    const epsilon = 0.03;\n\n    const candidates = hand.map(card => {\n      const cat = categorizeOffenseLabel(card.label);\n      // Matchup score crude matrix vs predicted defense buckets\n      const d = predDef.probs;\n      let matchup = 0;\n      if (cat === 'run_mid') matchup = (+0.2)*(d.passing + d.prevent + d.prevent_deep) + (-0.3)*(d.goal_line + d.short_yd + d.inside_blitz);\n      else if (cat === 'run_edge') matchup = (+0.15)*(d.passing + d.balanced) + (-0.25)*(d.short_yd + d.outside_blitz);\n      else if (cat === 'pass_short') matchup = (+0.25)*(d.balanced + d.passing) + (-0.25)*(d.inside_blitz + d.outside_blitz + d.goal_line);\n      else if (cat === 'pass_deep') matchup = (+0.35)*d.passing + (-0.5)*(d.prevent + d.prevent_deep);\n      else if (cat === 'gadget') matchup = (+0.15)*(1 - d.short_yd) + (-0.2)*d.goal_line;\n\n      // Context score: field position and down-distance\n      let context = 0;\n      const short = state.toGo <= 2;\n      const long = state.toGo >= 8;\n      if (short && (cat === 'run_mid' || cat === 'run_edge' || /keeper|slant|off tackle/i.test(card.label))) context += 0.25;\n      if (long && (cat === 'pass_short' || cat === 'pass_deep')) context += 0.2;\n      if (fieldZone === 'own_gl' || fieldZone === 'backed') {\n        if (cat === 'pass_deep' || cat === 'gadget') context -= 0.3;\n      }\n      if (fieldZone === 'red' && state.down === 1 && cat === 'run_mid') context += 0.05; // diversify but keep base viable\n\n      // Anti-repeat penalty\n      const recentRepeats = this.lastOffenseCalls.slice(-2).filter(x => x === card.label).length;\n      const antiRepeat = recentRepeats >= 2 ? -0.5 : (recentRepeats === 1 ? -0.2 : 0);\n\n      // Deception: if model is confident (low uncertainty), small boost to off-tendency picks\n      const surprise = (1 - predDef.uncertainty) * this.personality.deception_bias * (Math.random() < 0.5 ? 1 : -1) * 0.1;\n\n      // Risk penalty for deep/gadget when leading late\n      const offScore = state.score[(state.possession === 'player') ? 'player' : 'ai'];\n      const defScore = state.score[(state.possession === 'player') ? 'ai' : 'player'];\n      const leadingLate = (state.quarter === 4 && state.clock <= 5 * 60 && offScore > defScore);\n      const riskPenalty = leadingLate && (cat === 'pass_deep' || cat === 'gadget') ? 0.25 : 0;\n\n      const w_matchup = 0.45;\n      const w_context = 0.30;\n      const w_var = 0.15;\n      const w_deception = 0.10;\n      const w_risk = 0.40;\n      const util = clamp(w_matchup*matchup + w_context*context + w_var*antiRepeat + w_deception*surprise - w_risk*riskPenalty, -1, 1);\n      return { item: { deckName, playLabel: card.label }, util } as { item: OffenseCall; util: number };\n    });\n\n    let chosen: OffenseCall;\n    if (this.rng() < epsilon) {\n      const idx = Math.floor(this.rng() * Math.max(1, candidates.length));\n      chosen = candidates[Math.min(idx, candidates.length - 1)]!.item;\n    } else {\n      chosen = softmaxPick(this.rng, candidates, temp);\n    }\n\n    // Keep short memory for anti-repeat\n    this.lastOffenseCalls.push(chosen.playLabel);\n    if (this.lastOffenseCalls.length > 8) this.lastOffenseCalls.shift();\n\n    // Telemetry (dev mode only)\n    try {\n      const isDev = (() => {\n        try { if (typeof localStorage !== 'undefined') return localStorage.getItem('gs_dev_mode') === '1'; } catch {}\n        try { return !!(globalThis as any).GS?.__devMode?.enabled; } catch {}\n        return false;\n      })();\n      if (isDev) {\n        const offenseIsHome2 = (state.possession === 'player') === this.playerIsHome;\n        const telem = {\n          drive: undefined,\n          quarter: state.quarter,\n          clock: `${String(Math.floor(state.clock/60)).padStart(1,'0')}:${String(state.clock%60).padStart(2,'0')}`,\n          score: { us: state.score[(state.possession==='player')?'player':'ai'], them: state.score[(state.possession==='player')?'ai':'player'] },\n          down: state.down, to_go: state.toGo, yardline: yardlineText(state, offenseIsHome2),\n          phase,\n          field_zone: fieldZone,\n          opponent_pred: predDef.probs,\n          uncertainty: predDef.uncertainty,\n          candidates: candidates.map(c => ({ call: c.item.playLabel, utility: Number(c.util.toFixed(3)) })),\n          temp, epsilon,\n          chosen: chosen.playLabel,\n          personality: {\n            agg_off: this.personality.aggressiveness_offense,\n            deception: this.personality.deception_bias,\n            trick_rate: this.personality.trick_play_rate,\n          },\n        } as const;\n        (globalThis as any).GS?.bus?.emit?.('qa:debug', { text: JSON.stringify(telem) });\n      }\n    } catch {}\n\n    return chosen;\n  }\n\n  choose_defense_play(state: GameState): DefenseCall {\n    const options = this.deps.getDefenseOptions();\n    const offenseIsHome = (state.possession === 'player') === this.playerIsHome;\n    const key = this.model.buildKeyFromState(state, offenseIsHome);\n    const predOff = this.model.predictOffense(key);\n    const phase = toClockPhase(state.quarter, state.clock);\n    const fieldZone = toFieldZone(state.ballOn, offenseIsHome);\n\n    // Build utilities\n    const candidates = options.map(label => {\n      const cat = categorizeDefenseLabel(label);\n      const o = predOff.probs;\n      let matchup = 0;\n      if (cat === 'goal_line' || cat === 'short_yd') matchup = (+0.35)*(o.run_mid + o.run_edge) + (-0.25)*o.pass_deep;\n      else if (cat === 'inside_blitz' || cat === 'outside_blitz') matchup = (+0.25)*(o.pass_short) + (-0.25)*o.gadget;\n      else if (cat === 'passing') matchup = (+0.35)*(o.pass_short + o.pass_deep) + (-0.2)*(o.run_mid);\n      else if (cat === 'prevent_deep') matchup = (+0.5)*o.pass_deep + (-0.35)*(o.run_mid + o.run_edge);\n      else if (cat === 'prevent') matchup = (+0.35)*o.pass_deep + (-0.2)*o.run_mid;\n      else matchup = (+0.2)*(o.run_mid + o.run_edge + o.pass_short) - 0.05*o.gadget;\n\n      let context = 0;\n      const short = state.toGo <= 2;\n      if (short && (cat === 'goal_line' || cat === 'short_yd' || cat === 'inside_blitz')) context += 0.2;\n      if (fieldZone === 'red' && (cat === 'goal_line' || cat === 'short_yd')) context += 0.1;\n      if (state.quarter === 4 && state.clock <= 2*60 && cat === 'prevent_deep') context += 0.25;\n\n      const recentRepeats = this.lastDefenseCalls.slice(-2).filter(x => x === label).length;\n      const antiRepeat = recentRepeats >= 2 ? -0.4 : (recentRepeats === 1 ? -0.15 : 0);\n\n      const util = clamp(0.6*matchup + 0.3*context + 0.1*antiRepeat, -1, 1);\n      return { item: { label }, util } as { item: DefenseCall; util: number };\n    });\n\n    const critical = (state.down === 3 && state.toGo >= 8) || (state.quarter === 4 && state.clock <= 120);\n    const temp = critical ? 0.45 : 0.65;\n    const epsilon = 0.02 + 0.1*predOff.uncertainty; // widen when uncertain\n\n    let chosen: DefenseCall;\n    if (this.rng() < epsilon) {\n      const idx = Math.floor(this.rng() * Math.max(1, candidates.length));\n      chosen = candidates[Math.min(idx, candidates.length - 1)]!.item;\n    } else {\n      chosen = softmaxPick(this.rng, candidates, temp);\n    }\n\n    this.lastDefenseCalls.push(chosen.label);\n    if (this.lastDefenseCalls.length > 8) this.lastDefenseCalls.shift();\n\n    try {\n      const isDev = (() => {\n        try { if (typeof localStorage !== 'undefined') return localStorage.getItem('gs_dev_mode') === '1'; } catch {}\n        try { return !!(globalThis as any).GS?.__devMode?.enabled; } catch {}\n        return false;\n      })();\n      if (isDev) {\n        const offenseIsHome2 = (state.possession === 'player') === this.playerIsHome;\n        const telem = {\n          quarter: state.quarter,\n          clock: `${String(Math.floor(state.clock/60)).padStart(1,'0')}:${String(state.clock%60).padStart(2,'0')}`,\n          score: { us: state.score[(state.possession==='player')?'player':'ai'], them: state.score[(state.possession==='player')?'ai':'player'] },\n          down: state.down, to_go: state.toGo, yardline: yardlineText(state, offenseIsHome2),\n          phase,\n          field_zone: fieldZone,\n          opponent_pred: predOff.probs,\n          uncertainty: predOff.uncertainty,\n          candidates: candidates.map(c => ({ call: c.item.label, utility: Number(c.util.toFixed(3)) })),\n          temp, epsilon,\n          chosen: chosen.label,\n          personality: { agg_def: this.personality.aggressiveness_defense },\n        } as const;\n        (globalThis as any).GS?.bus?.emit?.('qa:debug', { text: JSON.stringify(telem) });\n      }\n    } catch {}\n\n    return chosen;\n  }\n}\n\n\n"],"file":"assets/ai-logic-D4N6Kzv9.js"}