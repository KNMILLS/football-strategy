{"version":3,"file":"game-flow-PjC-A5UU.js","sources":["../../src/rules/special/Kickoff.ts","../../src/rules/special/Punt.ts","../../src/rules/special/PlaceKicking.ts","../../src/flow/narration/Broadcast.ts","../../src/flow/narration/Summary.ts","../../src/flow/drive/DriveTracker.ts","../../src/flow/special/SpecialTeamsFlow.ts","../../src/flow/scoring/Scoring.ts","../../src/flow/penalties/PenaltyFlow.ts","../../src/flow/special/Safety.ts","../../src/flow/HudPayload.ts","../../src/flow/utils/GameFlowUtils.ts","../../src/flow/formatting/GameFlowFormatting.ts","../../src/flow/time/TimeManagement.ts","../../src/flow/core/GameFlowCore.ts","../../src/flow/GameFlow.ts"],"sourcesContent":["import { rollD6, resolveLongGain } from '../LongGain';\r\nimport type { RNG } from '../../sim/RNG';\r\n\r\nexport const NORMAL_KICKOFF_TABLE: Record<number, number | string> = {\r\n  2: 'FUMBLE*',\r\n  3: 'PENALTY -10*',\r\n  4: 10,\r\n  5: 15,\r\n  6: 20,\r\n  7: 25,\r\n  8: 30,\r\n  9: 35,\r\n  10: 40,\r\n  11: 'LG',\r\n  12: 'LG + 5',\r\n};\r\n\r\nexport interface OnsideEntry { possession: 'kicker' | 'receiver'; yard: number }\r\nexport const ONSIDE_KICK_TABLE: Record<number, OnsideEntry> = {\r\n  1: { possession: 'kicker', yard: 40 },\r\n  2: { possession: 'kicker', yard: 40 },\r\n  3: { possession: 'receiver', yard: 35 },\r\n  4: { possession: 'receiver', yard: 35 },\r\n  5: { possession: 'receiver', yard: 35 },\r\n  6: { possession: 'receiver', yard: 30 },\r\n};\r\n\r\nexport interface KickoffResult { yardLine: number; turnover: boolean }\r\n\r\nexport function parseKickoffYardLine(res: number | string, rng: RNG): KickoffResult {\r\n  if (typeof res === 'number') return { yardLine: res, turnover: false };\r\n  if (res === 'LG') return { yardLine: Math.min(resolveLongGain(rng), 50), turnover: false };\r\n  if (res === 'LG + 5') return { yardLine: Math.min(resolveLongGain(rng) + 5, 50), turnover: false };\r\n  return { yardLine: 25, turnover: false };\r\n}\r\n\r\nexport function resolveKickoff(\r\n  rng: RNG,\r\n  opts: { onside: boolean; kickerLeadingOrTied: boolean }\r\n): KickoffResult {\r\n  if (opts.onside) {\r\n    let roll = rollD6(rng);\r\n    if (opts.kickerLeadingOrTied) roll = Math.min(6, roll + 1);\r\n    const entry = ONSIDE_KICK_TABLE[roll] || { possession: 'receiver', yard: 35 };\r\n    return { yardLine: entry.yard, turnover: entry.possession === 'kicker' };\r\n  }\r\n  let roll = rollD6(rng) + rollD6(rng);\r\n  let entry = NORMAL_KICKOFF_TABLE[roll];\r\n  let turnover = false;\r\n  let penalty = false;\r\n  if (typeof entry === 'string' && entry.includes('*')) {\r\n    if (/FUMBLE/i.test(entry)) turnover = true;\r\n    if (/PENALTY/i.test(entry)) penalty = true;\r\n    // strip '*'\r\n    entry = (entry as string).replace('*', '').trim();\r\n    // reroll for yard line possibly with another star\r\n    const reroll = rollD6(rng) + rollD6(rng);\r\n    let res2 = NORMAL_KICKOFF_TABLE[reroll];\r\n    if (typeof res2 === 'string' && res2.includes('*')) {\r\n      if (/FUMBLE/i.test(res2)) turnover = false; // offset\r\n      if (/PENALTY/i.test(res2)) penalty = false; // offset\r\n      res2 = res2.replace('*', '').trim();\r\n    }\r\n    entry = res2;\r\n  }\r\n  const parsed = parseKickoffYardLine(entry as any, rng);\r\n  let finalYard = parsed.yardLine;\r\n  if (penalty) finalYard = Math.max(0, parsed.yardLine - 10);\r\n  return { yardLine: finalYard, turnover };\r\n}\r\n","import type { RNG } from '../../sim/RNG';\r\n\r\nexport const PUNT_DISTANCE_TABLE: Record<number, number> = {\r\n  2: 30, 3: 35, 4: 38, 5: 40, 6: 42, 7: 43, 8: 44, 9: 46, 10: 48, 11: 50, 12: 52,\r\n};\r\n\r\nexport const PUNT_RETURN_TABLE: Record<number, { type?: 'LG' | 'FC'; yards?: number }> = {\r\n  2: { type: 'LG' },\r\n  3: { yards: 20 },\r\n  4: { yards: 15 },\r\n  5: { yards: 12 },\r\n  6: { yards: 10 },\r\n  7: { yards: 8 },\r\n  8: { yards: 6 },\r\n  9: { yards: 5 },\r\n  10: { yards: 3 },\r\n  11: { yards: 0 },\r\n  12: { type: 'FC' },\r\n};\r\n\r\nexport interface PuntContext {\r\n  ballOn: number; // 0..100\r\n  puntingTeam: 'player' | 'ai';\r\n}\r\n\r\nexport interface PuntOutcome {\r\n  ballOn: number;\r\n  possessionFlips: boolean;\r\n  fumbleRecoveredByKickingTeam: boolean;\r\n  touchback: boolean;\r\n  // Optional narration aids\r\n  distance?: number;\r\n  returnYards?: number;\r\n  returnType?: 'LG'|'FC'|'YDS';\r\n}\r\n\r\nexport function rollD6(rng: RNG): number { return Math.floor(rng() * 6) + 1; }\r\n\r\nexport function resolvePunt(ctx: PuntContext, rng: RNG, resolveLongGain: (rng: RNG) => number): PuntOutcome {\r\n  const puntingIsPlayer = ctx.puntingTeam === 'player';\r\n  // Distance\r\n  const distRoll = rollD6(rng) + rollD6(rng);\r\n  const puntDistance = PUNT_DISTANCE_TABLE[distRoll] ?? 40;\r\n  let ballOn = ctx.ballOn + (puntingIsPlayer ? puntDistance : -puntDistance);\r\n  // End zone over/through using centralized Spots helpers\r\n  if (ballOn > 100 || ballOn < 0 || ballOn === 100 || ballOn === 0) {\r\n    const receiving = puntingIsPlayer ? 'ai' : 'player';\r\n    // Inline to avoid circular imports if any; mirrors Spots.puntTouchback\r\n    const tbBallOn = receiving === 'player' ? 20 : 80;\r\n    return { ballOn: tbBallOn, possessionFlips: true, fumbleRecoveredByKickingTeam: false, touchback: true, distance: puntDistance, returnYards: 0, returnType: 'YDS' };\r\n  }\r\n  // In play: resolve return\r\n  const retRoll = rollD6(rng) + rollD6(rng);\r\n  const ret = PUNT_RETURN_TABLE[retRoll] || { yards: 0 };\r\n  let returnYards = 0;\r\n  let fumbleTurnover = false;\r\n  if (ret.type === 'FC') {\r\n    returnYards = 0;\r\n    // Fair catch: no fumble chance\r\n  } else if (ret.type === 'LG') {\r\n    returnYards = resolveLongGain(rng);\r\n  } else {\r\n    returnYards = ret.yards || 0;\r\n    if (retRoll <= 4) {\r\n      if (rng() < 0.15) {\r\n        fumbleTurnover = rng() < 0.5;\r\n      }\r\n    }\r\n  }\r\n  if (puntingIsPlayer) ballOn -= returnYards; else ballOn += returnYards;\r\n  ballOn = Math.max(0, Math.min(100, ballOn));\r\n  if (fumbleTurnover) {\r\n    // Kicking team recovers: possession does not flip\r\n    return { ballOn, possessionFlips: false, fumbleRecoveredByKickingTeam: true, touchback: false, distance: puntDistance, returnYards, returnType: ret.type ? ret.type : 'YDS' };\r\n  }\r\n  return { ballOn, possessionFlips: true, fumbleRecoveredByKickingTeam: false, touchback: false, distance: puntDistance, returnYards, returnType: ret.type ? ret.type : 'YDS' };\r\n}\r\n","import type { RNG } from '../../sim/RNG';\r\n\r\nexport const PLACE_KICK_TABLE: Record<number, Record<string, 'G'|'NG'>> = {\r\n  2: { PAT: 'NG', '1-12': 'NG', '13-22': 'NG', '23-32': 'G', '33-38': 'G', '39-45': 'G' },\r\n  3: { PAT: 'G',  '1-12': 'NG', '13-22': 'NG', '23-32': 'NG', '33-38': 'G', '39-45': 'NG' },\r\n  4: { PAT: 'G',  '1-12': 'G',  '13-22': 'NG', '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  5: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  6: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'NG', '39-45': 'NG' },\r\n  7: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'G',  '39-45': 'NG' },\r\n  8: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'G',  '33-38': 'NG', '39-45': 'NG' },\r\n  9: { PAT: 'G',  '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  10: { PAT: 'G', '1-12': 'G',  '13-22': 'G',  '23-32': 'NG', '33-38': 'NG', '39-45': 'NG' },\r\n  11: { PAT: 'G', '1-12': 'G',  '13-22': 'NG', '23-32': 'NG', '33-38': 'G',  '39-45': 'NG' },\r\n  12: { PAT: 'NG','1-12': 'NG', '13-22': 'G',  '23-32': 'G',  '33-38': 'G',  '39-45': 'G' },\r\n};\r\n\r\nexport function rollD6(rng: RNG): number { return Math.floor(rng() * 6) + 1; }\r\n\r\nexport function attemptPAT(rng: RNG): boolean {\r\n  const roll = rollD6(rng) + rollD6(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {};\r\n  return row.PAT === 'G';\r\n}\r\n\r\nexport function attemptFieldGoal(rng: RNG, attemptYards: number): boolean {\r\n  const ay = Math.round(attemptYards);\r\n  let col: string | null = null;\r\n  if (ay <= 12) col = '1-12';\r\n  else if (ay <= 22) col = '13-22';\r\n  else if (ay <= 32) col = '23-32';\r\n  else if (ay <= 38) col = '33-38';\r\n  else if (ay <= 45) col = '39-45';\r\n  else col = null;\r\n  if (!col) return false;\r\n  const roll = rollD6(rng) + rollD6(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {};\r\n  return row[col] === 'G';\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport type { PlayInput } from '../types';\r\n\r\nexport function chooseCommentaryLines(notes: string[]): { pbp: string; analyst: string } {\r\n  const cleaned = (notes || []).map((n) => String(n).replace(/\\s+/g, ' ').trim()).filter(Boolean);\r\n  if (cleaned.length === 0) return { pbp: 'Play is underway.', analyst: 'Watch the leverage and pad level here.' };\r\n  if (cleaned.length === 1) return { pbp: cleaned[0] || 'Play is underway.', analyst: 'Good fundamentals at the point of attack.' };\r\n  const isFormation = (s: string) => /\\blines up\\b/i.test(s);\r\n  const isBookkeeping = (s: string) => /^\\d+(st|nd|rd|th)\\s*&|^Now\\s/i.test(s);\r\n  const notFormationOrBook = (s: string) => !(isFormation(s) || isBookkeeping(s));\r\n  const candidates = cleaned.filter(notFormationOrBook);\r\n  const actionRe = /(drops back|throws|pass|button hook|slant|sideline|down and in|down and out|pop pass|flair|flare|screen|bomb|keeper|sneak|draw|trap|toss|sweep|handoff|fumbled|intercepted|sacked|return|pylon|toe-?tap|first down|loss of|gain of|pressure|hits|seam shot|deep post|post|corner)/i;\r\n  const defenseRe = /(blitz|goal[- ]?line|prevent|nickel|coverage|box|pad level|leverage|midfield|red zone|goal to go|backed up|short[- ]?yardage|crowds the line|balanced)/i;\r\n  const pbp = (candidates.find((s) => actionRe.test(s)) || candidates[0] || cleaned.find(notFormationOrBook) || cleaned[0] || 'Play is underway.');\r\n  let analyst = candidates.find((s) => s !== pbp && (defenseRe.test(s) || /first down|now \\d+(st|nd|rd|th)/i.test(s)))\r\n    || cleaned.find((s) => s !== pbp && notFormationOrBook(s))\r\n    || cleaned.find((s) => s !== pbp)\r\n    || 'Good fundamentals at the point of attack.';\r\n  return { pbp, analyst };\r\n}\r\n\r\nexport function buildBroadcastCall(\r\n  pre: GameState,\r\n  next: GameState,\r\n  input: PlayInput,\r\n  outcome: Outcome | undefined,\r\n  deps: {\r\n    rng: RNG;\r\n    playInDrive: number;\r\n    formatClock: (n: number) => string;\r\n    formatOrdinal: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    formatPossessionSpotForBroadcast: (possessing: TeamSide, ballOn: number) => string;\r\n    quarterStats: { explosives: number; turnovers: number };\r\n  }\r\n): { pbp: string; analyst: string } {\r\n  const downText = pre.down === 1 ? 'First and 10' : (pre.down === 2 ? `Second and ${pre.toGo}` : (pre.down === 3 ? `Third and ${pre.toGo}` : `Fourth and ${pre.toGo}`));\r\n  const spotPhrase = deps.formatPossessionSpotForBroadcast(pre.possession, pre.ballOn);\r\n  const def = String(input.defenseLabel || '');\r\n  const off = String(input.playLabel || '');\r\n  const clock = deps.formatClock(pre.clock);\r\n  const scoreText = `HOME ${pre.score.player} – AWAY ${pre.score.ai}`;\r\n  const hash = ((): string => {\r\n    const mod = pre.ballOn % 3; if (mod === 0) return 'left hash'; if (mod === 1) return 'right hash'; return 'between the hashes';\r\n  })();\r\n  const numbersSide = ((): string => {\r\n    const mod = pre.ballOn % 2; return mod === 0 ? 'near side numbers' : 'far side numbers';\r\n  })();\r\n\r\n  const formation = ((): string => {\r\n    if (/shotgun|down &|bomb|screen|sideline|button|look in|pop pass|flair|flare/i.test(off)) return 'shotgun, three wide';\r\n    if (/keeper|sneak|short yard|goal line|off tackle|slant run|trap|draw/i.test(off)) return 'under center, I-formation';\r\n    return 'balanced set';\r\n  })();\r\n  const defLook = ((): string => {\r\n    if (/outside blitz|inside blitz/i.test(def)) return 'blitz look';\r\n    if (/passing/i.test(def)) return 'nickel shell, two-high safeties';\r\n    if (/prevent_deep/i.test(def)) return 'prevent, safeties deep';\r\n    if (/goal line|short yard/i.test(def)) return 'heavy front, stacked box';\r\n    return 'balanced front';\r\n  })();\r\n  const motion = ((): string => {\r\n    if (/sideline|down & out|down & in|screen|flair|flare|button/i.test(off)) return 'slot in short motion';\r\n    return '';\r\n  })();\r\n  const isRun = /run|keeper|draw|trap|sneak|slant|off tackle|end run|razzle/i.test(off) && !/pass/i.test(off);\r\n  const isPass = /pass|hook|look in|sideline|flair|flare|screen|down &/i.test(off);\r\n  const action = isRun\r\n    ? (/end run/i.test(off) ? 'hands it off around the edge.'\r\n      : (/off tackle/i.test(off) ? 'hands it off off tackle.'\r\n        : (/keeper|sneak|qb/i.test(off) ? 'keeps it himself.' : 'turns and hands it off up the middle.')))\r\n    : (isPass ? 'drops back and fires.' : 'gets it out quickly.');\r\n  let resultPart = '';\r\n  if (!outcome) {\r\n    resultPart = '';\r\n  } else if (outcome.category === 'incomplete') {\r\n    resultPart = ' Incomplete.';\r\n  } else if (outcome.category === 'gain' || outcome.category === 'loss') {\r\n    const y = outcome.yards || 0;\r\n    if (y > 0) {\r\n      const runPhrases = [' slips through left guard.',' dives into the pile.',' cuts back against pursuit.',' bounces outside.',' spins forward.'];\r\n      const passPhrases = [' quick hitter underneath.',' slant left, caught.',' button hook at the sticks.',' out to the flat.',' screen forms.'];\r\n      const pick = <T>(arr: T[]): T => arr[Math.floor(((deps.rng?.() || Math.random())) * arr.length)]!;\r\n      const tail = isRun ? pick(runPhrases) : pick(passPhrases);\r\n      resultPart = `${tail} Gain of ${y}.`;\r\n      if (y >= 20) { try { deps.quarterStats.explosives += 1; } catch {}\r\n      }\r\n    } else if (y < 0) resultPart = ` Swallowed up for ${Math.abs(y)}.`;\r\n    else resultPart = ' Stonewalled at the line.';\r\n  } else if (outcome.category === 'fumble') {\r\n    resultPart = ' Ball is loose and recovered.';\r\n    try { deps.quarterStats.turnovers += 1; } catch {}\r\n  } else if (outcome.category === 'interception') {\r\n    resultPart = ' Picked off!';\r\n    try { deps.quarterStats.turnovers += 1; } catch {}\r\n  }\r\n  const preamble = `${downText}, ${deps.formatTeamYardLine(pre.possession, pre.ballOn)}, Q${pre.quarter} ${clock} — ${scoreText}`;\r\n  const offenseTeam = (pre.possession === 'player') ? 'HOME' : 'AWAY';\r\n  const opener = ((): string => {\r\n    const choices = ['Here we go —','They set —','Quick to the line —','They take their time —','Snap comes —','Ball is snapped —','Here’s the play —','They roll it out —'];\r\n    return choices[Math.floor(((deps.rng?.() || Math.random())) * choices.length)]!;\r\n  })();\r\n  const presnap = `${offenseTeam} ${deps.playInDrive > 1 ? 'sets' : 'breaks the huddle'} on the ${hash}, ${formation}. Defense shows ${defLook}${motion ? `, ${motion}` : ''}.`;\r\n  const snap = `${opener} quarterback ${action}${resultPart}`;\r\n  const nextDownText = `${deps.formatOrdinal(next.down)} & ${next.toGo}`;\r\n  const nextSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n  const geo = ((): string => {\r\n    const yardsToGoal = (next.possession === 'player') ? (100 - next.ballOn) : next.ballOn;\r\n    if (yardsToGoal <= 20) return 'inside the red zone';\r\n    if (next.ballOn >= 48 && next.ballOn <= 52) return 'just shy of midfield';\r\n    return `${numbersSide}`;\r\n  })();\r\n  const reset = `Spotted ${geo} at ${nextSpot}. ${nextDownText}.`;\r\n  const late = (pre.quarter === 2 || pre.quarter === 4) && pre.clock <= 120;\r\n  const pressure = late ? (pre.clock < 60 ? ' They’re hurrying now — under a minute left.' : ' Gotta get this snapped before the clock burns.') : '';\r\n  const crowd = ((): string => {\r\n    if (!outcome) return '';\r\n    if (outcome.category === 'interception' || outcome.category === 'fumble') {\r\n      return next.possession === 'player' ? ' And the crowd erupts!' : ' A hush falls over the stadium.';\r\n    }\r\n    return '';\r\n  })();\r\n  const concise = ((deps.rng?.() || Math.random())) < 0.35;\r\n  const pbp = (concise\r\n    ? `${downText} at ${deps.formatTeamYardLine(pre.possession, pre.ballOn)}… ${snap} ${reset}${pressure}${crowd}`\r\n    : `${downText} from ${spotPhrase}, Q${pre.quarter} ${clock} — ${scoreText}. ${presnap} ${snap} ${reset}${pressure}${crowd}`\r\n  ).trim();\r\n\r\n  let analyst = '';\r\n  if (outcome && (outcome.category === 'gain' || outcome.category === 'loss')) {\r\n    const y = outcome.yards || 0;\r\n    if (y >= 8) analyst = isRun ? 'Great cut and second-level block opened that lane.' : 'Beat the leverage outside — timing was perfect.';\r\n    else if (y >= 3) analyst = isRun ? 'Good pad level; fell forward behind the guard.' : 'On time and on target; easy yards.';\r\n    else if (y > 0) analyst = isRun ? 'Patient run, but backers closed fast.' : 'Checkdown; kept it ahead of the sticks.';\r\n    else if (y === 0) analyst = 'Front won at the snap — no movement.';\r\n    else analyst = 'That was a brick wall up front; linebackers filled every crease.';\r\n  }\r\n  if (!analyst) {\r\n    if (/outside blitz/i.test(def)) analyst = 'Edge pressure; QB had to speed it up.';\r\n    else if (/inside blitz/i.test(def)) analyst = 'A-gap heat — protection slid late.';\r\n    else if (/goal line|short yard/i.test(def)) analyst = 'Heavy front, gaps corked.';\r\n    else if (/passing/i.test(def)) analyst = 'Light box with umbrella coverage.';\r\n    else if (/prevent/i.test(def)) analyst = 'Soft shell, keep-it-in-front spacing.';\r\n    else analyst = isRun ? 'Line got just enough push.' : 'Protection held just long enough.';\r\n  }\r\n  try {\r\n    const lastTwo = deps.playInDrive >= 2 ? deps.playInDrive : 0;\r\n    if (lastTwo >= 2 && isRun) analyst += ' They’ve hit that off-tackle twice; don’t be shocked if they fake it next series.';\r\n  } catch {}\r\n  return { pbp, analyst };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\n\r\nexport function buildResultSummary(\r\n  pre: GameState,\r\n  next: GameState,\r\n  outcome: Outcome | undefined,\r\n  flags: { td?: boolean; safety?: boolean },\r\n  currentPlayLabel: string,\r\n  defenseLabel: string,\r\n  deps: {\r\n    formatOrdinal: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    rng: () => number;\r\n    getLastNotesForSide: (side: TeamSide) => { zone: string | null; fgInRange: boolean; defense: string | null };\r\n    setLastNotesForSide: (side: TeamSide, notes: { zone: string | null; fgInRange: boolean; defense: string | null }) => void;\r\n  }\r\n): { result: string; notes: string[] } {\r\n  const notes: string[] = [];\r\n  const homeAway = (side: 'player'|'ai') => (side === 'player' ? 'HOME' : 'AWAY');\r\n  const spotText = `${homeAway(pre.possession)} ball at the ${deps.formatTeamYardLine(pre.possession, pre.ballOn)} yard line.`;\r\n  const yardsToGoal = pre.possession === 'player' ? (100 - pre.ballOn) : pre.ballOn;\r\n  const abs = pre.ballOn;\r\n  const acrossMid = (pre.possession === 'player') ? abs >= 50 : abs <= 50;\r\n  const nearMid = abs >= 45 && abs <= 55;\r\n  const backedUp = (pre.possession === 'player') ? abs <= 10 : abs >= 90;\r\n  let zone: string | null = null;\r\n  if (yardsToGoal <= 10 && pre.down === 1 && pre.toGo >= yardsToGoal) zone = 'GoalToGo';\r\n  else if (yardsToGoal <= 20) zone = 'RedZone';\r\n  else if (nearMid) zone = 'NearMid';\r\n  else if (acrossMid) zone = 'AcrossMid';\r\n  else if (backedUp) zone = 'BackedUp';\r\n\r\n  const last = deps.getLastNotesForSide(pre.possession);\r\n  if (zone && zone !== last.zone) {\r\n    if (zone === 'GoalToGo') notes.push('Goal to go.');\r\n    else if (zone === 'RedZone') notes.push('Red zone opportunity.');\r\n    else if (zone === 'NearMid') notes.push('Near midfield.');\r\n    else if (zone === 'AcrossMid') notes.push('Across midfield.');\r\n    else if (zone === 'BackedUp') notes.push('Backed up near own goal line.');\r\n  }\r\n  const attemptYards = yardsToGoal + 17;\r\n  const inRange = attemptYards <= 45;\r\n  if (inRange && pre.down >= 3 && !last.fgInRange) notes.push('Within field goal range.');\r\n  notes.push(`${deps.formatOrdinal(pre.down)} & ${pre.toGo}, ${spotText}`);\r\n  const shortYardage = pre.toGo <= 1;\r\n  const isSneak = /sneak|qb keeper|keeper/i.test(currentPlayLabel);\r\n  const passHeavy = /play[- ]?action|long bomb|down & in|down & out|post|corner|seam|bomb/i.test(currentPlayLabel);\r\n  if (shortYardage || isSneak || passHeavy) {\r\n    const offFormation = /pass|hook|look in|sideline|flare|flair|pop|bomb|button|screen|down &/i.test(currentPlayLabel) ? 'lines up in the shotgun.' : 'lines up under center.';\r\n    notes.push(offFormation);\r\n  }\r\n  const playLabel = String(currentPlayLabel || '');\r\n  const defNote = (dl: string): string | null => {\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor((deps.rng?.() || Math.random()) * arr.length)]!;\r\n    if (/goal line/i.test(dl)) return pick(['Stacked front, safeties pinched.', 'Stacked box, gaps corked.']);\r\n    if (/short yardage/i.test(dl)) return pick(['Tight box, gaps packed.', 'Heavy front, gaps corked.']);\r\n    if (/passing/i.test(dl)) return pick(['Light box, two-high shell.', 'Nickel spacing, umbrella coverage.']);\r\n    if (/outside blitz/i.test(dl)) return pick(['Corner fire off the edge.', 'Nickel off the slot.', 'Safety blitz crashing down.']);\r\n    if (/inside blitz/i.test(dl)) return pick(['Mike shoots the A-gap.', 'Linebacker dog up the middle.']);\r\n    if (/prevent deep/i.test(dl)) return pick(['Umbrella shell, keep it in front.', 'Prevent deep — nothing behind.']);\r\n    if (/prevent/i.test(dl)) return 'Umbrella look, keep-it-in-front spacing.';\r\n    if (/run & pass|pass & run|running/i.test(dl)) return pick(['Balanced shell.', 'Soft quarters, balanced spacing.']);\r\n    return null;\r\n  };\r\n  const dnote = defNote(String(defenseLabel || ''));\r\n  const lastDef = last.defense || null;\r\n  const isBlitz = /blitz/i.test(defenseLabel || '');\r\n  if (dnote && (isBlitz || (defenseLabel || '') !== lastDef)) notes.push(dnote);\r\n\r\n  if (/punt/i.test(playLabel)) {\r\n    notes.push(`${homeAway(pre.possession)} lines up to punt from the ${pre.ballOn} yard line.`);\r\n  } else if (/pass|hook|look in|sideline|flare|flair|pop|bomb|button/i.test(playLabel)) {\r\n    if (/screen/i.test(playLabel)) notes.push('Quarterback sets up the screen.');\r\n    else if (/button hook/i.test(playLabel)) notes.push('Quick button hook route.');\r\n    else if (/look in/i.test(playLabel)) notes.push('Quick slant to the inside.');\r\n    else if (/sideline/i.test(playLabel)) notes.push('Throws to the sideline.');\r\n    else if (/down & in/i.test(playLabel)) notes.push('Throws down and in.');\r\n    else if (/down & out/i.test(playLabel)) notes.push('Throws down and out.');\r\n    else if (/pop pass/i.test(playLabel)) notes.push('Quick pop pass over the middle.');\r\n    else if (/flair|flare/i.test(playLabel)) notes.push('Flair pass to the back.');\r\n    else if (/stop & go/i.test(playLabel)) notes.push('Stop-and-go, going deep.');\r\n    else if (/bomb/i.test(playLabel)) notes.push('Going deep downfield.');\r\n    else notes.push('Quarterback drops back to pass.');\r\n  } else if (/keeper|draw|qb/i.test(playLabel)) {\r\n    notes.push('Quarterback keeps it himself and runs.');\r\n  } else {\r\n    if (/end run/i.test(playLabel)) notes.push('Quarterback hands off around the end.');\r\n    else if (/off tackle/i.test(playLabel)) notes.push('Quarterback hands off off tackle.');\r\n    else if (/slant run/i.test(playLabel)) notes.push('Quarterback hands off on an inside slant run.');\r\n    else if (/draw/i.test(playLabel)) notes.push('Quarterback delays and hands off on a draw play.');\r\n    else if (/trap/i.test(playLabel)) notes.push('Quarterback hands off on a trap play.');\r\n    else if (/run & pass option/i.test(playLabel)) notes.push('Quarterback reads the option look.');\r\n    else if (/razzle dazzle/i.test(playLabel)) notes.push('Trick play! Razzle dazzle in the backfield.');\r\n    else notes.push('Quarterback hands off to the running back.');\r\n  }\r\n  if (flags.td) {\r\n    return { result: 'Touchdown', notes: [...notes, 'Touchdown scored.'] };\r\n  }\r\n  if (flags.safety) {\r\n    return { result: 'Safety', notes: [...notes, 'Safety is awarded.'] };\r\n  }\r\n  if (!outcome) {\r\n    return { result: 'Play', notes };\r\n  }\r\n  if (outcome.category === 'incomplete') {\r\n    let inc = 'The pass falls incomplete.';\r\n    if (/blitz/i.test(defenseLabel)) inc = 'Pressure forces an incomplete pass.';\r\n    else if (/prevent deep/i.test(defenseLabel)) inc = 'Prevent deep coverage breaks up the deep shot.';\r\n    else if (/passing/i.test(defenseLabel)) inc = 'Tight coverage, pass falls incomplete.';\r\n    return { result: 'Incomplete', notes: [...notes, inc] };\r\n  }\r\n  if (outcome.category === 'gain' || outcome.category === 'loss') {\r\n    const y = outcome.yards || 0;\r\n    const kind = y >= 0 ? 'Gain' : 'Loss';\r\n    const isSack = Boolean((outcome.raw && /sack/i.test(outcome.raw)) || /sack/i.test(playLabel));\r\n    if (isSack) {\r\n      const blitzTag = /blitz/i.test(defenseLabel) ? ' Blitz gets home.' : '';\r\n      return { result: `Sack -${Math.abs(y)}`, notes: [...notes, `Edge wins inside spin; quarterback swallowed.${blitzTag}`, `Loss of ${Math.abs(y)} yards. Protection beaten.`, `Now ${deps.formatOrdinal(next.down)} & ${next.toGo}.`] };\r\n    }\r\n    const firstDownNow = (pre.possession === next.possession) && pre.down !== 1 && next.down === 1;\r\n    const verbsGain = ['slashes for', 'rumbles for', 'bursts for', 'powers for', 'cuts for'];\r\n    const verbsLoss = ['stacked for', 'dropped for', 'stuffed for', 'spilled for'];\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(((deps.rng?.() || Math.random())) * arr.length)]!;\r\n    const action = y >= 0 ? `${pick(verbsGain)} ${Math.abs(y)}.` : `${pick(verbsLoss)} ${Math.abs(y)}.`;\r\n    const path = Math.abs(y) >= 20 ? (() => {\r\n      const start = deps.formatTeamYardLine(pre.possession, pre.ballOn);\r\n      const mid = pre.possession === 'player' ? (pre.ballOn + Math.floor(Math.abs(y) / 2)) : (pre.ballOn - Math.floor(Math.abs(y) / 2));\r\n      const midText = deps.formatTeamYardLine(pre.possession, Math.max(0, Math.min(100, mid)));\r\n      const end = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n      return `From ${start}… to ${midText}… down at ${end}!`;\r\n    })() : '';\r\n    const conversion = firstDownNow ? ' First down!' : '';\r\n    return { result: `${kind} ${Math.abs(y)}`, notes: [...notes, `${action} ${path}`.trim(), `Now ${deps.formatOrdinal(next.down)} & ${next.toGo}.${conversion}`] };\r\n  }\r\n\r\n  deps.setLastNotesForSide(pre.possession, {\r\n    zone: zone || deps.getLastNotesForSide(pre.possession).zone,\r\n    fgInRange: inRange,\r\n    defense: defenseLabel || null,\r\n  });\r\n  if (outcome.category === 'interception') {\r\n    const ret = outcome.interceptReturn || 0;\r\n    const retText = ret ? ` Return of ${Math.abs(ret)} yards.` : '';\r\n    const endSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    return { result: 'Interception', notes: [...notes, `Ball is picked — tipped and taken.${retText}`, `${homeAway(next.possession)} takes over at the ${endSpot}.`] };\r\n  }\r\n  if (outcome.category === 'fumble') {\r\n    const endSpot = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    const looseAt = deps.formatTeamYardLine(pre.possession, pre.ballOn);\r\n    return { result: 'Fumble', notes: [...notes, `Ball's loose at ${looseAt} — scrum on the ground.`, `Recovered by ${homeAway(next.possession)} at ${endSpot}.`] };\r\n  }\r\n  if (outcome.category === 'penalty') {\r\n    const on = (outcome.penalty && outcome.penalty.on) || 'offense';\r\n    const yards = (outcome.penalty && outcome.penalty.yards) || 0;\r\n    return { result: `Penalty on ${on} (${yards})`, notes: [...notes, 'Penalty called.'] };\r\n  }\r\n  return { result: 'Play', notes };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport class DriveTracker {\r\n  private driveId = 1;\r\n  private playInDrive = 0;\r\n  private currentPossession: TeamSide | null = null;\r\n  private driveStartAbsBallOn: number | null = null;\r\n  private driveStartSide: TeamSide | null = null;\r\n  private driveStats: { runPlays: number; passPlays: number; totalYards: number; explosives: number; sacks: number } = { runPlays: 0, passPlays: 0, totalYards: 0, explosives: 0, sacks: 0 };\r\n  private quarterStats: { quarter: number; runs: number; passes: number; pointsHome: number; pointsAway: number; explosives: number; turnovers: number } = { quarter: 1, runs: 0, passes: 0, pointsHome: 0, pointsAway: 0, explosives: 0, turnovers: 0 };\r\n  private weather: { temp: string; wind: string; precip: string };\r\n  private lullThreeAndOutStreak = 0;\r\n  private lastNotesBySide: Record<TeamSide, { zone: string | null; fgInRange: boolean; defense: string | null }> = {\r\n    player: { zone: null, fgInRange: false, defense: null },\r\n    ai: { zone: null, fgInRange: false, defense: null },\r\n  };\r\n\r\n  constructor(private rng: RNG) {\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(((this.rng?.() || Math.random())) * arr.length)]!;\r\n    this.weather = {\r\n      temp: pick(['crisp','mild','warm','hot']),\r\n      wind: pick(['calm','light breeze','gusty','quartering wind']),\r\n      precip: pick(['clear','overcast','light rain','light snow']),\r\n    };\r\n  }\r\n\r\n  getPlayInDrive(): number { return this.playInDrive; }\r\n  getQuarterStatsRef() { return this.quarterStats; }\r\n  getLastNotesForSide(side: TeamSide) { return this.lastNotesBySide[side]; }\r\n  setLastNotesForSide(side: TeamSide, val: { zone: string | null; fgInRange: boolean; defense: string | null }) { this.lastNotesBySide[side] = val; }\r\n  incrementRunOrPassByLabel(playLabel: string): void {\r\n    try {\r\n      const label = String(playLabel || '').toLowerCase();\r\n      const isRun = /run|keeper|draw|trap|sneak|slant|off tackle|end run|razzle/.test(label) && !/pass/.test(label);\r\n      if (isRun) this.quarterStats.runs += 1; else this.quarterStats.passes += 1;\r\n    } catch {}\r\n  }\r\n  beginDriveIfNeeded(state: GameState, events: FlowEvent[], formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string): void {\r\n    if (this.currentPossession !== state.possession) {\r\n      if (this.playInDrive > 0) this.driveId += 1;\r\n      this.playInDrive = 0;\r\n      this.currentPossession = state.possession;\r\n      this.driveStartAbsBallOn = state.ballOn;\r\n      this.driveStartSide = state.possession;\r\n      this.driveStats = { runPlays: 0, passPlays: 0, totalYards: 0, explosives: 0, sacks: 0 };\r\n      const yard = formatTeamYardLine(state.possession, state.ballOn);\r\n      const offense = (state.possession === 'player') ? 'HOME' : 'AWAY';\r\n      const abs = state.ballOn;\r\n      const goodField = (state.possession === 'player') ? (abs >= 60) : (abs <= 40);\r\n      const backed = (state.possession === 'player') ? (abs <= 15) : (abs >= 85);\r\n      const rob = backed ? 'Backed up deep — protection and ball security matter here.'\r\n        : goodField ? 'Short field — everything in the playbook is available.'\r\n        : 'Solid field position to start the drive.';\r\n      events.push({ type: 'log', message: `Brad: ${offense} takes over at ${yard}.` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    }\r\n  }\r\n  incrementPlayInDrive(): void { this.playInDrive += 1; }\r\n\r\n  endDriveSummaryIfAny(state: GameState, events: FlowEvent[], reason: string): void {\r\n    if (this.driveStartAbsBallOn != null && this.driveStartSide != null) {\r\n      const plays = this.playInDrive;\r\n      const gained = this.driveStats.totalYards;\r\n      const theme = this.driveStats.runPlays > this.driveStats.passPlays ? 'ground-heavy' : (this.driveStats.passPlays > this.driveStats.runPlays ? 'air-heavy' : 'balanced');\r\n      const team = (this.driveStartSide === 'player') ? 'HOME' : 'AWAY';\r\n      const quickStrike = (plays <= 3 && gained >= 30) || this.driveStats.explosives >= 1;\r\n      const grinding = plays >= 8 && gained >= 30;\r\n      let brad = '';\r\n      if (reason === 'touchdown') {\r\n        brad = quickStrike\r\n          ? `Three plays, quick strike — all chunk yardage — and ${team} cashes in.`\r\n          : (grinding ? `Ten-play, grinding march — they owned the trenches — and ${team} finishes.` : `Drive wraps touchdown — ${plays} plays for ${Math.abs(gained)}.`);\r\n      } else if (reason === 'punt') {\r\n        brad = (plays <= 3) ? `${team} goes three-and-out — momentum drifting the other way.` : `Stalled after ${plays} plays — punt coming.`;\r\n      } else if (reason === 'downs') {\r\n        brad = `Stuffed on downs — ${team} turned away.`;\r\n      } else if (reason === 'safety') {\r\n        brad = `Safety ends it — costly series for ${team}.`;\r\n      } else {\r\n        brad = `Drive wraps ${reason} — ${plays} plays, ${Math.abs(gained)} yards ${gained >= 0 ? 'gained' : 'lost'}.`;\r\n      }\r\n      const rob = ((): string => {\r\n        if (reason === 'touchdown') return grinding ? 'They leaned on them — pure power football.' : (quickStrike ? 'Scheme beat leverage — that flipped the field.' : 'Execution at the key moments.');\r\n        if (reason === 'safety') return 'Protection broke down; all the juice flips sideline.';\r\n        if (reason === 'downs') return 'That front dominated gaps — nowhere to go.';\r\n        if (reason === 'punt') return `${theme} looks, but no finish.`;\r\n        return `${theme} sequence.`;\r\n      })();\r\n      events.push({ type: 'log', message: `Brad: ${brad}` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n\r\n      try {\r\n        const threeAndOut = reason === 'punt' && plays <= 3 && gained < 5;\r\n        if (threeAndOut) this.lullThreeAndOutStreak += 1; else this.lullThreeAndOutStreak = 0;\r\n        if (this.lullThreeAndOutStreak >= 2) {\r\n          const wx = this.weather;\r\n          const wxLine = (wx.precip !== 'clear')\r\n            ? `Weather note — ${wx.precip}, ${wx.wind}.`\r\n            : (wx.wind !== 'calm' ? `Wind note — ${wx.wind}, ball hanging a bit.` : `Crowd is restless; waiting for a spark.`);\r\n          const fatigue = (this.driveStats.runPlays + this.driveStats.passPlays) >= 8 ? 'Big bodies leaning — fatigue creeping in.' : 'Front sevens fresh, but they’re grinding.';\r\n          events.push({ type: 'log', message: `Brad: ${wxLine}` });\r\n          events.push({ type: 'log', message: `Rob: ${fatigue}` });\r\n          this.lullThreeAndOutStreak = 0;\r\n        }\r\n      } catch {}\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport { resolveKickoff } from '../../rules/special/Kickoff';\r\nimport { resolvePunt } from '../../rules/special/Punt';\r\nimport { resolveLongGain } from '../../rules/LongGain';\r\nimport { DEFAULT_TIME_KEEPING } from '../../rules/ResultParsing';\r\nimport type { TimeKeeping } from '../../data/schemas/Timekeeping';\r\nimport type { FlowEvent } from '../types';\r\nimport type { RNG } from '../../sim/RNG';\r\n\r\nexport function performKickoff(\r\n  state: GameState,\r\n  type: 'normal'|'onside',\r\n  kicking: TeamSide,\r\n  deps: {\r\n    rng: RNG;\r\n    timeKeeping: TimeKeeping;\r\n    isLeading: (side: TeamSide, score: GameState['score']) => boolean;\r\n    isTied: (score: GameState['score']) => boolean;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState;\r\n  const tk = deps.timeKeeping || DEFAULT_TIME_KEEPING;\r\n  let timeOff = tk.kickoff;\r\n  if ((next.quarter === 2 || next.quarter === 4) && next.clock > 120 && next.clock - timeOff < 120) {\r\n    timeOff = next.clock - 120;\r\n    events.push({ type: 'log', message: 'Two-minute warning.' });\r\n    events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n  }\r\n  next.clock = Math.max(0, next.clock - timeOff);\r\n\r\n  const onside = type === 'onside';\r\n  const kickerLeadingOrTied = deps.isLeading(kicking, next.score) || deps.isTied(next.score);\r\n  const ko = resolveKickoff(deps.rng, { onside, kickerLeadingOrTied });\r\n  const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n  const absYard = receiver === 'player' ? ko.yardLine : 100 - ko.yardLine;\r\n  next.possession = ko.turnover ? kicking : receiver;\r\n  next.ballOn = Math.max(0, Math.min(100, absYard));\r\n  const dd = { down: 1, toGo: 10 } as const;\r\n  next.down = dd.down; next.toGo = dd.toGo;\r\n  events.push({ type: 'kickoff', payload: { onside } });\r\n  try {\r\n    const receiverSide: TeamSide = next.possession;\r\n    const yardText = deps.formatTeamYardLine(receiverSide, next.ballOn);\r\n    const pick = <T>(arr: T[]): T => arr[Math.floor(((deps.rng?.() || Math.random())) * arr.length)]!;\r\n    const traj = pick(['a high hanger','a booming end-over-end','a wobbly spiral','a knuckleball','a low liner']);\r\n    const angle = pick(['toward the near numbers','to the far sideline','between the hashes','to the right numbers','to the left numbers']);\r\n    const caughtAt = pick(['the goal line','the five','the three']);\r\n    const advancement = receiverSide === 'player' ? next.ballOn : (100 - next.ballOn);\r\n    const bigReturn = advancement >= 55;\r\n    const hugeReturn = advancement >= 70;\r\n    const normalPaths = ['angles left, then up the seam','up the middle, bounces outside','zigs past the first wave, then squared up'];\r\n    const stuffedPaths = ['straight ahead, no crease','met by the first wave, stacked'];\r\n    const explosivePaths = ['hits the crease and bursts free','finds daylight down the sideline','cuts back and turns on the jets'];\r\n    const path = hugeReturn ? pick(explosivePaths) : (bigReturn ? pick(normalPaths) : pick([...normalPaths, ...stuffedPaths]));\r\n    const brad = hugeReturn\r\n      ? `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — all the way to ${yardText}!`\r\n      : (bigReturn\r\n        ? `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — big return to ${yardText}.`\r\n        : `And away we go — ${traj} ${angle}. Caught at ${caughtAt}, ${path} — brought to ${yardText}.`);\r\n    const rob = hugeReturn\r\n      ? pick(['Coverage bust — contain lost leverage and the lane opened wide.','Out-kicked the coverage — return team found a runway.', 'Missed fits across the board — explosive return.'])\r\n      : (bigReturn\r\n        ? pick(['Out-kicked the coverage — return team found daylight.','Gunners got washed — edge was there.'])\r\n        : pick(['Coverage lanes stayed disciplined — no big gap to hit.','Good hang gave the gunners time — textbook coverage.','Return set it up, but contain held firm.']));\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  } catch {}\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\nexport function handleFourthDownPunt(\r\n  pre: GameState,\r\n  next: GameState,\r\n  deps: {\r\n    rng: RNG;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    endDriveSummaryIfAny: (state: GameState, events: FlowEvent[], reason: string) => void;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  const puntingTeam: TeamSide = pre.possession;\r\n  const punt = resolvePunt({ ballOn: pre.ballOn, puntingTeam }, deps.rng, resolveLongGain);\r\n  const fromYL = deps.formatTeamYardLine(puntingTeam, pre.ballOn);\r\n  const receiving: TeamSide = puntingTeam === 'player' ? 'ai' : 'player';\r\n  const toYL = deps.formatTeamYardLine(punt.possessionFlips ? receiving : puntingTeam, punt.ballOn);\r\n  const dist = typeof punt.distance === 'number' ? punt.distance : undefined;\r\n  const ret = punt.returnYards || 0;\r\n  const pick = <T>(arr: T[]): T => arr[Math.floor(((deps.rng?.() || Math.random())) * arr.length)]!;\r\n  const traj = pick(['booming end-over-end','tight spiral','wobbly spiral','low driving kick','high hanging punt']);\r\n  const angle = pick(['toward the boundary','angling to the near hash','to the far numbers','middle of the field']);\r\n  const retPath = ret >= 15 ? pick(['up the seam','bounces outside','cuts back against pursuit']) : pick(['met square by the first wave','slips one, then wrapped','no room, stacked early']);\r\n  const brad = `${traj} from ${fromYL}, ${angle}. Return ${retPath} for ${ret}, down at ${toYL}.`;\r\n  const rob = ret >= 15 ? 'Out-kicked the coverage — return team found daylight.' : 'Hang time and lanes — coverage wins that down.';\r\n  events.push({ type: 'log', message: `Brad: ${brad}` });\r\n  events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  next.possession = punt.possessionFlips ? (puntingTeam === 'player' ? 'ai' : 'player') : puntingTeam;\r\n  next.ballOn = punt.ballOn;\r\n  const dd = { down: 1, toGo: 10 } as const;\r\n  next.down = dd.down; next.toGo = dd.toGo;\r\n  deps.endDriveSummaryIfAny(next, events, 'punt');\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function resolvePATAndRestart(\r\n  state: GameState,\r\n  side: TeamSide,\r\n  deps: {\r\n    rng: () => number;\r\n    choosePAT?: (ctx: { diff: number; quarter: number; clock: number; side: 'player'|'ai' }) => 'kick'|'two';\r\n    chooseKickoffType?: (ctx: { trailing: boolean; quarter: number; clock: number }) => 'normal'|'onside';\r\n    attemptPatInternal: (rng: () => number) => boolean;\r\n    scoringSideToDelta: (side: TeamSide, points: number) => { playerDelta: number; aiDelta: number };\r\n    isTrailing: (side: TeamSide, score: GameState['score']) => boolean;\r\n    performKickoff: (state: GameState, type: 'normal'|'onside', kicking: TeamSide) => { state: GameState; events: FlowEvent[] };\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState & { openingKickTo?: TeamSide };\r\n  const diff = next.score.player - next.score.ai;\r\n  const decision = deps.choosePAT?.({ diff, quarter: next.quarter, clock: next.clock, side })\r\n    ?? (side === 'ai' ? (((): 'kick'|'two' => { const late = next.quarter === 4 && next.clock <= 5 * 60; if (diff < 0 && -diff <= 2 && late) return 'two'; return 'kick'; })()) : 'kick');\r\n  if (decision === 'two') {\r\n    const success = deps.rng() < 0.5;\r\n    if (success) {\r\n      if (side === 'player') next.score.player += 2; else next.score.ai += 2;\r\n      events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 2), kind: 'TwoPoint' } });\r\n    }\r\n  } else {\r\n    const good = deps.attemptPatInternal(deps.rng);\r\n    if (good) {\r\n      if (side === 'player') next.score.player += 1; else next.score.ai += 1;\r\n      events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 1), kind: 'XP' } });\r\n    }\r\n  }\r\n  next.awaitingPAT = false;\r\n  const koType = deps.chooseKickoffType?.({ trailing: deps.isTrailing(side, next.score), quarter: next.quarter, clock: next.clock }) ?? 'normal';\r\n  const ko = deps.performKickoff(next, koType, side);\r\n  return { state: ko.state, events: [...events, ...ko.events] };\r\n}\r\n\r\nexport function attemptFieldGoal(\r\n  state: GameState,\r\n  attemptYards: number,\r\n  side: TeamSide,\r\n  deps: {\r\n    rng: () => number;\r\n    attemptFieldGoalKick: (rng: () => number, attemptYards: number) => boolean;\r\n    scoringSideToDelta: (side: TeamSide, points: number) => { playerDelta: number; aiDelta: number };\r\n    randomHash: () => 'left hash'|'right hash'|'middle';\r\n    formatClock: (n: number) => string;\r\n    formatTeamYardLine: (possessing: TeamSide, ballOn: number) => string;\r\n    performKickoff: (state: GameState, type: 'normal'|'onside', kicking: TeamSide) => { state: GameState; events: FlowEvent[] };\r\n    hudPayload: (s: GameState) => any;\r\n    timeKeepingFieldGoalSeconds: number;\r\n    missedFieldGoalSpot: (args: { ballOn: number; possessing: TeamSide }, attemptYards: number) => { possession: TeamSide; ballOn: number };\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState & { openingKickTo?: TeamSide };\r\n  const pre = { ...next };\r\n  let timeOff = deps.timeKeepingFieldGoalSeconds;\r\n  let crossedTwoMinute = false;\r\n  if ((pre.quarter === 2 || pre.quarter === 4) && pre.clock > 120 && pre.clock - timeOff < 120) {\r\n    timeOff = pre.clock - 120;\r\n    crossedTwoMinute = true;\r\n  }\r\n  next.clock = Math.max(0, pre.clock - timeOff);\r\n  if (crossedTwoMinute) {\r\n    events.push({ type: 'log', message: 'Brad: Two-minute warning.' });\r\n    events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n  }\r\n  const good = deps.attemptFieldGoalKick(deps.rng, attemptYards);\r\n  if (good) {\r\n    if (side === 'player') next.score.player += 3; else next.score.ai += 3;\r\n    events.push({ type: 'score', payload: { ...deps.scoringSideToDelta(side, 3), kind: 'FG' } });\r\n    const hash = deps.randomHash();\r\n    const brad = `Field goal from ${attemptYards}, ${hash} — it is good. HOME ${next.score.player} — AWAY ${next.score.ai}, Q${next.quarter} ${deps.formatClock(next.clock)}`;\r\n    const rob = 'Clean snap, clean hold; good rotation on the ball.';\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    const ko = deps.performKickoff(next, 'normal', side);\r\n    next = ko.state as any;\r\n    events.push(...ko.events);\r\n  } else {\r\n    const miss = deps.missedFieldGoalSpot({ ballOn: next.ballOn, possessing: side }, attemptYards);\r\n    next.possession = miss.possession as TeamSide;\r\n    next.ballOn = miss.ballOn;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    const spotEnd = deps.formatTeamYardLine(next.possession, next.ballOn);\r\n    const hash = deps.randomHash();\r\n    const brad = `Field goal from ${attemptYards}, ${hash} — no good. ${next.possession === 'player' ? 'HOME' : 'AWAY'} ball at ${spotEnd}.`;\r\n    const rob = 'Snap and hold were fine — just yanked it.';\r\n    events.push({ type: 'log', message: `Brad: ${brad}` });\r\n    events.push({ type: 'log', message: `Rob: ${rob}` });\r\n  }\r\n  events.push({ type: 'hud', payload: deps.hudPayload(next) });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState } from '../../domain/GameState';\r\nimport type { AdminResult } from '../../rules/PenaltyAdmin';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function finalizePenaltyDecision(\r\n  chosen: GameState,\r\n  decision: 'accept'|'decline',\r\n  meta: AdminResult['adminMeta'],\r\n  deps: {\r\n    formatOrdinal: (n: number) => string;\r\n    hudPayload: (s: GameState) => any;\r\n  },\r\n  info?: { on: 'offense'|'defense'; yards: number }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...chosen } as GameState & { untimedDownScheduled?: boolean };\r\n  try {\r\n    const on = info?.on || 'defense';\r\n    const yards = info?.yards || 0;\r\n    const downText = `${deps.formatOrdinal(next.down)} & ${next.toGo}`;\r\n    const msg = decision === 'accept'\r\n      ? `Penalty on ${on}, ${yards} yards — accepted; now ${downText}`\r\n      : `Penalty on ${on}, ${yards} yards — declined; play stands; now ${downText}`;\r\n    events.push({ type: 'log', message: msg });\r\n  } catch {}\r\n  if (meta.untimedDownScheduled) {\r\n    (next as any).untimedDownScheduled = true;\r\n    events.push({ type: 'log', message: 'Untimed down will be played due to defensive penalty.' });\r\n  }\r\n  if (!next.gameOver && !next.awaitingPAT) {\r\n    const untimedNow = Boolean((next as any).untimedDownScheduled);\r\n    if (next.clock === 0 && !untimedNow) {\r\n      const endedQuarter = next.quarter;\r\n      events.push({ type: 'endOfQuarter', payload: { quarter: endedQuarter } });\r\n      events.push({ type: 'log', message: `End of Q${endedQuarter} — HOME ${next.score.player} — AWAY ${next.score.ai}` });\r\n      if (endedQuarter === 2) {\r\n        events.push({ type: 'halftime' });\r\n        next.quarter = 3;\r\n        next.clock = 15 * 60;\r\n      } else if (endedQuarter === 4) {\r\n        next.gameOver = true;\r\n        events.push({ type: 'final', payload: { score: next.score } });\r\n      } else {\r\n        next.quarter = endedQuarter + 1;\r\n        next.clock = 15 * 60;\r\n      }\r\n    }\r\n  }\r\n  events.push({ type: 'hud', payload: deps.hudPayload(next) });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { FlowEvent } from '../types';\r\n\r\nexport function resolveSafetyRestart(\r\n  state: GameState,\r\n  conceding: TeamSide,\r\n  deps: {\r\n    chooseSafetyFreeKick?: (ctx: { leading: boolean }) => 'kickoff+25'|'puntFrom20';\r\n    isLeading: (side: TeamSide, score: GameState['score']) => boolean;\r\n  }\r\n): { state: GameState; events: FlowEvent[] } {\r\n  const events: FlowEvent[] = [];\r\n  let next = { ...state } as GameState;\r\n  const leading = deps.isLeading(conceding === 'player' ? 'ai' : 'player', next.score);\r\n  const choice = deps.chooseSafetyFreeKick?.({ leading }) ?? 'kickoff+25';\r\n  const kicking: TeamSide = conceding;\r\n  if (choice === 'kickoff+25') {\r\n    const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n    const abs = receiver === 'player' ? 25 : 75;\r\n    next.possession = receiver;\r\n    next.ballOn = abs;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    events.push({ type: 'kickoff', payload: { onside: false } });\r\n  } else {\r\n    const receiver: TeamSide = kicking === 'player' ? 'ai' : 'player';\r\n    const abs = receiver === 'player' ? 35 : 65;\r\n    next.possession = receiver;\r\n    next.ballOn = abs;\r\n    const dd = { down: 1, toGo: 10 } as const;\r\n    next.down = dd.down; next.toGo = dd.toGo;\r\n    events.push({ type: 'kickoff', payload: { onside: false } });\r\n  }\r\n  events.push({ type: 'hud', payload: {\r\n    quarter: next.quarter, clock: next.clock, down: next.down, toGo: next.toGo, ballOn: next.ballOn, possession: next.possession, score: { player: next.score.player, ai: next.score.ai }\r\n  } });\r\n  return { state: next, events };\r\n}\r\n\r\n\r\n","import type { GameState } from '../domain/GameState';\r\n\r\nexport function hudPayload(s: GameState) {\r\n  return {\r\n    quarter: s.quarter,\r\n    clock: s.clock,\r\n    down: s.down,\r\n    toGo: s.toGo,\r\n    ballOn: s.ballOn,\r\n    possession: s.possession,\r\n    score: { player: s.score.player, ai: s.score.ai },\r\n  };\r\n}\r\n\r\n\r\n","import type { TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport { rollD6 as rollD6PK, PLACE_KICK_TABLE } from '../../rules/special/PlaceKicking';\r\n\r\n/**\r\n * Utility functions for game flow operations\r\n * Contains helper functions for game state calculations, formatting, and game logic\r\n */\r\n\r\n/**\r\n * Determines if the game is in two-minute warning territory\r\n * @param quarter - Current quarter (1-4)\r\n * @param clock - Current clock time in seconds\r\n * @returns True if in two-minute warning period\r\n */\r\nexport function isTwoMinute(quarter: number, clock: number): boolean {\r\n  return (quarter === 2 || quarter === 4) && clock <= 120;\r\n}\r\n\r\n/**\r\n * Clamps a yard line position to valid field range (0-100)\r\n * @param abs - Absolute yard position\r\n * @returns Clamped yard position\r\n */\r\nexport function clampYard(abs: number): number {\r\n  return Math.max(0, Math.min(100, abs));\r\n}\r\n\r\n/**\r\n * Returns the standard down and distance after a kickoff\r\n * @returns Down and distance object\r\n */\r\nexport function nextDownDistanceAfterKickoff(): Pick<import('../../domain/GameState').GameState, 'down'|'toGo'> {\r\n  return { down: 1, toGo: 10 } as const;\r\n}\r\n\r\n/**\r\n * Converts a scoring side and points to score deltas for both teams\r\n * @param side - Team that scored\r\n * @param points - Points scored\r\n * @returns Score deltas for both teams\r\n */\r\nexport function scoringSideToDelta(side: TeamSide, points: number): { playerDelta: number; aiDelta: number } {\r\n  return side === 'player' ? { playerDelta: points, aiDelta: 0 } : { playerDelta: 0, aiDelta: points };\r\n}\r\n\r\n/**\r\n * Attempts a PAT (Point After Touchdown) using place kicking rules\r\n * @param rng - Random number generator\r\n * @returns True if PAT is successful\r\n */\r\nexport function attemptPatInternal(rng: RNG): boolean {\r\n  // 2D6 using place kicking table's PAT column\r\n  const roll = rollD6PK(rng) + rollD6PK(rng);\r\n  const row = PLACE_KICK_TABLE[roll] || {} as any;\r\n  return row.PAT === 'G';\r\n}\r\n\r\n/**\r\n * Generates a random hash mark position for kickoffs or field goals\r\n * @param rng - Random number generator (optional, uses Math.random if not provided)\r\n * @returns Hash mark position string\r\n */\r\nexport function randomHash(rng?: RNG): 'left hash'|'right hash'|'middle' {\r\n  const r = rng?.() || Math.random();\r\n  if (r < 0.45) return 'left hash';\r\n  if (r < 0.9) return 'right hash';\r\n  return 'middle';\r\n}\r\n\r\n/**\r\n * Determines if a team is leading based on current score\r\n * @param side - Team side to check\r\n * @param score - Current game score\r\n * @returns True if the specified team is leading\r\n */\r\nexport function isLeading(side: TeamSide, score: { player: number; ai: number }): boolean {\r\n  const diff = score.player - score.ai;\r\n  return (side === 'player' ? diff : -diff) > 0;\r\n}\r\n\r\n/**\r\n * Determines if a team is trailing based on current score\r\n * @param side - Team side to check\r\n * @param score - Current game score\r\n * @returns True if the specified team is trailing\r\n */\r\nexport function isTrailing(side: TeamSide, score: { player: number; ai: number }): boolean {\r\n  const diff = score.player - score.ai;\r\n  return (side === 'player' ? diff : -diff) < 0;\r\n}\r\n\r\n/**\r\n * Determines if the game is tied\r\n * @param score - Current game score\r\n * @returns True if teams are tied\r\n */\r\nexport function isTied(score: { player: number; ai: number }): boolean {\r\n  return score.player === score.ai;\r\n}\r\n\r\n/**\r\n * Default AI logic for determining if team should go for two-point conversion\r\n * @param ctx - Game context including score differential, quarter, and clock\r\n * @returns True if AI should attempt two-point conversion\r\n */\r\nexport function defaultAIShouldGoForTwo(ctx: { diff: number; quarter: number; clock: number }): boolean {\r\n  const late = ctx.quarter === 4 && ctx.clock <= 5 * 60;\r\n  // Trailing by 1 or 2 late\r\n  if (ctx.diff < 0 && -ctx.diff <= 2 && late) return true;\r\n  return false;\r\n}\r\n","import type { TeamSide } from '../../domain/GameState';\r\n\r\n/**\r\n * Formatting utilities for game flow operations\r\n * Contains functions for formatting game state information for display\r\n */\r\n\r\n/**\r\n * Formats a down number as an ordinal string\r\n * @param n - Down number (1-4, or higher for overtime)\r\n * @returns Formatted ordinal string (e.g., \"1st\", \"2nd\", \"3rd\", \"4th\")\r\n */\r\nexport function formatOrdinal(n: number): string {\r\n  if (n === 1) return '1st';\r\n  if (n === 2) return '2nd';\r\n  if (n === 3) return '3rd';\r\n  return `${Math.max(1, Math.min(4, n))}th`;\r\n}\r\n\r\n/**\r\n * Formats clock time in seconds to MM:SS format\r\n * @param totalSeconds - Time in seconds\r\n * @returns Formatted time string (e.g., \"15:00\", \"3:45\")\r\n */\r\nexport function formatClock(totalSeconds: number): string {\r\n  const m = Math.floor(Math.max(0, totalSeconds) / 60);\r\n  const s = Math.floor(Math.max(0, totalSeconds) % 60);\r\n  const ss = s < 10 ? `0${s}` : String(s);\r\n  return `${m}:${ss}`;\r\n}\r\n\r\n/**\r\n * Formats a score and anchor line for broadcast commentary\r\n * @param s - Current game state\r\n * @returns Formatted anchor line string\r\n */\r\nexport function scoreAnchorLine(s: { score: { player: number; ai: number }; quarter: number; clock: number }): string {\r\n  return `Anchor — HOME ${s.score.player} — AWAY ${s.score.ai} — Q${s.quarter} ${formatClock(s.clock)}`;\r\n}\r\n\r\n/**\r\n * Formats possession spot for broadcast commentary\r\n * @param possessing - Team with possession\r\n * @param ballOn - Ball position (0-100)\r\n * @returns Formatted possession spot string\r\n */\r\nexport function formatPossessionSpotForBroadcast(possessing: TeamSide, ballOn: number): string {\r\n  const own = (possessing === 'player') ? (ballOn <= 50) : (ballOn >= 50);\r\n  const yards = (possessing === 'player') ? (ballOn <= 50 ? Math.max(1, ballOn) : Math.max(1, 100 - ballOn)) : (ballOn >= 50 ? Math.max(1, 100 - ballOn) : Math.max(1, ballOn));\r\n  return own ? `their own ${yards}` : `the ${yards}`;\r\n}\r\n\r\n/**\r\n * Formats team and yard line for display\r\n * @param possessing - Team with possession\r\n * @param ballOn - Ball position (0-100)\r\n * @returns Formatted yard line string (e.g., \"HOME 25\", \"AWAY 35\")\r\n */\r\nexport function formatTeamYardLine(possessing: TeamSide, ballOn: number): string {\r\n  const clamp = (n: number) => Math.max(1, Math.min(50, n));\r\n  if (possessing === 'player') {\r\n    if (ballOn <= 50) return `HOME ${clamp(ballOn)}`;\r\n    return `AWAY ${clamp(100 - ballOn)}`;\r\n  } else {\r\n    if (ballOn >= 50) return `AWAY ${clamp(100 - ballOn)}`;\r\n    return `HOME ${clamp(ballOn)}`;\r\n  }\r\n}\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { TimeKeeping } from '../../data/schemas/Timekeeping';\r\nimport { timeOffWithTwoMinute } from '../../rules/Timekeeping';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport { DEFAULT_TIME_KEEPING } from '../../rules/ResultParsing';\r\nimport { isTwoMinute } from '../utils/GameFlowUtils';\r\n\r\n/**\r\n * Time management utilities for game flow operations\r\n * Handles clock management, tempo decisions, and time-related game logic\r\n */\r\n\r\n/**\r\n * Context for tempo decision making\r\n */\r\nexport interface TempoContext {\r\n  quarter: number;\r\n  clock: number;\r\n  diff: number; // Score differential (positive if player is leading)\r\n  side: TeamSide;\r\n}\r\n\r\n/**\r\n * Available tempo strategies\r\n */\r\nexport type TempoStrategy = 'normal' | 'hurry_up' | 'burn_clock' | 'no_huddle';\r\n\r\n/**\r\n * Time management result containing time adjustments and flags\r\n */\r\nexport interface TimeManagementResult {\r\n  timeOff: number;\r\n  crossedTwoMinute: boolean;\r\n}\r\n\r\n/**\r\n * Calculates time to be taken off the clock for a play\r\n * Handles two-minute warning, tempo adjustments, and special cases\r\n * @param pre - Game state before the play\r\n * @param outcome - Play outcome\r\n * @param timeKeeping - Time keeping configuration\r\n * @param tempo - Tempo strategy to apply\r\n * @param hadUntimed - Whether this was an untimed down\r\n * @returns Time management result\r\n */\r\nexport function calculateTimeOff(\r\n  pre: GameState,\r\n  outcome: Outcome | undefined,\r\n  timeKeeping: TimeKeeping | undefined,\r\n  tempo: TempoStrategy,\r\n  hadUntimed: boolean = false,\r\n  possessionChanged?: boolean\r\n): TimeManagementResult {\r\n  if (hadUntimed) {\r\n    return { timeOff: 0, crossedTwoMinute: false };\r\n  }\r\n\r\n  const inTwoBefore = isTwoMinute(pre.quarter, pre.clock);\r\n  let timeOff = 0;\r\n  let crossedTwoMinute = false;\r\n\r\n  // Calculate base time off\r\n  if (outcome) {\r\n    const wasFirstDown = !possessionChanged &&\r\n      outcome.category === 'gain' &&\r\n      (outcome.yards || 0) > 0 &&\r\n      (outcome.yards || 0) >= pre.toGo;\r\n\r\n    const tk = timeKeeping || DEFAULT_TIME_KEEPING;\r\n    timeOff = timeOffWithTwoMinute(outcome, inTwoBefore, wasFirstDown, tk);\r\n  }\r\n\r\n  // Apply tempo adjustments\r\n  if (tempo === 'hurry_up' || tempo === 'no_huddle') {\r\n    timeOff = Math.max(5, Math.floor(timeOff * 0.7));\r\n  } else if (tempo === 'burn_clock') {\r\n    if (outcome && (outcome.category === 'gain' || outcome.category === 'loss')) {\r\n      timeOff = Math.max(timeOff, 35);\r\n      timeOff = Math.min(timeOff, 40);\r\n    }\r\n  }\r\n\r\n  // Handle two-minute warning\r\n  if ((pre.quarter === 2 || pre.quarter === 4) && pre.clock > 120 && pre.clock - timeOff < 120) {\r\n    timeOff = pre.clock - 120;\r\n    crossedTwoMinute = true;\r\n  }\r\n\r\n  return { timeOff, crossedTwoMinute };\r\n}\r\n\r\n/**\r\n * Applies time management result to game state\r\n * @param state - Current game state\r\n * @param timeResult - Time management result\r\n * @returns Updated game state with new clock time\r\n */\r\nexport function applyTimeOff(state: GameState, timeResult: TimeManagementResult): GameState {\r\n  const next = { ...state };\r\n  next.clock = Math.max(0, state.clock - timeResult.timeOff);\r\n  return next;\r\n}\r\n\r\n/**\r\n * Determines tempo strategy based on game situation and policy\r\n * @param ctx - Game context\r\n * @param policy - Optional tempo policy function\r\n * @returns Recommended tempo strategy\r\n */\r\nexport function determineTempo(\r\n  ctx: TempoContext,\r\n  policy?: (ctx: TempoContext) => TempoStrategy\r\n): TempoStrategy {\r\n  if (policy) {\r\n    return policy(ctx);\r\n  }\r\n\r\n  // Default tempo logic\r\n  const lateGame = ctx.quarter >= 3;\r\n  const trailing = ctx.diff < 0;\r\n  const leading = ctx.diff > 0;\r\n\r\n  // Late game situations\r\n  if (lateGame && ctx.clock <= 300) { // Last 5 minutes\r\n    if (trailing && Math.abs(ctx.diff) <= 8) {\r\n      return 'hurry_up'; // Trailing team hurries up\r\n    } else if (leading && Math.abs(ctx.diff) <= 14) {\r\n      return 'burn_clock'; // Leading team burns clock\r\n    }\r\n  }\r\n\r\n  // Two-minute drill\r\n  if (isTwoMinute(ctx.quarter, ctx.clock)) {\r\n    if (trailing) return 'hurry_up';\r\n    if (leading) return 'burn_clock';\r\n  }\r\n\r\n  return 'normal';\r\n}\r\n","import type { GameState, TeamSide } from '../../domain/GameState';\r\nimport type { RNG } from '../../sim/RNG';\r\nimport type { OffenseCharts } from '../../data/schemas/OffenseCharts';\r\nimport { resolvePlayCore } from '../../rules/ResolvePlayCore';\r\nimport { administerPenalty, type AdminResult } from '../../rules/PenaltyAdmin';\r\nimport type { Outcome } from '../../rules/ResultParsing';\r\nimport { DEFAULT_TIME_KEEPING as DEFAULT_TIME_KEEPING_CONST } from '../../rules/ResultParsing';\r\nimport type { TimeKeeping } from '../../data/schemas/Timekeeping';\r\nimport { buildBroadcastCall as buildBroadcastCallExt, chooseCommentaryLines as chooseCommentaryLinesExt } from '../narration/Broadcast';\r\nimport { buildResultSummary as buildResultSummaryExt } from '../narration/Summary';\r\nimport { DriveTracker } from '../drive/DriveTracker';\r\nimport { performKickoff as performKickoffExt, handleFourthDownPunt } from '../special/SpecialTeamsFlow';\r\nimport { resolvePATAndRestart as resolvePATAndRestartExt, attemptFieldGoal as attemptFieldGoalFlow } from '../scoring/Scoring';\r\nimport { finalizePenaltyDecision as finalizePenaltyDecisionExt } from '../penalties/PenaltyFlow';\r\nimport { resolveSafetyRestart as resolveSafetyRestartExt } from '../special/Safety';\r\nimport { hudPayload as hudPayloadExt } from '../HudPayload';\r\nimport type { FlowEvent, PlayInput, FlowContext } from '../types';\r\nimport {\r\n  isTwoMinute,\r\n  clampYard,\r\n  nextDownDistanceAfterKickoff,\r\n  scoringSideToDelta,\r\n  attemptPatInternal,\r\n  randomHash,\r\n  isLeading,\r\n  isTrailing,\r\n  isTied,\r\n  defaultAIShouldGoForTwo\r\n} from '../utils/GameFlowUtils';\r\nimport {\r\n  formatOrdinal,\r\n  formatClock,\r\n  formatPossessionSpotForBroadcast,\r\n  formatTeamYardLine,\r\n  scoreAnchorLine\r\n} from '../formatting/GameFlowFormatting';\r\nimport {\r\n  calculateTimeOff,\r\n  applyTimeOff,\r\n  determineTempo,\r\n  type TempoContext,\r\n  type TempoStrategy\r\n} from '../time/TimeManagement';\r\n\r\n/**\r\n * Core game flow orchestration logic\r\n * Main class that coordinates all aspects of game flow including plays, scoring, penalties, and time management\r\n */\r\nexport class GameFlowCore {\r\n  constructor(private ctx: FlowContext) {\r\n    this.tracker = new DriveTracker(this.ctx.rng);\r\n  }\r\n\r\n  // Drive/quarter/narration memory encapsulated in tracker\r\n  private tracker: DriveTracker;\r\n\r\n  /**\r\n   * Resolves a snap (play) and returns the resulting game state and events\r\n   * This is the main orchestration method that handles play resolution, penalties, scoring, and time management\r\n   * @param state - Current game state\r\n   * @param input - Play input containing deck, play label, and defense\r\n   * @returns Updated game state and generated events\r\n   */\r\n  resolveSnap(state: GameState, input: PlayInput): { state: GameState; events: FlowEvent[] } {\r\n    const events: FlowEvent[] = [];\r\n\r\n    // Respect untimed down scheduling: if present, do not advance time this snap\r\n    const hadUntimed = Boolean((state as any).untimedDownScheduled);\r\n\r\n    const pre = { ...state };\r\n    const isPuntCard = /punt/i.test(String(input.playLabel));\r\n    const res = resolvePlayCore({ state: pre, charts: this.ctx.charts, deckName: input.deckName, playLabel: input.playLabel, defenseLabel: input.defenseLabel, rng: this.ctx.rng });\r\n    const possessionChanged = (res as any).possessionChanged;\r\n\r\n    // Start new drive capsule if possession changed from last snap\r\n    this.beginDriveIfNeeded(pre, events);\r\n\r\n    // Penalty handling: branch to accept/decline flow\r\n    if ((res as any).outcome && (res as any).outcome.category === 'penalty' && (res as any).outcome.penalty) {\r\n      return this.handlePenalty(pre, res as any, events);\r\n    }\r\n\r\n    let next = { ...res.state } as GameState & { openingKickTo?: TeamSide; untimedDownScheduled?: boolean };\r\n\r\n    // Compute time management\r\n    const tempo = this.determineTempoForPlay(pre);\r\n    const timeResult = calculateTimeOff(pre, res.outcome as Outcome, this.ctx.timeKeeping, tempo, hadUntimed, possessionChanged);\r\n    next = applyTimeOff(next, timeResult);\r\n\r\n    // Handle two-minute warning\r\n    if (timeResult.crossedTwoMinute) {\r\n      events.push({ type: 'log', message: `Two-minute warning.` });\r\n      events.push({ type: 'vfx', payload: { kind: 'twoMinute' } });\r\n    }\r\n\r\n    // Narrate play result BEFORE handling follow-up sequences (PAT, kickoff) to keep chronological order\r\n    this.narratePlayResult(pre, next, input, res as any, events, isPuntCard);\r\n\r\n    // Update last-note memory for deduplication (zone, FG range, defense) based on pre-snap state\r\n    this.updateLastNotes(pre, input);\r\n\r\n    // Handle punts explicitly for narration and field position if punt card was chosen\r\n    if (!next.gameOver && !res.touchdown && !res.safety && isPuntCard && pre.down === 4) {\r\n      const handled = handleFourthDownPunt(pre, next, {\r\n        rng: this.ctx.rng,\r\n        formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n        endDriveSummaryIfAny: (s, ev, reason) => this.endDriveSummaryIfAny(s, ev, reason),\r\n      });\r\n      return { state: handled.state, events: [...events, ...handled.events] };\r\n    }\r\n\r\n    // Handle scoring sequences\r\n    if (res.touchdown) {\r\n      return this.handleTouchdown(pre, next, events);\r\n    } else if (res.safety) {\r\n      return this.handleSafety(pre, next, events);\r\n    }\r\n\r\n    // Turnover on downs: if it was 4th down and offense did not achieve a first down\r\n    if (!next.gameOver && !res.touchdown && !res.safety && !possessionChanged) {\r\n      if (this.isTurnoverOnDowns(pre, res.outcome as Outcome)) {\r\n        return this.handleTurnoverOnDowns(pre, next, events);\r\n      }\r\n    }\r\n\r\n    // Period transitions if not just kicked off due to scoring (kickoff logic will set down/toGo and time separately)\r\n    if (!next.gameOver && !next.awaitingPAT) {\r\n      if (next.clock === 0 && !Boolean(next.untimedDownScheduled)) {\r\n        return this.handleQuarterTransition(next, events);\r\n      }\r\n    }\r\n\r\n    events.push({ type: 'hud', payload: this.hudPayload(next) });\r\n    return { state: next, events };\r\n  }\r\n\r\n  /**\r\n   * Finalizes a penalty decision and returns the resulting state and events\r\n   * @param chosen - The chosen game state (accepted or declined penalty)\r\n   * @param decision - Whether penalty was accepted or declined\r\n   * @param meta - Penalty administration metadata\r\n   * @param info - Optional penalty information\r\n   * @returns Updated game state and events\r\n   */\r\n  finalizePenaltyDecision(chosen: GameState, decision: 'accept'|'decline', meta: AdminResult['adminMeta'], info?: { on: 'offense'|'defense'; yards: number }): { state: GameState; events: FlowEvent[] } {\r\n    return finalizePenaltyDecisionExt(chosen, decision, meta, {\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      hudPayload: (s) => this.hudPayload(s)\r\n    }, info);\r\n  }\r\n\r\n  /**\r\n   * Resolves PAT (Point After Touchdown) and restart logic\r\n   * @param state - Current game state\r\n   * @param side - Team that scored\r\n   * @returns Updated game state and events\r\n   */\r\n  resolvePATAndRestart(state: GameState, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return resolvePATAndRestartExt(state, side, {\r\n      rng: () => this.ctx.rng?.() || Math.random(),\r\n      attemptPatInternal: (r) => attemptPatInternal(r as any),\r\n      scoringSideToDelta: (s, p) => scoringSideToDelta(s, p),\r\n      isTrailing: (s, score) => isTrailing(s, score),\r\n      performKickoff: (st, type, kicking) => this.performKickoff(st, type, kicking),\r\n      ...(this.ctx.policy?.choosePAT ? { choosePAT: this.ctx.policy.choosePAT.bind(this.ctx.policy) } : {}),\r\n      ...(this.ctx.policy?.chooseKickoffType ? { chooseKickoffType: this.ctx.policy.chooseKickoffType.bind(this.ctx.policy) } : {}),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attempts a field goal\r\n   * @param state - Current game state\r\n   * @param attemptYards - Distance of field goal attempt\r\n   * @param side - Team attempting the field goal\r\n   * @returns Updated game state and events\r\n   */\r\n  attemptFieldGoal(state: GameState, attemptYards: number, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return attemptFieldGoalFlow(state, attemptYards, side, {\r\n      rng: () => this.ctx.rng?.() || Math.random(),\r\n      attemptFieldGoalKick: (r, y) => (require('../../rules/special/PlaceKicking')).attemptFieldGoalKick(r as any, y),\r\n      scoringSideToDelta: (s, p) => scoringSideToDelta(s, p),\r\n      randomHash: () => randomHash(this.ctx.rng),\r\n      formatClock: (n) => formatClock(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      performKickoff: (st, type, kicking) => this.performKickoff(st, type, kicking),\r\n      hudPayload: (s) => this.hudPayload(s),\r\n      timeKeepingFieldGoalSeconds: (this.ctx.timeKeeping || DEFAULT_TIME_KEEPING_CONST).fieldgoal,\r\n      missedFieldGoalSpot: (args, y) => (require('../../rules/Spots')).missedFieldGoalSpot(args as any, y),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resolves safety restart after a safety\r\n   * @param state - Current game state\r\n   * @param conceding - Team that conceded the safety\r\n   * @returns Updated game state and events\r\n   */\r\n  resolveSafetyRestart(state: GameState, conceding: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return resolveSafetyRestartExt(state, conceding, {\r\n      ...(this.ctx.policy?.chooseSafetyFreeKick ? { chooseSafetyFreeKick: this.ctx.policy.chooseSafetyFreeKick.bind(this.ctx.policy) } : {}),\r\n      isLeading: (s, score) => isLeading(s, score),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Performs a kickoff\r\n   * @param state - Current game state\r\n   * @param type - Type of kickoff (normal or onside)\r\n   * @param kicking - Team performing the kickoff\r\n   * @returns Updated game state and events\r\n   */\r\n  performKickoff(state: GameState, type: 'normal'|'onside', kicking: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return performKickoffExt(state, type, kicking, {\r\n      rng: this.ctx.rng,\r\n      timeKeeping: this.ctx.timeKeeping,\r\n      isLeading: (s, score) => isLeading(s, score),\r\n      isTied: (score) => isTied(score),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n    });\r\n  }\r\n\r\n  // Private helper methods\r\n\r\n  private beginDriveIfNeeded(state: GameState, events: FlowEvent[]): void {\r\n    this.tracker.beginDriveIfNeeded(state, events, (p, b) => formatTeamYardLine(p, b));\r\n  }\r\n\r\n  private endDriveSummaryIfAny(state: GameState, events: FlowEvent[], reason: string): void {\r\n    this.tracker.endDriveSummaryIfAny(state, events, reason);\r\n  }\r\n\r\n  private hudPayload(s: GameState) {\r\n    return hudPayloadExt(s);\r\n  }\r\n\r\n  private determineTempoForPlay(pre: GameState): TempoStrategy {\r\n    const preDiff = pre.score.player - pre.score.ai;\r\n    const tempoCtx: TempoContext = {\r\n      quarter: pre.quarter,\r\n      clock: pre.clock,\r\n      diff: (pre.possession === 'player') ? preDiff : -preDiff,\r\n      side: pre.possession\r\n    };\r\n\r\n    return this.ctx.policy?.chooseTempo ?\r\n      this.ctx.policy.chooseTempo(tempoCtx) as TempoStrategy :\r\n      determineTempo(tempoCtx);\r\n  }\r\n\r\n  private handlePenalty(pre: GameState, res: any, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const outcome: any = res.outcome;\r\n    const admin: AdminResult = administerPenalty({\r\n      prePlayState: pre,\r\n      postPlayState: pre,\r\n      offenseGainedYards: 0,\r\n      outcome,\r\n      inTwoMinute: isTwoMinute(pre.quarter, pre.clock),\r\n      wasFirstDownOnPlay: false,\r\n    });\r\n\r\n    const pen = outcome.penalty as { on: 'offense'|'defense'; yards: number; firstDown?: boolean };\r\n    const decidingSide: TeamSide = pen.on === 'defense' ? pre.possession : (pre.possession === 'player' ? 'ai' : 'player');\r\n\r\n    // If AI decides, pick immediately using hint (default accept on tie)\r\n    if (decidingSide === 'ai') {\r\n      const decision: 'accept'|'decline' = admin.decisionHint === 'decline' ? 'decline' : 'accept';\r\n      const fin = this.finalizePenaltyDecision(decision === 'accept' ? admin.accepted : admin.declined, decision, admin.adminMeta, { on: pen.on, yards: pen.yards });\r\n      const nextState = fin.state as GameState & { openingKickTo?: TeamSide; untimedDownScheduled?: boolean };\r\n      events.push(...fin.events);\r\n      events.push({ type: 'hud', payload: this.hudPayload(nextState) });\r\n      return { state: nextState, events };\r\n    }\r\n\r\n    // Human decides: emit choice-required and hold state\r\n    const payload = {\r\n      side: 'player' as const,\r\n      summary: { down: pre.down, toGo: pre.toGo, ballOn: pre.ballOn, quarter: pre.quarter, clock: pre.clock, possession: pre.possession },\r\n      prePlay: { down: pre.down, toGo: pre.toGo, ballOn: pre.ballOn },\r\n      accepted: admin.accepted,\r\n      declined: admin.declined,\r\n      penalty: { on: pen.on, yards: pen.yards, firstDown: pen.firstDown },\r\n      meta: {\r\n        halfDistanceCapped: admin.adminMeta.halfDistanceCapped,\r\n        measuredFromMidfieldForLG: admin.adminMeta.measuredFromMidfieldForLG,\r\n        spotBasis: admin.adminMeta.spotBasis,\r\n        untimedDownScheduled: admin.adminMeta.untimedDownScheduled,\r\n      },\r\n    };\r\n    events.push({ type: 'choice-required', choice: 'penaltyAcceptDecline', data: payload });\r\n    events.push({ type: 'hud', payload: this.hudPayload(pre) });\r\n    return { state: pre, events };\r\n  }\r\n\r\n  private narratePlayResult(pre: GameState, next: GameState, input: PlayInput, res: any, events: FlowEvent[], isPuntCard: boolean): void {\r\n    try {\r\n      // Skip generic summary for explicit punt handling to avoid duplication and misleading 'Play' result\r\n      const puntSummarySkip = isPuntCard && pre.down === 4;\r\n      if (!puntSummarySkip) {\r\n        const summary = this.buildResultSummary(pre, next, res.outcome as Outcome | undefined, { td: Boolean(res.touchdown), safety: Boolean(res.safety) }, String(input.playLabel), String(input.defenseLabel));\r\n        this.tracker.incrementPlayInDrive();\r\n        this.tracker.incrementRunOrPassByLabel(String(input.playLabel || ''));\r\n        const call = this.buildBroadcastCall(pre, next, input, res.outcome as any);\r\n        events.push({ type: 'log', message: `Brad: ${call.pbp}` });\r\n        if (call.analyst && call.analyst.trim()) events.push({ type: 'log', message: `Rob: ${call.analyst}` });\r\n        events.push({ type: 'log', message: '────────' });\r\n      }\r\n    } catch (error) {\r\n      // Silently handle narration errors to prevent game flow interruption\r\n    }\r\n  }\r\n\r\n  private updateLastNotes(pre: GameState, input: PlayInput): void {\r\n    try {\r\n      const yardsToGoal = pre.possession === 'player' ? (100 - pre.ballOn) : pre.ballOn;\r\n      const abs = pre.ballOn;\r\n      const acrossMid = (pre.possession === 'player') ? abs >= 50 : abs <= 50;\r\n      const nearMid = abs >= 45 && abs <= 55;\r\n      const backedUp = (pre.possession === 'player') ? abs <= 10 : abs >= 90;\r\n      let zone: string | null = null;\r\n      if (yardsToGoal <= 10 && pre.toGo >= yardsToGoal) zone = 'GoalToGo';\r\n      else if (yardsToGoal <= 20) zone = 'RedZone';\r\n      else if (nearMid) zone = 'NearMid';\r\n      else if (acrossMid) zone = 'AcrossMid';\r\n      else if (backedUp) zone = 'BackedUp';\r\n      const inRange = (yardsToGoal + 17) <= 45;\r\n      this.tracker.setLastNotesForSide(pre.possession, { zone, fgInRange: inRange, defense: String(input.defenseLabel || '') });\r\n    } catch (error) {\r\n      // Silently handle note update errors\r\n    }\r\n  }\r\n\r\n  private handleTouchdown(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    next.awaitingPAT = true;\r\n    const side: TeamSide = pre.possession;\r\n    events.push({ type: 'log', message: 'Touchdown!' });\r\n    events.push({ type: 'score', payload: { ...scoringSideToDelta(side, 6), kind: 'TD' } });\r\n    events.push({ type: 'vfx', payload: { kind: 'td' } });\r\n    const pat = this.resolvePATAndRestart(next, side);\r\n    next = pat.state as any;\r\n    events.push(...pat.events);\r\n    events.push({ type: 'log', message: `Brad: Scoreboard — HOME ${next.score.player} — AWAY ${next.score.ai} — Q${next.quarter} ${formatClock(next.clock)}` });\r\n    events.push({ type: 'log', message: '────────' });\r\n    this.endDriveSummaryIfAny(next, events, 'touchdown');\r\n    return { state: next, events };\r\n  }\r\n\r\n  private handleSafety(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const conceding: TeamSide = pre.possession;\r\n    const scoringSide: TeamSide = conceding === 'player' ? 'ai' : 'player';\r\n    events.push({ type: 'log', message: 'Brad: Safety!' });\r\n    events.push({ type: 'score', payload: { ...scoringSideToDelta(scoringSide, 2), kind: 'Safety' } });\r\n    events.push({ type: 'log', message: `Brad: Scoreboard — HOME ${ (scoringSide==='player'? next.score.player+2: next.score.player) } — AWAY ${ (scoringSide==='ai'? next.score.ai+2: next.score.ai) } — safety awarded` });\r\n    const safetyRes = this.resolveSafetyRestart(next, conceding);\r\n    next = safetyRes.state as any;\r\n    events.push(...safetyRes.events);\r\n    events.push({ type: 'log', message: '────────' });\r\n    this.endDriveSummaryIfAny(next, events, 'safety');\r\n    return { state: next, events };\r\n  }\r\n\r\n  private isTurnoverOnDowns(pre: GameState, outcome: Outcome | undefined): boolean {\r\n    if (pre.down !== 4 || !outcome) return false;\r\n\r\n    return (\r\n      outcome.category === 'incomplete' ||\r\n      ((outcome.category === 'loss' || outcome.category === 'gain') && (outcome.yards || 0) < pre.toGo)\r\n    );\r\n  }\r\n\r\n  private handleTurnoverOnDowns(pre: GameState, next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const spot = formatTeamYardLine(pre.possession, pre.ballOn);\r\n    events.push({ type: 'log', message: `Brad: ${formatOrdinal(pre.down)} & ${pre.toGo} — stuffed — turnover on downs at ${spot}` });\r\n    next.possession = pre.possession === 'player' ? 'ai' : 'player';\r\n    next.down = 1; next.toGo = 10;\r\n    this.endDriveSummaryIfAny(next, events, 'downs');\r\n    events.push({ type: 'log', message: '────────' });\r\n    return { state: next, events };\r\n  }\r\n\r\n  private handleQuarterTransition(next: GameState, events: FlowEvent[]): { state: GameState; events: FlowEvent[] } {\r\n    const endedQuarter = next.quarter;\r\n    events.push({ type: 'endOfQuarter', payload: { quarter: endedQuarter } });\r\n\r\n    // Quarter recap: short narrative with basic stats\r\n    try {\r\n      const qs = this.tracker.getQuarterStatsRef();\r\n      const runs = qs.runs;\r\n      const passes = qs.passes;\r\n      const s = `End of Q${endedQuarter} — HOME ${next.score.player} — AWAY ${next.score.ai}.`;\r\n      const brad = `${s} Pace so far: ${runs} runs, ${passes} passes.`;\r\n      const rob = (runs > passes) ? 'Ground games setting tone; watch for play action next quarter.' : (passes > runs ? 'Air it out approach; watch the pass rush fatigue.' : 'Balanced so far; both sides settling in.');\r\n      events.push({ type: 'log', message: `Brad: ${brad}` });\r\n      events.push({ type: 'log', message: `Rob: ${rob}` });\r\n    } catch (error) {\r\n      // Silently handle quarter recap errors\r\n    }\r\n\r\n    // Reset quarter counters\r\n    const qs = this.tracker.getQuarterStatsRef();\r\n    qs.quarter = endedQuarter + 1;\r\n    qs.runs = 0; qs.passes = 0; qs.pointsHome = 0; qs.pointsAway = 0; qs.explosives = 0; qs.turnovers = 0;\r\n\r\n    if (endedQuarter === 2) {\r\n      // Halftime then start Q3 with kickoff\r\n      events.push({ type: 'halftime' });\r\n      events.push({ type: 'log', message: 'Start of quarter 3.' });\r\n      next.quarter = 3;\r\n      next.clock = 15 * 60;\r\n      const openingReceiver: TeamSide = (next as any).openingKickTo || 'player';\r\n      const kickTeam: TeamSide = openingReceiver;\r\n      const ko = this.performKickoff(next, 'normal', kickTeam);\r\n      next = ko.state as any;\r\n      events.push(...ko.events);\r\n    } else if (endedQuarter === 4) {\r\n      next.gameOver = true;\r\n      events.push({ type: 'final', payload: { score: next.score } });\r\n    } else {\r\n      // Q1->Q2 or Q3->Q4\r\n      events.push({ type: 'log', message: `Brad: Start of quarter ${endedQuarter + 1}.` });\r\n      next.quarter = endedQuarter + 1;\r\n      next.clock = 15 * 60;\r\n    }\r\n\r\n    events.push({ type: 'log', message: '────────' });\r\n    return { state: next, events };\r\n  }\r\n\r\n  private buildBroadcastCall(pre: GameState, next: GameState, input: PlayInput, outcome: Outcome | undefined): { pbp: string; analyst: string } {\r\n    return buildBroadcastCallExt(pre, next, input, outcome, {\r\n      rng: this.ctx.rng,\r\n      playInDrive: this.tracker.getPlayInDrive(),\r\n      formatClock: (n) => formatClock(n),\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      formatPossessionSpotForBroadcast: (p, b) => formatPossessionSpotForBroadcast(p, b),\r\n      quarterStats: this.tracker.getQuarterStatsRef(),\r\n    });\r\n  }\r\n\r\n  private buildResultSummary(pre: GameState, next: GameState, outcome: Outcome | undefined, flags: { td?: boolean; safety?: boolean }, currentPlayLabel: string, defenseLabel: string): { result: string; notes: string[] } {\r\n    return buildResultSummaryExt(pre, next, outcome, flags, currentPlayLabel, defenseLabel, {\r\n      formatOrdinal: (n) => formatOrdinal(n),\r\n      formatTeamYardLine: (p, b) => formatTeamYardLine(p, b),\r\n      rng: () => this.ctx.rng?.() || Math.random(),\r\n      getLastNotesForSide: (side) => this.tracker.getLastNotesForSide(side),\r\n      setLastNotesForSide: (side, notes) => this.tracker.setLastNotesForSide(side, notes),\r\n    });\r\n  }\r\n\r\n  private chooseCommentaryLines(notes: string[]): { pbp: string; analyst: string } {\r\n    return chooseCommentaryLinesExt(notes);\r\n  }\r\n}\r\n","/**\r\n * GameFlow - Main game flow orchestration class\r\n *\r\n * This class serves as a facade/wrapper around the modular GameFlowCore,\r\n * maintaining backward compatibility while delegating to the new modular structure.\r\n *\r\n * The class has been significantly reduced from 442 lines to focus only on:\r\n * - Public API compatibility\r\n * - Delegation to GameFlowCore\r\n * - Maintaining existing interface contracts\r\n */\r\n\r\nimport type { GameState, TeamSide } from '../domain/GameState';\r\nimport type { FlowEvent, PlayInput, FlowContext } from './types';\r\nimport { GameFlowCore } from './core/GameFlowCore';\r\n\r\n// Re-export types for external API compatibility\r\nexport type { FlowEvent, PlayInput, FlowContext };\r\n\r\n/**\r\n * Main game flow orchestration class\r\n * Coordinates all aspects of game flow including plays, scoring, penalties, and time management\r\n */\r\nexport class GameFlow {\r\n  private core: GameFlowCore;\r\n\r\n  constructor(private ctx: FlowContext) {\r\n    this.core = new GameFlowCore(ctx);\r\n  }\r\n\r\n  /**\r\n   * Resolves a snap (play) and returns the resulting game state and events\r\n   * @param state - Current game state\r\n   * @param input - Play input containing deck, play label, and defense\r\n   * @returns Updated game state and generated events\r\n   */\r\n  resolveSnap(state: GameState, input: PlayInput): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolveSnap(state, input);\r\n  }\r\n\r\n  /**\r\n   * Finalizes a penalty decision and returns the resulting state and events\r\n   * @param chosen - The chosen game state (accepted or declined penalty)\r\n   * @param decision - Whether penalty was accepted or declined\r\n   * @param meta - Penalty administration metadata\r\n   * @param info - Optional penalty information\r\n   * @returns Updated game state and events\r\n   */\r\n  finalizePenaltyDecision(chosen: GameState, decision: 'accept'|'decline', meta: any, info?: { on: 'offense'|'defense'; yards: number }): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.finalizePenaltyDecision(chosen, decision, meta, info);\r\n  }\r\n\r\n  /**\r\n   * Resolves PAT (Point After Touchdown) and restart logic\r\n   * @param state - Current game state\r\n   * @param side - Team that scored\r\n   * @returns Updated game state and events\r\n   */\r\n  resolvePATAndRestart(state: GameState, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolvePATAndRestart(state, side);\r\n  }\r\n\r\n  /**\r\n   * Attempts a field goal\r\n   * @param state - Current game state\r\n   * @param attemptYards - Distance of field goal attempt\r\n   * @param side - Team attempting the field goal\r\n   * @returns Updated game state and events\r\n   */\r\n  attemptFieldGoal(state: GameState, attemptYards: number, side: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.attemptFieldGoal(state, attemptYards, side);\r\n  }\r\n\r\n  /**\r\n   * Resolves safety restart after a safety\r\n   * @param state - Current game state\r\n   * @param conceding - Team that conceded the safety\r\n   * @returns Updated game state and events\r\n   */\r\n  resolveSafetyRestart(state: GameState, conceding: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.resolveSafetyRestart(state, conceding);\r\n  }\r\n\r\n  /**\r\n   * Performs a kickoff\r\n   * @param state - Current game state\r\n   * @param type - Type of kickoff (normal or onside)\r\n   * @param kicking - Team performing the kickoff\r\n   * @returns Updated game state and events\r\n   */\r\n  performKickoff(state: GameState, type: 'normal'|'onside', kicking: TeamSide): { state: GameState; events: FlowEvent[] } {\r\n    return this.core.performKickoff(state, type, kicking);\r\n  }\r\n}\r\n"],"names":["NORMAL_KICKOFF_TABLE","ONSIDE_KICK_TABLE","parseKickoffYardLine","res","rng","resolveLongGain","resolveKickoff","opts","roll","rollD6","entry","turnover","penalty","reroll","res2","parsed","finalYard","PUNT_DISTANCE_TABLE","PUNT_RETURN_TABLE","resolvePunt","ctx","puntingIsPlayer","distRoll","puntDistance","ballOn","retRoll","ret","returnYards","fumbleTurnover","PLACE_KICK_TABLE","attemptPAT","attemptFieldGoal","attemptYards","ay","col","chooseCommentaryLines","notes","cleaned","n","isFormation","s","isBookkeeping","notFormationOrBook","candidates","actionRe","defenseRe","pbp","analyst","buildBroadcastCall","pre","next","input","outcome","deps","downText","spotPhrase","def","off","clock","scoreText","hash","mod","numbersSide","formation","defLook","motion","isRun","isPass","action","resultPart","y","runPhrases","passPhrases","pick","arr","offenseTeam","opener","choices","presnap","snap","nextDownText","nextSpot","reset","pressure","crowd","buildResultSummary","flags","currentPlayLabel","defenseLabel","homeAway","side","spotText","yardsToGoal","abs","acrossMid","nearMid","backedUp","zone","last","inRange","shortYardage","isSneak","passHeavy","offFormation","playLabel","dnote","dl","lastDef","isBlitz","inc","kind","blitzTag","firstDownNow","verbsGain","verbsLoss","path","start","mid","midText","end","conversion","retText","endSpot","looseAt","on","yards","DriveTracker","val","label","state","events","formatTeamYardLine","yard","offense","goodField","rob","reason","plays","gained","theme","team","quickStrike","grinding","brad","wx","wxLine","fatigue","performKickoff","type","kicking","timeOff","DEFAULT_TIME_KEEPING","onside","kickerLeadingOrTied","ko","receiver","absYard","dd","receiverSide","yardText","traj","angle","caughtAt","advancement","bigReturn","hugeReturn","normalPaths","stuffedPaths","handleFourthDownPunt","puntingTeam","punt","fromYL","receiving","toYL","retPath","resolvePATAndRestart","diff","late","koType","crossedTwoMinute","miss","spotEnd","finalizePenaltyDecision","chosen","decision","meta","info","msg","untimedNow","endedQuarter","resolveSafetyRestart","conceding","leading","choice","hudPayload","isTwoMinute","quarter","scoringSideToDelta","points","attemptPatInternal","rollD6PK","randomHash","r","isLeading","score","isTrailing","isTied","formatOrdinal","formatClock","totalSeconds","m","ss","formatPossessionSpotForBroadcast","possessing","own","clamp","calculateTimeOff","timeKeeping","tempo","hadUntimed","possessionChanged","inTwoBefore","wasFirstDown","timeOffWithTwoMinute","applyTimeOff","timeResult","determineTempo","policy","lateGame","trailing","GameFlowCore","isPuntCard","resolvePlayCore","handled","p","b","ev","finalizePenaltyDecisionExt","resolvePATAndRestartExt","st","attemptFieldGoalFlow","DEFAULT_TIME_KEEPING_CONST","args","resolveSafetyRestartExt","performKickoffExt","hudPayloadExt","preDiff","tempoCtx","admin","administerPenalty","pen","fin","nextState","payload","summary","call","pat","scoringSide","safetyRes","spot","qs","runs","passes","kickTeam","buildBroadcastCallExt","buildResultSummaryExt","chooseCommentaryLinesExt","GameFlow"],"mappings":"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"}