{"version":3,"file":"EngineIndicator-BBoOvHZM.js","sources":["../../src/ui/EngineIndicator.ts"],"sourcesContent":["import { EventBus } from '../utils/EventBus';\r\nimport { getCurrentEngine, getCurrentEngineInfo } from '../config/FeatureFlags';\r\n\r\n/**\r\n * Engine indicator component that displays the current engine type during gameplay\r\n */\r\nexport function registerEngineIndicator(bus: EventBus): void {\r\n  // Create engine indicator element\r\n  const createIndicator = (): HTMLElement => {\r\n    const container = document.createElement('div');\r\n    container.id = 'engine-indicator';\r\n    container.className = 'engine-indicator';\r\n    container.style.cssText = `\r\n      position: fixed;\r\n      top: 10px;\r\n      right: 10px;\r\n      background: rgba(0, 0, 0, 0.8);\r\n      color: white;\r\n      padding: 8px 12px;\r\n      border-radius: 4px;\r\n      font-family: monospace;\r\n      font-size: 12px;\r\n      z-index: 1000;\r\n      border: 2px solid;\r\n      opacity: 0.9;\r\n      transition: all 0.3s ease;\r\n    `;\r\n\r\n    const updateDisplay = () => {\r\n      const engineInfo = getCurrentEngineInfo();\r\n      const currentEngine = getCurrentEngine();\r\n\r\n      // Set border color based on engine type\r\n      const borderColor = currentEngine === 'dice' ? '#00ff00' : '#ffaa00';\r\n      container.style.borderColor = borderColor;\r\n\r\n      container.innerHTML = `\r\n        <div style=\"font-weight: bold; margin-bottom: 4px;\">\r\n          ${engineInfo.name}\r\n        </div>\r\n        <div style=\"font-size: 10px; opacity: 0.8;\">\r\n          ${engineInfo.description}\r\n        </div>\r\n        <div style=\"font-size: 10px; margin-top: 4px; opacity: 0.7;\">\r\n          Engine: ${currentEngine}\r\n        </div>\r\n      `;\r\n    };\r\n\r\n    // Initial display\r\n    updateDisplay();\r\n\r\n    // Listen for engine changes\r\n    bus.on('ui:engineChanged', () => {\r\n      updateDisplay();\r\n    });\r\n\r\n    return container;\r\n  };\r\n\r\n  // Add to DOM if document is available\r\n  if (typeof document !== 'undefined') {\r\n    // Check if indicator already exists\r\n    const existing = document.getElementById('engine-indicator');\r\n    if (existing) {\r\n      existing.remove();\r\n    }\r\n\r\n    const indicator = createIndicator();\r\n    document.body.appendChild(indicator);\r\n  }\r\n\r\n  // Listen for feature flag changes to update display\r\n  bus.on('ui:engineChanged', ({ engine }: { engine: string }) => {\r\n    console.log(`Engine changed to: ${engine}`);\r\n  });\r\n}\r\n\r\n/**\r\n * Update engine indicator visibility based on dev mode state\r\n */\r\nexport function updateEngineIndicatorVisibility(devModeEnabled: boolean): void {\r\n  if (typeof document === 'undefined') return;\r\n\r\n  const indicator = document.getElementById('engine-indicator');\r\n  if (indicator) {\r\n    indicator.style.display = devModeEnabled ? 'block' : 'none';\r\n  }\r\n}\r\n\r\n/**\r\n * Remove engine indicator from DOM\r\n */\r\nexport function removeEngineIndicator(): void {\r\n  if (typeof document === 'undefined') return;\r\n\r\n  const indicator = document.getElementById('engine-indicator');\r\n  if (indicator) {\r\n    indicator.remove();\r\n  }\r\n}\r\n"],"names":["registerEngineIndicator","bus","createIndicator","container","updateDisplay","engineInfo","getCurrentEngineInfo","currentEngine","getCurrentEngine","borderColor","existing","indicator","engine"],"mappings":"+CAMO,SAASA,EAAwBC,EAAqB,CAE3D,MAAMC,EAAkB,IAAmB,CACzC,MAAMC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,GAAK,mBACfA,EAAU,UAAY,mBACtBA,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgB1B,MAAMC,EAAgB,IAAM,CAC1B,MAAMC,EAAaC,EAAA,EACbC,EAAgBC,EAAA,EAGhBC,EAAcF,IAAkB,OAAS,UAAY,UAC3DJ,EAAU,MAAM,YAAcM,EAE9BN,EAAU,UAAY;AAAA;AAAA,YAEhBE,EAAW,IAAI;AAAA;AAAA;AAAA,YAGfA,EAAW,WAAW;AAAA;AAAA;AAAA,oBAGdE,CAAa;AAAA;AAAA,OAG7B,EAGA,OAAAH,EAAA,EAGAH,EAAI,GAAG,mBAAoB,IAAM,CAC/BG,EAAA,CACF,CAAC,EAEMD,CACT,EAGA,GAAI,OAAO,SAAa,IAAa,CAEnC,MAAMO,EAAW,SAAS,eAAe,kBAAkB,EACvDA,GACFA,EAAS,OAAA,EAGX,MAAMC,EAAYT,EAAA,EAClB,SAAS,KAAK,YAAYS,CAAS,CACrC,CAGAV,EAAI,GAAG,mBAAoB,CAAC,CAAE,OAAAW,KAAiC,CAC7D,QAAQ,IAAI,sBAAsBA,CAAM,EAAE,CAC5C,CAAC,CACH"}